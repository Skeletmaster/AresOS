# This is a file describing a standard autoconfiguration, do not edit.
# See custom/sample.conf for a more generic template and explanation on the syntax.

name: ui_cu_autoconf_pvp_ecu

slots:
    core:
        class: CoreUnit
    antigrav:
        class: AntiGravityGeneratorUnit
    gyro:
        class: GyroUnit

handlers:
    unit:
        onStart:
            lua: |
                Nav = Navigator.new(system, core, unit)
                planetInfluenceThreshold = 0.6
                if antigrav ~= nil then
                    antigrav.activate()
                    antigrav.showWidget()
                end
                if vec3(construct.getWorldVelocity()):len() > 100 then unit.exit() end

    system:
        onFlush:
            lua: |
                if vec3(construct.getWorldVelocity()):len() > 100 then unit.exit() end
                local verticalAutoLandingSpeed = 20 --export: Vertical auto landing speec in km/h
                local power = 3
                local worldUp = vec3(construct.getWorldOrientationUp())
                local worldForward = vec3(construct.getWorldOrientationForward())
                local worldRight = vec3(construct.getWorldOrientationRight())

                -- are we in deep space or are we near a planet ?
                local planetInfluence = unit.getClosestPlanetInfluence()

                -- cancel rotation
                local worldAngularVelocity = vec3(construct.getWorldAngularVelocity())
                angularAcceleration = - power * worldAngularVelocity


                -- immobilize ship when not
                targetVelocity = vec3()

                Nav:setEngineCommand('torque', vec3(), angularAcceleration)
                stabilization =  power * (targetVelocity - vec3(construct.getWorldVelocity()))
                Nav:setEngineCommand('brake', stabilization -vec3(construct.getWorldAcceleration()) *5, vec3(), false)
        onUpdate:
            lua: |
                local accelThreshold = 0.1
                local speedThreshold = 0.1

                -- auto stopping mechanism when immobile and close to planet
                local accel = vec3(construct.getWorldAcceleration()):len()
                local speed = vec3(construct.getWorldVelocity()):len()
                if accel < accelThreshold
                    and speed < speedThreshold
                    and unit.getClosestPlanetInfluence() > planetInfluenceThreshold
                then
                    unit.exit()
                end
