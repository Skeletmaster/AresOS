name: Ares_GunnerV0.9
slots:
  databank:
    class: DataBank
  transponder:
    class: TransponderUnit
  weapon:
    class: WeaponUnit
    select: manual
  radar:
    class: RadarPVPUnit
    select: manual
  shieldGenerator:
    class: ShieldGeneratorUnit
  core:
    class: CoreUnit
handlers:
  unit:
    onStart:
      lua: |
        packagePrefix = "autoconf.custom.AresOS."
        package.preload[packagePrefix.."combatscreen"] = function()
           local self={}self.version=0.9;self.loadPrio=1000;self.viewTags={"screen"}function self:valid(a)return unitType=="gunner"end;weaponHits={}weaponMisses={}elementDestructions={}kills={}damage={}log={}local b=getPlugin("RadarWidget",true,"AQN5B4-@7gSt1W?;")function self:register(c)_ENV=c;if not self:valid(auth)then return end;register:addAction("OnHit","combatData",function(d,e,f)if weaponHits[f.getLocalId()]==nil then weaponHits[f.getLocalId()]=0 end;weaponHits[f.getLocalId()]=weaponHits[f.getLocalId()]+1;if damage[d]==nil then damage[d]=0 end;damage[d]=damage[d]+e;table.insert(log,"Hit: "..round(e))end)register:addAction("OnElementDestroyed","combatData",function(d,g,f)if elementDestructions[d]==nil then elementDestructions[d]={}end;table.insert(elementDestructions[d],g)table.insert(log,"Element: "..system.getItem(g).displayNameWithSize)end)register:addAction("OnDestroyed","combatData",function(d,f)table.insert(kills,d)table.insert(log,"Killed: "..tostring(b.CodeList[d]))end)register:addAction("OnMissed","combatData",function(d,f)if weaponMisses[f.getLocalId()]==nil then weaponMisses[f.getLocalId()]=0 end;weaponMisses[f.getLocalId()]=weaponMisses[f.getLocalId()]+1;table.insert(log,"Missed: "..tostring(b.CodeList[d]))end)local h=getPlugin("screener",true)if h~=nil then h:addScreen("screen1third",{offsetx=0.01,offsety=0.01,width=0.2,height=0.25,perspective="third",parent="mainScreenThird"})h:registerDefaultScreen("screen1third","combatData")h:addView("combatData",self)end;local mscreener=getPlugin("menuscreener",true)if mscreener~=nil then mscreener:addMenu("Commander",menuscreen)end end;local function menuscreen(i,j,k,l)HTML=[[
            <rect x="66%" y="9%" rx="2" ry="2" width="32%" height="20%" style="fill:#4682B4;fill-opacity:0.35" />
            <text x="70%" y="13%" style="fill:#FFFFFF;font-size:8">Destinations</text>]]HTML=HTML..mscreener:addFancyButton(68,15,28,5,function()system.setWaypoint("::pos{0,0,-91264.7828,408204.8952,40057.4424}")end,"Base",i,j)return HTML end;function self:setScreen()local m=weapon[1].getTargetId()if elementDestructions[m]==nil then elementDestructions[m]={}end;if damage[m]==nil then damage[m]=0 end;local n=0;for o,e in pairs(damage)do n=n+e end;local p=[[
                <svg viewBox="0 0 100 80" style="width:100%;height:100%">
                    <rect x="0%" y="0%" rx="2" ry="2" width="100%" height="80%" style="fill:#4682B4;fill-opacity:0.35" />
                    <text x="5%" y="7.5%" style="fill:#FFFFFF;font-size:5">CombatLog</text>
                    <text x="50%" y="7.5%" style="fill:#FFFFFF;font-size:4">TargetData</text>
                    <text x="50%" y="12%" style="fill:#FFFFFF;font-size:3">Dmg: </text>
                    <text x="50%" y="16%" style="fill:#FFFFFF;font-size:3">DesElements: </text>
                    <text x="80%" y="12%" style="fill:#FFFFFF;font-size:3">]]..round(damage[m])..[[</text>
                    <text x="80%" y="16%" style="fill:#FFFFFF;font-size:3">]]..#elementDestructions[m]..[[</text>
        
                    <text x="50%" y="30%" style="fill:#FFFFFF;font-size:3">TotalDmg: </text>
                    <text x="80%" y="30%" style="fill:#FFFFFF;font-size:3">]]..round(n)..[[</text>
        
                    <text x="50%" y="50%" style="fill:#FFFFFF;font-size:4">WData</text>
                    <text x="65%" y="50%" style="fill:#FFFFFF;font-size:3">Hits</text>
                    <text x="80%" y="50%" style="fill:#FFFFFF;font-size:3">Shots</text>
                ]]local q=4;for r,f in pairs(weapon)do local m=f.getLocalId()if weaponMisses[m]==nil then weaponMisses[m]=0 end;if weaponHits[m]==nil then weaponHits[m]=0 end;local s=weaponHits[m]+weaponMisses[m]local t=100;if s>0 then t=weaponHits[m]/s*100 end;local u=f.getName()local v=string.find(u,"%[")+1;local w=string.find(u,"]")-1;u=string.sub(u,v,w)p=p..[[<text x="50%" y="]]..50+q..[[%" style="fill:#FFFFFF;font-size:3">]]..u..[[: </text>]]p=p..[[<text x="65%" y="]]..50+q..[[%" style="fill:#FFFFFF;font-size:3">]]..round(t,2)..[[%</text>]]p=p..[[<text x="80%" y="]]..50+q..[[%" style="fill:#FFFFFF;font-size:3">]]..s..[[</text>]]q=q+4 end;for x=0,15,1 do if x>=#log then break end;p=p..[[<text x="2%" y="]]..12+x*4 ..[[%" style="fill:#FFFFFF;font-size:3">]]..log[#log-x]..[[</text>]]end;return p..[[</svg>]]end;return self
        
        end
        package.preload[packagePrefix.."WidgetCreator"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;function self:register(c)_ENV=c;if not self:valid(a)then return end;register:addAction("unitOnStart","WidgetCreate",function()self:CreateWidgets()end)end;self.version=0.9;self.loadPrio=20;local d=unit;local e=system;function self:CreateWidgets()self:DestroyWidgets()self.DataIDs={}self.Panels={}if#weapon>0 then if#weapon<=3 then local f=e.createWidgetPanel("")self.Panels[#self.Panels+1]=f;for g=1,#weapon,1 do if#self.DataIDs>=#weapon then break end;local h=e.createWidget(f,"weapon")local i=weapon[g].getWidgetData()table.insert(self.DataIDs,e.createData(i))e.addDataToWidget(self.DataIDs[#self.DataIDs],h)end else local j=math.ceil(#weapon/2)for k=1,2,1 do local f=e.createWidgetPanel("")self.Panels[#self.Panels+1]=f;for g=1,j,1 do local h=e.createWidget(f,"weapon")local i=weapon[#self.DataIDs+1].getWidgetData()table.insert(self.DataIDs,e.createData(i))e.addDataToWidget(self.DataIDs[#self.DataIDs],h)if#self.DataIDs>=#weapon then break end end end end end;local radar=radar[1]if radar~=nil then local f=e.createWidgetPanel("")self.Panels[#self.Panels+1]=f;local h=e.createWidget(f,"radar")local i=radar.getWidgetData()self.RadarDataID=e.createData(i)e.addDataToWidget(self.RadarDataID,h)end end;function self:DestroyWidgets()if self.Panels~=nil then for l,f in pairs(self.Panels)do e.destroyWidgetPanel(f)end end end;return self
        
        end
        package.preload[packagePrefix.."config"] = function()
           local self={}local a=nil;local b={}function self:get(c,d)if a==nil then self:load()end;b[c]=true;if a[c]==nil then return d end;if d~=nil and a[c]==d then a[c]=nil;return d end;return a[c]end;function self:set(c,e,d)if a==nil then self:load()end;b[c]=true;if a[c]~=e then if e==d then a[c]=nil else a[c]=e end;self:save()end end;function self:load()if a==nil then if database~=nil and database.hasKey~=nil and database.hasKey("config"..unitType..unit.getLocalId())==1 then local f=database.getStringValue("config"..unitType..unit.getLocalId())a=json.decode(f)end;if a==nil then a={}end end end;function self:save()if a~=nil then if database~=nil and database.hasKey~=nil then database.setStringValue("config"..unitType..unit.getLocalId(),json.encode(a))end end end;function self:cleanup()if a==nil then return end;local g=false;for h,i in pairs(a)do if b[h]==nil then g=true;a[h]=nil end end;if g then self:save()end end;function self:register(j)_ENV=j;register:addAction("systemStop","configCleanup",function()self:cleanup()end)end;return self
        
        end
        package.preload[packagePrefix.."shortName"] = function()
           local self={}local a={["O"]=true,["Q"]=true,["0"]=true}local b={}self.version=0.9;self.loadPrio=20;local c="AQN5B4-@7gSt1W?;"function self:valid(d)if d~=c then return false end;return unitType=="gunner"end;function addRangeToCharSet(e,f)for g=e,f do local h=string.char(g)if not a[h]then b[#b+1]=h end end end;addRangeToCharSet(48,57)addRangeToCharSet(65,90)kCharSetSize=#b;function getHash(i)i=i>>16~i;i=i*0x45d9f3b;i=i>>16~i;i=i*0x45d9f3b;i=i>>16~i;if i<0 then i=~i end;return i end;function self:getShortName(j)local j=tonumber(j)if j==nil then return""end;local k=getHash(j)%8388593;local e=k*653276%8388593;local f=e*653276%8388593;local h=f*653276%8388593;return b[e%kCharSetSize+1]..b[f%kCharSetSize+1]..b[h%kCharSetSize+1]end;return self
        
        end
        package.preload[packagePrefix.."GunnerHUD"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;self.version=0.9;self.loadPrio=1000;self.viewTags={"hud"}local c=0;local d=0;local e=0;local f=unit;local g=system;function self:register(h)if not self:valid(a)then return end;ownShortName=getPlugin("shortName",true,"AQN5B4-@7gSt1W?;"):getShortName(construct.getId())register:addAction("Enter","Alarm",function(i)c=20;d=i end)register:addAction("OnDestroyed","Kill",function(i)uiDied=true end)local j=getPlugin("screener")if j~=nil then j:registerDefaultScreen("mainScreenThird","GunnerHUD")j:registerDefaultScreen("mainScreenFirst","GunnerHUD")j:addView("GunnerHUD",self)end;register:addAction("option8Start","Vent",function()if shield~=nil then if shield.isVenting()==0 then shield.startVenting()system.playSound("HSC/venting_shield.mp3")else shield.stopVenting()end end end)register:addAction("option9Start","Shildswitch",function()if shield~=nil then uiShieldActive=shield.getState()if uiShieldActive==1 then shield.deactivate()elseif uiShieldActive==0 then shield.activate()end end end)end;function self:setScreen()local k=0;local uiShieldActive=0;if shield~=nil then k=math.ceil(shield.getShieldHitpoints()/shield.getMaxShieldHitpoints()*100)uiShieldActive=shield.isActive()end;local l,m,n,o,p,q,uiDied,r=targetHud()local s=getPlugin("RadarWidget",true,"AQN5B4-@7gSt1W?;")local t,u=getMinAmmo()local v=k;local w=t;local x=0;if core~=nil then x=(1-core.getCoreStressRatio())*100 end;local y;local z="<svg width=\"100%\" height=\"94.5%\" viewBox=\"0 0 1920 1080\" style=\"top:0;left:0\">"z=z.."<rect x=\"52%\" y=\"93.95%\" rx=\"2\" ry=\"2\" width=\"23.15%\" height=\"4.8%\" style=\"fill:#4682B4;fill-opacity:0.35\" />".."<rect x=\"52.2%\" y=\"96.4%\" width=\"7.25%\" height=\"1.9%\" style=\"fill:none;stroke:#FFFFFF;stroke-width:1px\" />".."<rect x=\"59.95%\" y=\"96.4%\" width=\"7.25%\" height=\"1.9%\" style=\"fill:none;stroke:#FFFFFF;stroke-width:1px\" />".."<rect x=\"67.7%\" y=\"96.4%\" width=\"7.25%\" height=\"1.9%\" style=\"fill:none;stroke:#FFFFFF;stroke-width:1px\" />"if shield~=nil then z=z.."<text x=\"52.35%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">Shield ("..round(k,2).."%)</text>"if uiShieldActive==0 then y="#777777"else if v>=66 then y="#009acd"else if v<66 and v>33 then y="#FFA500"end;if v<=33 then y="#FF0000"end end end;for A=0,19,1 do if v>0 then z=z.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..52.35+0.35*A.."%\" y=\"96.7%\" style=\"fill:"..y.."\" />"end;if v<=0 then z=z.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..52.35+0.35*A.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;v=v-5 end end;if core~=nil then z=z.."<text x=\"60.1%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">C. Stress ("..round((1-core.getCoreStressRatio())*100,2).."%)</text>"if x>=100 then y="#32CD32"else if x<100 and x>66 then y="#FFA500"end;if x<=66 then y="#FF0000"end end;for A=0,19,1 do if x>0 then z=z.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..60.1+0.35*A.."%\" y=\"96.7%\" style=\"fill:"..y.."\" />"end;if x<=0 then z=z.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..60.1+0.35*A.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;x=x-5 end end;z=z.."<text x=\"67.85%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">Ammo ("..u..")</text>"if w>33 then y="#CD661D"else if w<=33 then y="#FF0000"end end;for A=0,19,1 do if w>0 then z=z.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..67.85+0.35*A.."%\" y=\"96.7%\" style=\"fill:"..y.."\" />"end;if w<=0 then z=z.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..67.85+0.35*A.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;w=w-5 end;if radar[1].getTargetId()~=0 then local g=s.CodeList[radar[1].getTargetId()]if system.isViewLocked()~=1 then z=z.."<text x=\"49.2%\" y=\"49%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">"..g.."</text>"else z=z.."<text x=\"49%\" y=\"3%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:25px\">"..g.."</text>"end end;local B=""if uiTarget==true then if l<10 then y="#FF0000"elseif l<=30 then y="#FFA500"else y="#32CD32"end;z=z.."<rect x=\""..52 .."%\" y=\"89%\" rx=\"2\" ry=\"2\" width=\"23.15%\" height=\"4.8%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"z=z.."<text x=\""..52+0.5 .."%\" y=\"91.8%\" style=\"fill:#FFFFFF;font-size:12px\">".."Hitchance:".."</text>".."<text x=\""..52+4 .."%\" y=\"92%\" style=\"fill:"..y..";font-size:20px\">"..l.."%</text>"if n==0 then y="#FFA500"elseif n<0 then y="#FF0000"else y="#32CD32"end;z=z.."<text x=\""..59 .."%\" y=\"90.5%\" style=\"fill:#FFFFFF;font-size:12px\">".."Target Speed:".."</text>".."<text x=\""..59+4.5 .."%\" y=\"91%\" style=\"fill:"..y..";font-size:20px\">"..m.."</text>"local C=construct.getMaxSpeed()*3.6-q;if math.abs(C)<500 then y="#FFA500"elseif C<0 then y="#FF0000"else y="#32CD32"end;if radar[1].getConstructKind(p)==5 then z=z.."<text x=\""..59 .."%\" y=\"93.1%\" style=\"fill:#FFFFFF;font-size:12px\">".."   Max Speed:".."</text>".."<text x=\""..59+4.2 .."%\" y=\"93.3%\" style=\"fill:"..y..";font-size:15px\">"..q.."</text>"else z=z.."<text x=\""..59 .."%\" y=\"93.1%\" style=\"fill:#FFFFFF;font-size:12px\">".."   Max Speed:".."</text>".."<text x=\""..59+4.2 .."%\" y=\"93.3%\" style=\"fill:#FFFFFF;font-size:15px\"> Static </text>"end;ammo=r;local D="false"if radar[1].getConstructInfos(p).weapons~=0 then D="true"end;z=z.."<text x=\""..67+0.5 .."%\" y=\"90.5%\" style=\"fill:#FFFFFF;font-size:12px\">".."Weaponised:".."</text>".."<text x=\""..71+0.5 .."%\" y=\"90.5%\" style=\"fill:#FFFFFF;font-size:12px\">"..D.."</text>"z=z.."<text x=\""..67+0.5 .."%\" y=\"93.1%\" style=\"fill:#FFFFFF;font-size:12px\">".."Ammo Typ:".."</text>".."<text x=\""..71+0.5 .."%\" y=\"93.1%\" style=\"fill:#FFFFFF;font-size:12px\">"..ammo.."</text>"if uiDied then system.print("Kill of "..ShipTags[p].." - "..radar[1].getConstructName(p)..": "..system.getWaypointFromPlayerPos())B=[[
        				<style>
        					#KillMarker {display:block; position:absolute; top:0; left:0} 
        				</style>
                        </svg>
                        <svg id="KillMarker" height="100%" width="100%">
                            <circle cx="50%" cy="50%" r="5%" stroke="red" stroke-width="1.5%" fill="none" opacity="0.5"/>
                        </svg>
                    ]]uiDied=false end end;if ownShortName~=nil and system.isViewLocked()~=1 then z=z.."<rect x=\""..69.4 .."%\" y=\"84.1%\" rx=\"2\" ry=\"2\" width=\"5.75%\" height=\"4.75%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"z=z.."<text x=\""..70.4 .."%\" y=\"87.1%\" style=\"fill:#FFFFFF;font-size:20px\">ID: "..ownShortName.."</text>"end;if leaderTag~=nil then local E=findIdbyTag(leaderTag)if E~=nil then local F=radar[1].getConstructDistance(E)/1000;if F<=0 or F==nil then z=z.."<rect x=\""..58 .."%\" y=\"86.1%\" rx=\"2\" ry=\"2\" width=\"11.38%\" height=\"2.75%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"z=z.."<text x=\""..58.4 .."%\" y=\"88%\" style=\"fill:#FF0000;font-size:15px\">Leader is out of Range</text>"else if F<100 then y="#32CD32"elseif F<300 then y="#FFA500"else y="#FF0000"end;z=z.."<rect x=\""..58 .."%\" y=\"86.1%\" rx=\"2\" ry=\"2\" width=\"11.38%\" height=\"2.75%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"z=z.."<text x=\""..58.4 .."%\" y=\"88%\" style=\"fill:#FFFFFF;font-size:15px\">Distance to Leader:</text>"if F<100 then z=z.."<text x=\""..66.3 .."%\" y=\"88%\" style=\"fill:"..y..";font-size:15px\">"..round(F,1).."</text>"z=z.."<text x=\""..68 .."%\" y=\"88%\" style=\"fill:#FFFFFF;font-size:15px\">km</text>"else z=z.."<text x=\""..66.3 .."%\" y=\"88%\" style=\"fill:"..y..";font-size:15px\">"..round(F/200,1).."</text>"z=z.."<text x=\""..68 .."%\" y=\"88%\" style=\"fill:#FFFFFF;font-size:15px\">su</text>"end end else z=z.."<rect x=\""..58 .."%\" y=\"86.1%\" rx=\"2\" ry=\"2\" width=\"11.38%\" height=\"2.75%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"z=z.."<text x=\""..58.4 .."%\" y=\"88%\" style=\"fill:#FF0000;font-size:15px\">Leader is out of Range</text>"end end;z=z.."</g>"z=z.."<rect x=\"28.25%\" y=\"91.95%\" rx=\"2\" ry=\"2\" width=\"8.2%\" height=\"6.8%\" style=\"fill:#4682B4;fill-opacity:0.35\" />"if uiShieldActive==1 then colorShield="#FFFFFF"else colorShield="#FF0000"end;if isVenting==0 then colorVenting="#FFFFFF"else colorVenting="#00FF00"end;if shield~=nil then z=z.."<text x=\"28.5%\" y=\"93.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:"..colorShield..";font-size:15px\">".."Shield on/off(Alt+9) </text>".."<text x=\"28.5%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:"..colorVenting..";font-size:15px\">".."Venting (Alt+8)  "..round(shield.getVentingCooldown(),0).." </text>"end;z=z.."<text x=\"28.5%\" y=\"97.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">".."Radar (Alt+3) </text>"z=z.."</svg>"local G,H=pcall(AlarmHud)if not G then H=""end;return z..B..StatsHud()..H end;function ConeHUD()local D=weapon[1]svg=[[ 
                <svg id="StatsHud" height="100%" width="100%" viewBox="0 0 1920 1080">]]local I=D.getOptimalDistance()print(I)if D.getTargetId()>0 then I=radar[1].getConstructDistance(D.getTargetId())end;local J=construct.getWorldPosition()local K=construct.getWorldForward()local L=construct.getWorldOrientationRight()local M=math.tan(D.getOptimalAimingCone())*I;local N=library.getPointOnScreen({J[1]+K[1]*I,J[2]+K[2]*I,J[3]+K[3]*I})local O=library.getPointOnScreen({J[1]+K[1]*I+L[1]*M,J[2]+K[2]*I+L[2]*M,J[3]+K[3]*I+L[3]*M})if N[1]==0 and N[2]==0 and N[3]==0 then N={-10,-10,-10}O={-10,-10,-10}end;print(O)svg=svg.."<circle style=\"fill:#00FF00;opacity:0.1;\" cx=\""..N[1]*1920 .."\" cy=\""..N[2]*1080 .."\" r=\""..0.3*1080 .."\" />"svg=svg.."<circle style=\"fill:#00FF00;opacity:0.1;\" cx=\""..O[1]*1920 .."\" cy=\""..O[2]*1080 .."\" r=\""..0.1*1080 .."\" />"return svg.."</svg>"end;function StatsHud()local s=getPlugin("RadarWidget",true,"AQN5B4-@7gSt1W?;")local P=[[
        		<style>
        			#StatsHud {display:block; position:absolute; top:0; left:0} 
        			#StatsHud text {fill:aqua;font-family:Montserrat;fill:#FFFFFF;font-size:12px}
        		</style>
        
                <svg id="StatsHud" height="100%" width="100%" viewBox="0 0 1920 1080">]]P=P.."<rect x=\"76.06%\" y=\"93.95%\" rx=\"2\" ry=\"2\" width=\"15%\" height=\"4.8%\" style=\"fill:#4682B4;fill-opacity:0.35\" />"P=P.."<text x=\"76.6%\" y=\"95.2%\">Type</text>"P=P.."<text x=\"76.6%\" y=\"96.7%\">Hostile</text>"P=P.."<text x=\"76.6%\" y=\"98.2%\">Friendly</text>"P=P.."<text x=\"80.1%\" y=\"95.2%\">L</text>"P=P.."<text x=\"80.1%\" y=\"96.7%\">"..#s.ConstructSort[0][5].L.."</text>"P=P.."<text x=\"80.1%\" y=\"98.2%\">"..#s.ConstructSort[1][5].L.."</text>"P=P.."<text x=\"82.1%\" y=\"95.2%\">M</text>"P=P.."<text x=\"82.1%\" y=\"96.7%\">"..#s.ConstructSort[0][5].M.."</text>"P=P.."<text x=\"82.1%\" y=\"98.2%\">"..#s.ConstructSort[1][5].M.."</text>"P=P.."<text x=\"84.1%\" y=\"95.2%\">S</text>"P=P.."<text x=\"84.1%\" y=\"96.7%\">"..#s.ConstructSort[0][5].S.."</text>"P=P.."<text x=\"84.1%\" y=\"98.2%\">"..#s.ConstructSort[1][5].S.."</text>"P=P.."<text x=\"86.1%\" y=\"95.2%\">XS</text>"P=P.."<text x=\"86.1%\" y=\"96.7%\">"..#s.ConstructSort[0][5].XS.."</text>"P=P.."<text x=\"86.1%\" y=\"98.2%\">"..#s.ConstructSort[1][5].XS.."</text>"local Q=s.ConstructSort[1][6]local R=s.ConstructSort[0][6]P=P.."<text x=\"88.1%\" y=\"95.2%\">Station</text>"P=P.."<text x=\"88.1%\" y=\"96.7%\">"..#R.L+#R.M+#R.S+#R.XS.."</text>"P=P.."<text x=\"88.1%\" y=\"98.2%\">"..#Q.L+#Q.M+#Q.S+#Q.XS.."</text>"P=P..[[</svg>
        
                ]]return P end;function AlarmHud()local S=0;local T=[[
        		<style>
        			#AlarmHud, #AlarmHud svg {display:block; position:absolute; top:0; left:0} 
        			#AlarmHud #FriendContact line {stroke:#01DF01;opacity:0.4;stroke-width:10%;fill-opacity:0;}
        			#AlarmHud #EnemyContact line {stroke:#FF0000;opacity:0.4;stroke-width:10%;fill-opacity:0;}
        		</style>
        
                <svg id="AlarmHud" height="100%" width="100%" viewBox="0 0 1920 1080">
                <g id="Layer_2">
                <title>Layer 2</title>
                ]]local U=false;if weapon[1]~=nil then if weapon[1].getWidgetData~=nil then data1=json.decode(weapon[1].getWidgetData())U=data1.properties.outOfZone end end;if U==false then if c>0 then if d~=nil then if c>19 then local V=radar[1].getConstructCoreSize(d)print("------------")print("New Contact")print(V)print(getPlugin("shortName",true,"AQN5B4-@7gSt1W?;"):getShortName(d).."-"..radar[1].getConstructName(d))print(d)print(system.getWaypointFromPlayerPos())end;if radar[1].hasMatchingTransponder(d)==1 then system.playSound("HSC/new_radar_friend.mp3")T=T..[[
                            <svg id="FriendContact" x="0%" y="0%">
                            <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_2" y2="0" x2="1920" y1="0" x1="0" fill="none"/>
                            <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_3" y2="1080" x2="0" y1="0" x1="0" fill="none"/>
                            <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_4" y2="1080" x2="1920" y1="0" x1="1920" fill="none"/>
                            <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_5" y2="1080" x2="1920" y1="1080" x1="0" fill="none"/>
                            ]]else system.playSound("HSC/new_radarcontact.mp3")T=T..[[
                                <svg id="EnemyContact" x="0%" y="0%">
                                <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_2" y2="0" x2="1920" y1="0" x1="0" fill="none"/>
                                <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_3" y2="1080" x2="0" y1="0" x1="0" fill="none"/>
                                <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_4" y2="1080" x2="1920" y1="0" x1="1920" fill="none"/>
                                <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_5" y2="1080" x2="1920" y1="1080" x1="0" fill="none"/>
                                ]]end end;c=c-1 end end;T=T..[[
                </svg>
                ]]return T end;function getMinAmmo()local W=99;for X,D in ipairs(weapon)do local G=D.getAmmoCount()if G<W then W=G end end;local Y=weapon[1].getCycleTime()*W;local Z=W/weapon[1].getMaxAmmo()if Y<10 and relaod_warning==false then system.playSound("HSC/ammo_relaod.mp3")relaod_warning=true elseif Y>10 and relaod_warning==true then relaod_warning=false end;return Z*100,FormatTimeString(Y)end;function FormatTimeString(_)local a0=0;local a1=0;local a2=0;if _<60 then _=math.floor(_)elseif _<3600 then a0=math.floor(_/60)_=math.floor(_%60)elseif _<86400 then a1=math.floor(_/3600)a0=math.floor(_%3600/60)else a2=math.floor(_/86400)a1=math.floor(_%86400/3600)end;if a2>0 then return a2 .."d "..a1 .."h "elseif a1>0 then return a1 .."h "..a0 .."m "elseif a0>0 then return a0 .."m ".._.."s"elseif _>0 then return _.."s"else return"0s"end end;function targetHud()local i=radar[1].getTargetId()local a3=0;local a4=0;local a5=0;local a6=0;local a7=0;local a8=false;local ammo="Precision"uiTarget=false;local a9=nil;for A,aa in ipairs(weapon)do if aa.getHitPoints()>0 then a9=aa;break end end;if a9~=nil and i~=0 and radar[1].isConstructIdentified(i)==1 then local ab=a9.getWidgetData()local X,ac=string.find(ab,[["hitProbability":]])local ad=string.find(ab,[[,]],ac)a3=round(tonumber(string.sub(ab,ac+1,ad-1))*100)a4=round(radar[1].getConstructSpeed(i)*3.6)a6=a4-e;e=a4;a5=radar[1].getConstructDistance(i)a7=round(MasstoMaxV(radar[1].getConstructMass(i))*3.6)local ae=radar[1].isConstructAbandoned(i)if oldTarget==i then a8=ae~=oldTargetStatus end;oldTargetStatus=ae;oldTarget=i;uiTarget=true;local X,ac=string.find(ab,[["optimalDistance":]])local ad=string.find(ab,[[,]],ac)local G=tonumber(string.sub(ab,ac+1,ad-1))*1.1;if a5<G then ammo="Heavy"end end;return a3,a4,a6,a5,i,a7,a8,ammo end;function MasstoMaxV(af)af=af/1000;local G=6*10^-9*af^4-3*10^-5*af^3+0.0573*af^2-59.933*af+50430;if af>2000 then G=20000 end;G=utils.clamp(G,20000,50000)return G/3.6 end;return self
        
        end
        package.preload[packagePrefix.."WeaponWidget"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;self.version=0.9;local c=nil;s=system;u=unit;local c,d;function self:register(e)_ENV=e;if not self:valid(a)then return end;c=getPlugin("WidgetCreator",true,"AQN5B4-@7gSt1W?;")d=getPlugin("RadarWidget",true,"AQN5B4-@7gSt1W?;")if c==nil then return end;register:addAction("unitOnStart","WeaponStart",function()register:addAction("systemOnUpdate","WeaponWidget",function()self:ReWriteWeapon()end)end)end;function self:ReWriteWeapon()for f,g in pairs(c.DataIDs)do local h=weapon[f].getWidgetData()if h~=nil then local i,j=string.find(h,[["ammoName":"]])local i,k=string.find(h,[["]],j+1)if k-j>12 then local l=mysplit(string.sub(h,j,k))l=string.sub(l[2],0,4)..string.sub(l[3],0,3)h=string.sub(h,0,j)..l..string.sub(h,k,#h)end;local i,m=string.find(h,[["constructId":"]])local i,n=string.find(h,[["]],m+1)local o=tonumber(string.sub(h,m+1,n-1))local i,p=string.find(h,[["name":"]],m)if p~=nil then local i,q=string.find(h,[["]],p+1)h=string.sub(h,0,p)..tostring(d.CodeList[o])..string.sub(h,q,#h)end;s.updateData(g,h)end end end;return self
        
        end
        package.preload[packagePrefix.."ShieldReconfigure"] = function()
           local self={}self.version=0.9;local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return shield~=nil end;function self:register(c)_ENV=c;if shield==nil then return end;register:addAction("OnAbsorbed","ShieldReconfigure",Shieldreconfigure)end;local d={0,0,0,0}function getRes(e,f)local g={0.15,0.15,0.15,0.15}if e[1]>=e[2]and e[1]>=e[3]and e[1]>e[4]then g={f,0,0,0}elseif e[2]>=e[1]and e[2]>=e[3]and e[2]>e[4]then g={0,f,0,0}elseif e[3]>=e[1]and e[3]>=e[2]and e[3]>e[4]then g={0,0,f,0}elseif e[4]>=e[1]and e[4]>=e[2]and e[4]>e[3]then g={0,0,0,f}else system.print("Fehler! Im else...")end;return g end;function Shieldreconfigure()if shield.getResistancesCooldown()==0 then print("Schilde rekonfigurieren!!!")local f=shield.getResistancesPool()local e=shield.getStressRatioRaw()local g=getRes(e,f)if d[1]==g[1]and d[2]==g[2]and d[3]==g[3]and d[4]==g[4]then else if shield.setResistances(g[1],g[2],g[3],g[4])==1 then print("Schilde rekonfiguriert!")d[1]=g[1]d[2]=g[2]d[3]=g[3]d[4]=g[4]else print("Fehler: "..shield.getStressRatioRaw()[1]..", "..shield.getStressRatioRaw()[2]..", "..shield.getStressRatioRaw()[3]..", "..shield.getStressRatioRaw()[4])end end end end;return self
        
        end
        package.preload[packagePrefix.."RadarWidget"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;self.version=0.9;self.viewTags={"hud"}local c=nil;local d=nil;self.Scroll=0;self.ConstructSort={[0]={[0]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[1]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[2]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[3]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[4]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[5]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[6]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[7]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}}},[1]={[0]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[1]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[2]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[3]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[4]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[5]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[6]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[7]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}}},["dead"]={}}local e=getPlugin("Settings",true)function self:register(f)_ENV=f;if shield~=nil then if shield.getStressRatioRaw()=={0,0,0,0}then shield.setResistances(0.3,0.3,0,0)end end;if not self:valid(a)then return end;c=getPlugin("WidgetCreator",true,"AQN5B4-@7gSt1W?;")d=getPlugin("shortName",true,"AQN5B4-@7gSt1W?;")self.CodeList={}self.IDList={}e:add("SpecialSort",true,"","Sort Core Size first then distance","Radar_Widget")e:add("IdentifiedonTop",true,"","Puts the Identified on Top of the screens","Radar_Widget")CommandHandler=getPlugin("CommandHandler")CommandHandler:AddCommand("hide",function(g)local h=g[2]for i,j in pairs(mysplit(h,","))do j=string.sub(j,0,3)if j=="spa"then j=6 elseif j=="sta"then j=4 elseif j=="dyn"then j=5 else j=string.upper(j)end;e:set(j,false,"Radar_Widget")end end,"hides core sizes: /hide XS,S,M,L,space,dynamic,static")CommandHandler:AddCommand("show",function(g)local h=g[2]for i,j in pairs(mysplit(h,","))do j=string.sub(j,0,3)if j=="spa"then j=6 elseif j=="sta"then j=4 elseif j=="dyn"then j=5 else j=string.upper(j)e:set(j,true,"Radar_Widget_Size")return end;e:set(j,true,"Radar_Widget_Type")end end,"shows core sizes: /show XS,S,M,L,space,dynamic,static")CommandHandler:AddCommand("t",function(g)self.tosearch=string.upper(g[2])self.SpecialRadarMode="Search"end,"show the target: /t TW4")CommandHandler:AddCommand("togdead",function()e:set("ShowDead",not e:get("ShowDead","Radar_Widget"),"Radar_Widget")end,"toggles if dead cores are shown")coRadar=coroutine.create(function()self:RadarWidget()end)self.RadarMode="Hostile"e:add("ShowDead",true,"","if dead are to be shown","Radar_Widget")e:add("XS",true,"","if XS are to be shown","Radar_Widget_Size")e:add("S",true,"","if S are to be shown","Radar_Widget_Size")e:add("M",true,"","if M are to be shown","Radar_Widget_Size")e:add("L",true,"","if L are to be shown","Radar_Widget_Size")e:add("XL",true,"","if XL are to be shown","Radar_Widget_Size")e:add(1,true,"","if Universes are to be shown","Radar_Widget_Type")e:add(2,true,"","if Planets are to be shown","Radar_Widget_Type")e:add(3,true,"","if Asteroids are to be shown","Radar_Widget_Type")e:add(4,true,"","if Statics are to be shown","Radar_Widget_Type")e:add(5,true,"","if Dynamics are to be shown","Radar_Widget_Type")e:add(6,true,"","if Spaces are to be shown","Radar_Widget_Type")e:add(7,true,"","if Aliens are to be shown","Radar_Widget_Type")register:addAction("lshiftStart","RadarScroll",function()self.Scroll=self.Scroll+1 end)register:addAction("laltStart","RadarScroll",function()self.Scroll=self.Scroll-1;if self.Scroll<0 then self.Scroll=0 end end)register:addAction("systemOnUpdate","RadarWidget",function()if coroutine.status(coRadar)=="dead"then coRadar=coroutine.create(function()self:RadarWidget()end)else coroutine.resume(coRadar)end end)addTimer("Trans",2,self.AutoTrans)register:addAction("option3Start","RadarSwitch",function()self:switchRadar()end)local l=getPlugin("screener",true)if l~=nil then l:registerDefaultScreen("mainScreenThird","Radar")l:registerDefaultScreen("mainScreenFirst","Radar")l:addView("Radar",self)end end;local m=system;local n=unit;function self:switchRadar()if self.SpecialRadarMode~=nil then self.SpecialRadarMode=nil elseif self.RadarMode=="Hostile"then self.RadarMode="Friendly"elseif self.RadarMode=="Friendly"then self.RadarMode="Verified"elseif self.RadarMode=="Verified"then self.RadarMode="External"local o=getPlugin("Targets",true,"",true)if o==nil then self.RadarMode="Hostile"end elseif self.RadarMode=="External"then self.RadarMode="Hostile"else self.RadarMode="Hostile"end end;function self:RadarWidget()local radar=radar[1]local p={[0]={[0]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[1]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[2]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[3]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[4]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[5]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[6]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[7]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}}},[1]={[0]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[1]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[2]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[3]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[4]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[5]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[6]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[7]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}}},["dead"]={}}AddShip=function(q,r,s,k)k=k or 2;s=s or""local t,j=getSubJson(r,tostring(q))if t~=nil then t=AddUnique(t,q,s)j=math.floor(j/150)if t==nil then return end;showingConstructs[k][j]=t end end;AddUnique=function(u,q,s)local v=string.find(u,[["name":"]])+#[["name":"]]if not e:get("ShowDead","Radar_Widget")and dead then return end;return string.sub(u,0,v-1)..tostring(self.CodeList[q]).." - "..s..string.sub(u,v,#u)end;function getSubJson(u,q)if radar.hasMatchingTransponder(q)==1 then return getSubJF(u,q)else return getSubJH(u,q)end end;getSubJH=function(u,q)local w=string.find(u,q..[[","]])if w==nil then return end;local x=string.find(u,[["targetThreatState"]],w+100)local y=string.find(u,[[}]],x)return string.sub(u,w-16,y),w end;getSubJF=function(u,q)local w=string.find(u,q..[[","]])if w==nil then return end;local i,y=string.find(u,[[)"}]],w+100)return string.sub(u,w-16,y),w end;local z=radar.getConstructIds()local A=radar.getWidgetData()showingConstructs={[1]={},[2]={},[3]={},[4]={},[5]={},[6]={}}AlienCore=-1;local B=0;for i,C in pairs(z)do B=B+1;local D=radar.hasMatchingTransponder(C)local dead=radar.isConstructAbandoned(C)==1;local E=radar.getConstructCoreSize(C)local F=radar.getConstructKind(C)if F==-1 then goto G end;if F==7 then AlienCore=C end;if dead then table.insert(p["dead"],C)else table.insert(p[D][F][E],C)end;if self.CodeList[C]==nil then local H=d:getShortName(C)self.CodeList[C]=H;self.IDList[H]=C end;if(self.RadarMode=="Hostile"or self.RadarMode=="Friendly")and self.SpecialRadarMode==nil then if self.RadarMode=="Friendly"then D=D-1 end;if D==0 and e:get(E,"Radar_Widget_Size")and e:get(F,"Radar_Widget_Type")then local s=""if e:get("SpecialSort","Radar_Widget")then if E=="XL"then k=2 elseif E=="L"then k=3 elseif E=="M"then k=4 elseif E=="S"then k=5 elseif E=="XS"then k=6 end end;if e:get("IdentifiedonTop","Radar_Widget")then if radar.isConstructIdentified(C)==1 then k=1 end end;if dead then s="dead - "end;AddShip(C,A,s,k)end end::G::if B>200 then B=0;coroutine.yield()end end;if self.SpecialRadarMode==nil then pcall(self.RadarModes[self.RadarMode],A)else pcall(self.RadarModes[self.SpecialRadarMode],A)end;local I={[1]={},[2]={},[3]={},[4]={},[5]={},[6]={}}local J=0;for k,K in pairs(showingConstructs)do for H=0,math.ceil(#A/150),1 do J=J+1;if K[H]~=nil then I[k][#I[k]+1]=K[H]end;if J>5000 then J=0;coroutine.yield()end end end;local L=0;for i,K in pairs(I)do L=L+#K end;self.ConsCount=L;local M={}for k,K in pairs(I)do for i,N in pairs(K)do table.insert(M,N)end end;if self.Scroll>#M-4 then self.Scroll=#M-4 end;if self.Scroll<0 then self.Scroll=0 end;for H=1,self.Scroll,1 do table.remove(M,1)end;local O=table.concat(M,",")..","local P=string.find(A,[[],]])local Q=string.sub(A,P,#A)local i,R=string.find(Q,[["errorMessage":"",]])local i,B=string.find(Q,[["worksInSpace":]])local S=string.find(Q,[[e]],B)+1;local i,T=string.find(Q,[["worksInAtmosphere":]])local U=string.find(Q,[[e]],T)+1;local x=self.SpecialRadarMode or self.RadarMode;if R~=nil then Q=string.sub(Q,0,R-2)..x.." Scroll: "..self.Scroll..string.sub(Q,R-1,T).."false"..string.sub(Q,U,B).."false"..string.sub(Q,S,#Q)end;Output=[[{"constructsList":[]]..string.sub(O,0,#O-1)..Q;m.updateData(c.RadarDataID,Output)self.AlienCore=AlienCore;self.ConstructSort=p end;self.RadarModes={["External"]=function(A)local o=getPlugin("Targets",true)if o~=nil then for i,j in pairs(o)do local q=self.IDList[j.shortid[1]]AddShip(q,A)end;unloadPlugin("Targets")end end,["Verified"]=function(A)local o=radar.getIdentifiedConstructIds()for i,q in pairs(o)do AddShip(q,A)end end,["Search"]=function(A)if self.tosearch~=nil then AddShip(self.IDList[self.tosearch],A)end end}function self:AddRadarMode(V,W)self.RadarModes[V]=W end;e:add("autoTrans",true,"","if Transponder should auto Update","Transponder")function self:AutoTrans()local X="Transponder"if e:get("autoTrans",X)then local Y=getPlugin(X,true,"",true)if Y~=nil then local Z={}local _=1;for i,j in pairs(Y)do Z[_]=j.transponder[1]_=_+1 end;transponder.setTags(Z)unloadPlugin(X)end end end;function self:setScreen()local radar=radar[1]local a0;local a1=weapon[1]local a2,a3;if a1~=nil then a2=a1.getMaxDistance()/400000;a3=a1.getOptimalDistance()/400000 end;local a4=radar.getIdentifyRanges()[4]or 100000;local a5=a4/400000;if a5>1 then a5=1 end;a0=[[
                <head>
                    <style>
                        body {margin: 0}
                        svg {display:block; position:absolute; top:0; left:0} 
                    </style>
                </head>
                <body>
                <svg height="100%" width="100%" viewBox="0 0 1920 1080">
                <rect x="1898" y="333" rx="3" ry="3" width="26" height="670" style="fill:#4682B4;fill-opacity:0.35" />
        
                <rect x="1901" y="337" rx="3" ry="3" width="3" height="662" style="fill:#ffffff;fill-opacity:0.5" />
            ]]if a3~=nil then a0=a0 ..[[
                    <rect x="1903" y="]]..round(337+(1-a2)*662)..[[" width="2" height="]]..round((a2-a3)*662)..[[" style="fill:#ff0000;fill-opacity:0.8" />
                    <rect x="1903" y="]]..round(337+(1-a3)*662)..[[" width="2" height="]]..round(a3*662)..[[" style="fill:#00ff00;fill-opacity:0.8" />
                    <rect x="1899" y="]]..round(337+(1-a5)*662)..[[" width="8" height="3" style="fill:#000000;fill-opacity:1" />]]for i,q in pairs(radar.getIdentifiedConstructIds())do local a6=radar.getConstructDistance(q)/400000;a0=a0 ..[[<text x="1904" y="]]..round(337+(1-a6)*662)+3 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#000000;font-size:10px;stroke:#000000;stroke-width:1px">]]..self.CodeList[q]..[[</text>]]end;local q=radar.getTargetId()if q>0 then local a6=radar.getConstructDistance(q)/400000;a0=a0 ..[[<text x="1904" y="]]..round(337+(1-a6)*662)+3 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#ff00ff;font-size:10px;stroke:#000000;stroke-width:1px">]]..self.CodeList[q]..[[</text>]]end end;local a7=0;if#weapon<4 then a7=250 end;local function H(a8)if a8 then return"00ff00"else return"ff0000"end end;a0=a0 ..[[
                <rect x="1530" y="]]..567+a7 ..[[" rx="3" ry="3" width="145" height="125" style="fill:#4682B4;fill-opacity:0.35" />
                <text x="1540" y="]]..585+a7 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#ffffff;font-size:18px;stroke:#000000;stroke-width:1px">Type</text>
                <text x="1540" y="]]..605+a7 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..H(e:get(4,"Radar_Widget_Type"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Static</text>
                <text x="1540" y="]]..625+a7 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..H(e:get(5,"Radar_Widget_Type"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Dynamic</text>
                <text x="1540" y="]]..645+a7 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..H(e:get(6,"Radar_Widget_Type"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Space</text>
                <text x="1540" y="]]..665+a7 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..H(e:get(7,"Radar_Widget_Type"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Alien</text>
                <text x="1540" y="]]..685+a7 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..H(e:get("ShowDead","Radar_Widget"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Dead</text>
                
                <text x="1620" y="]]..585+a7 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#ffffff;font-size:18px;stroke:#000000;stroke-width:1px">Size</text>
                <text x="1620" y="]]..605+a7 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..H(e:get("XL","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">XL</text>
                <text x="1620" y="]]..625+a7 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..H(e:get("L","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">L</text>
                <text x="1620" y="]]..645+a7 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..H(e:get("M","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">S</text>
                <text x="1620" y="]]..665+a7 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..H(e:get("S","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">M</text>
                <text x="1620" y="]]..685+a7 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..H(e:get("XS","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">XS</text>]]return a0 .."</svg>"end;return self
        
        end
        package.preload[packagePrefix.."Settings"] = function()
           self={}local a=getPlugin("config")self.version=0.9;self.loadPrio=5;self.Default={}self.Range={}self.Description={}function self:add(b,c,d,e,f)if b==nil or c==nil then return"missing Infos"end;e=e or""f=f or"Standard"if d==nil or type(d)~="table"then local g=type(c)if g=="boolean"then d={"boolean"}elseif g=="number"then d={"number",1,10,1}else return"missing Range Infos"end end;if self.Default[f]==nil then self.Default[f]={}self.Range[f]={}self.Description[f]={}end;self.Default[f][b]=c;self.Range[f][b]=d;self.Description[f][b]=e end;function self:rem(b,f)f=f or"Standard"self.Default[f][b]=nil;self.Range[f][b]=nil;self.Description[f][b]=nil end;function self:set(b,h,f)f=f or"Standard"local i=self.Range[f][b]local g=type(h)if i[1]~=g then return end;if g=="number"then h=utils.clamp(h,i[2],i[3])h=(h-i[2])/i[4]h=round(h)h=h*i[4]+i[2]elseif g=="string"then if not inTable(i[2],h)then return end end;a:set(f..b,h,self.Default[f][b])end;function self:get(b,f)f=f or"Standard"return a:get(f..b,self.Default[f][b])end;function self:register(j)_ENV=j end;return self
        
        end
        package.preload[packagePrefix.."CommandHandler"] = function()
           local self={}function self:register(a)_ENV=a;local function b(c)c=string.lower(c)local d=string.sub(c,1,1)if d~=self.prefix then return end;local e=mysplit(string.sub(c,2,#c))local f,g=pcall(CommandList[1][d][1][e[1]],e)if not f then print(g)end end;register:addAction("systemOnInputText","CommandHandler",b)end;self.version=0.9;self.loadPrio=5;if unitType=="gunner"then self.prefix="/"elseif unitType=="remote"then self.prefix="!"else self.prefix="/"end;CommandList={{[self.prefix]={{["help"]=function(h)local i=h[2]if i==nil then for j,k in pairs(CommandList[1][self.prefix][2])do print(j..":  "..k)end end end},{["help"]="use this to list all commands"}}},{[self.prefix]="basic commands from the"..unitType or""}}function self:AddCommand(l,m,n)CommandList[1][self.prefix][1][l]=m;CommandList[1][self.prefix][2][l]=n or""end;return self
        
        end
        package.preload[packagePrefix.."screener"] = function()
           local self={}local a=false;local b=false;self.loadPrio=10;local c=getPlugin("config")local d={menuitmwidth=1/8,menuitmheight=1/16,offsetx=0,offsety=0,width=1*1/3,height=1*1/3,tag="screen",totalWidth=system.getScreenHeight(),totalHeight=system.getScreenWidth(),perspective="third",parent="mainScreenThird"}local e={}function self:hotkeyState(f)if self.pressedRegister[f]==1 then return 1 end;return 0 end;function self:startHotkeyPressed(f)self.pressedRegister[f]=1 end;function self:endHotkeyPressed(f)self.pressedRegister[f]=nil end;function self:freeMouse(g)if a and g then print("setupMode off")a=false end;b=g;system.lockView(b)end;function self:addButton(h,i,j,k,l,m,n)end;function self:addScreen(o,p)curr={}for q,r in pairs(d)do if p[q]==nil then curr[q]=r else curr[q]=p[q]end end;curr["name"]=o;e[o]=curr end;function self:getPerspectiveList()return{"first","third"}end;function self:getPerspective()local s=system.getCameraMode()if s==1 then return"first"else return"third"end end;local t={}function self:addView(u,v)assert(type(u)=="string","name isn't a string, type was "..type(u))assert(type(v)=="table",u..": viewObj isn't a table, type was "..type(v))t[u]=v;register:callAction("registerAddView",u)end;function self:removeView(u)if t[u]==nil then return false end;t[u]=nil;register:callAction("registerRemoveView",u)end;function self:getViewList(w)local x={}for y,z in pairs(t)do if z==nil or z.viewTags==nil then system.print("No view tags: '"..y)else for A,B in pairs(z.viewTags)do if w==nil or B==w then table.insert(x,y)end end end end;table.sort(x)return x end;function self:renderView(u,screen,...)if t[u]==nil then system.print("Render of view '"..(u or"???").."' failed, because it there is no such view registered!","")end;local v=t[u]if v.setScreen~=nil then local C,D=pcall(v.setScreen,v,screen,...)if C then return D else system.print(u.." in setScreen:",D)return nil end else system.print(u.." render has no function 'setScreen'")end end;function self:renderViewRequireRerender(u,screen,...)if self.viewRegister[u]==nil then system.print("Rerender request of view '"..(u or"???").."' failed, because it there is no such view registered!","")end;local v=t[u]if v.requireRerender~=nil then local C,D=pcall(v.requireRerender,v,screen,...)if C then return D else system.print(u.." in renderViewRequireRerender:",D)return nil end end;return true end;function self:actionToHtml(E,...)local F,G=register:callAction(E,...),""for A,r in pairs(F)do if r then G=G..r end end;return G end;function screenObj(u)return e[u]end;local H=nil;function self:colors()if H==nil or H.hsl~=modeColors[mode]then if modeColors[mode]==nil then modeColors[mode]=290 end;local I=math.max(0,math.min(modeColors[mode],360))H={hsl=I,sqLeftHsl=I+270.0,sqTwoRight=I+180.0,warn=5}if H.sqLeftHsl>360 then H.sqLeftHsl=H.sqLeftHsl-360 end;if H.sqTwoRight>360 then H.sqTwoRight=H.sqTwoRight-360 end;if H.hsl<45 or H.hsl>315 then H.warn=H.sqTwoRight end end;return H end;function drawAllScreensCss()local J=self:colors()local K=[[
                                    * { font-family:Montserrat }
                                    body { margin: 0}
                                    svg {display:block; position:absolute; top:auto; left:auto}
                                    svg svg { overflow: visible }
                                    .screenSvg { position: relative; margin: auto 0; }
                                    .screen { margin:0; padding:0; position: absolute; left: 0; top: 0; border: 2px solid transparent }
        							.lfill { fill:hsl(]]..J.hsl..[[, 93.6%, 56.9%)}
                                    .sfill { fill:hsl(]]..J.hsl..[[, 100%, 50%) }
        							.lstroke { stroke:hsl(]]..J.hsl..[[, 93.6%, 56.9%)}
                                    .sstroke { stroke:hsl(]]..J.hsl..[[, 100%, 50%) }
        							.bstroke { stroke:black }
                                ]]if a then K=K..[[
        							.screen { border: 2px solid hsl(]]..J.hsl..[[, 93.6%, 56.9%) }
        							.menu { position: absolute; right: 0; top: 0; width: 100%; height: 3.125%; overflow: hidden; z-index: 1000 }
        							.mItm { z-index:inherit; background-color:hsl(]]..J.hsl..[[, 100%, 50%);position: relative; float: right; height: 100%; width: calc(100% / 24); border: 2px solid hsl(]]..J.hsl..[[, 93.6%, 56.9%); overflow: hidden; color: white;display: flex;align-items: center;justify-content: center; }
        						]]end;local s=self:getPerspective()for u,A in pairs(e)do screen=screenObj(u)if s==screen.perspective then K=K..[[
        								#]]..u..[[ { width: ]]..screen.width*100 ..[[%; height: ]]..screen.height*100 ..[[%; top: ]]..screen.offsety*100 ..[[%; left: ]]..screen.offsetx*100 ..[[% }
        			]]if a then K=K..[[
        								#]]..u..[[ > .menu { height: ]]..screen.menuitmheight*100 ..[[% }
        								#]]..u..[[ > .menu .mItm { width: ]]..screen.menuitmwidth*100 ..[[% }
        				]]for L,h in pairs(self:getViewList(screen.tag))do local M="scval_"..u.."_"..h;local curr=c:get(M,0)if curr==1 then K=K..[[
        								#]]..u..[[ > .menu .mItm.n]]..L..[[ { background-color:hsl(]]..J.sqTwoRight..[[, 100%, 50%) }
        						]]end end end end end;return K end;register:addAction("staticCssStyle","drawAllScreensCss",drawAllScreensCss)local N={}function drawAllScreens()local O=0;local P,Q,R=self:actionToHtml("staticCssStyle"),"",""local S,T,U,screens={},{},{},{}local s=self:getPerspective()if a then for L,u in pairs(self:getViewList("screen"))do Q=Q..'<div class="mItm text n'..L..'">'..u.."</div>"end;Q=[[
        			<div class="menu screentag">
        				]]..Q..[[
        			</div>
        		]]end;for u,A in pairs(e)do screen=screenObj(u)if s==screen.perspective then if screen.tag=="screen"then if T[screen.parent]==nil then T[screen.parent]=""end;T[screen.parent]=T[screen.parent]..[[
                                           <div id="]]..u..[[" class="screen">
                                            ]]..Q..[[
                                            ]]..self:actionToHtml(u.."Html")..[[
                                           </div>]]end end end;if a then Q=""for L,u in pairs(self:getViewList("hud"))do Q=Q..'<div class="mItm text n'..L..'">'..u.."</div>"end;Q=[[
        			<div class="menu hudtag">
        				]]..Q..[[
        			</div>
        		]]end;for u,A in pairs(e)do screen=screenObj(u)if s==screen.perspective then if screen.tag=="hud"then if U[screen.parent]==nil then U[screen.parent]=""end;if T[u]==nil then T[u]=""end;U[screen.parent]=U[screen.parent]..[[
        									   <div id="]]..u..[[" class="screen">
        										]]..Q..[[
        										]]..self:actionToHtml(u.."Html")..[[
        										]]..T[u]..[[
        									   </div>]]end end end;local V=""if a or b then local W=system.getMousePosX()/d.totalWidth;local X=system.getMousePosY()/d.totalHeight;V=[[
        			<svg style="z-index: 10000;position: absolute;left:]]..W*100 ..[[%;top:]]..X*100 ..[[%" height="20px" width="20px" viewBox="0 0 512 512">
        				<path class="sfill bstroke" d="M434.214,344.448L92.881,3.115c-3.051-3.051-7.616-3.947-11.627-2.304c-3.989,1.643-6.592,5.547-6.592,9.856v490.667
        					c0,4.459,2.773,8.448,6.976,10.005c1.195,0.448,2.453,0.661,3.691,0.661c3.051,0,6.037-1.323,8.085-3.733l124.821-145.6h208.427
        					c4.309,0,8.213-2.603,9.856-6.592C438.182,352.085,437.265,347.52,434.214,344.448z"/>
        			</svg>
        			]]end;for u,G in pairs(U)do V=V..G end;local Y=[[
                                    <head>
                                        <style>
                                            ]]..P..[[
                                        </style>
                                    </head>
                                    <body>
                                        ]]..V..[[
                                    </body>
                                ]]if debugscreen~=nil then debugscreen.setHTML(Y)end;if#screens>0 then for Z,_ in pairs(screens)do local u,a0="screen"..Z,nil;local screen=screenObj(u)for A,h in pairs(self:getViewList(screen.tag))do local a1=u.."_"..h;local M="scval_"..a1;local curr=c:get(M,0)if curr==1 then if self:renderViewRequireRerender(h,_.getMouseX(),_.getMouseY(),_.getMouseState()==1,"real"..a1)then if a0==nil then a0=""end;a0=a0 ..self:renderView(h,_.getMouseX(),_.getMouseY(),_.getMouseState()==1,"real"..a1)end end end;if a0~=nil then _.setHTML(a0)end end end;system.setScreen(Y)end;function self:triggerViewMouseEvent(a2,u,j,k,a3,...)if t[u]==nil then system.print("Render of view '"..(u or"???").."' failed, because it there is no such view registered!","")end;local v=t[u]local a4=v.onMouseUp;if a2==false then a4=v.onMouseDown end;if a4 then local C,D=pcall(a4,v,j,k,a3,...)if C then return D else system.print(u..": error in triggerViewMouseEvent:",a2,D)return nil end else end end;function self:registerDefaultScreen(o,h)local M="scval_"..o.."_"..h;if devMode then print("registering default view "..M)end;c:set(M,1,0)end;function self:register(a5)_ENV=a5;d.totalWidth=system.getScreenWidth()d.totalHeight=system.getScreenHeight()function setActionHtml(o,h)local screen=screenObj(o)local a1=o.."_"..h;local M="scval_"..a1;local curr=c:get(M,0)if curr==1 then if devMode then print("register setActionHtml for "..M)end;register:addAction(o.."Html",a1 .."Html",function()local W=(system.getMousePosX()/d.totalWidth-screen.offsetx)/screen.width;local X=(system.getMousePosY()/d.totalHeight-screen.offsety)/screen.height;if a==false and b==false then W,X=-1,-1 end;return self:renderView(h,W,X,false,a1)end)else register:removeAction(o.."Html",a1 .."Html")end end;function realMouseEvent(a2,screen,a6,j,k)local o=screen.name;for A,_ in pairs(screens)do if _.getId()==a6.getId()then for A,h in pairs(register:getViewList(screen.tag))do local a1=o.."_"..h;local M="scval_"..a1;local curr=c:get(M,0)if curr==1 then self:triggerViewMouseEvent(a2,h,j,k,"real"..a1)end end;return true end end;return false end;function virtualMouseEvent(a2,screen,a7,a8,a9)local s,o=self:getPerspective(),screen.name;local aa,ab=screen.width,screen.height;local ac=screen.menuitmwidth*screen.width;local ad=screen.menuitmheight*screen.height;local ae=a7-screen.offsetx;local af=a8-screen.offsety;if ae>=0 and ae<aa then if af>=0 and af<ab then if not b and af<ad then if a2 then for ag,h in pairs(self:getViewList(screen.tag))do local ah,ai=ag*ac,(ag-1)*ac;if ae>aa-ah and ae<=aa-ai then local a1=o.."_"..h;local M="scval_"..a1;local curr=c:get(M,0)if curr==1 then c:set(M,0,0)else c:set(M,1,0)end;setActionHtml(o,h)end end end else for A,h in pairs(self:getViewList(screen.tag))do local a1=o.."_"..h;local M="scval_"..a1;local curr=c:get(M,0)if curr==1 then self:triggerViewMouseEvent(a2,h,ae/aa,af/ab,a1)end end end;if devMode then local a4="DOWN"if a2 then a4="UP"end;print("Event "..a4 .."Screen "..o.." Type "..a9 .." Relative x "..ae.." Relative y "..af)end;return true end end;return false end;function tableLength(aj)assert(type(aj)=='table','bad parameter #1: must be table')local ak=0;for A in pairs(aj)do ak=ak+1 end;return ak end;function initAllScreens()screenObjCache={}if devMode then print("reinitialize all "..tableLength(e).." screens")end;for u,A in pairs(e)do local screen=screenObj(u)for A,h in pairs(self:getViewList(screen.tag))do setActionHtml(u,h)end;register:addAction("screenMouseUp","realScreenMouseUp"..u,function(a6,j,k)realMouseEvent(true,screen,a6,j,k)end)register:addAction("screenMouseDown","realScreenMouseUp"..u,function(a6,j,k)realMouseEvent(false,screen,a6,j,k)end)register:addAction("mouseUp","screenMouseUp"..u,function(a7,a8,a9)if self:getPerspective()==screen.perspective then virtualMouseEvent(true,screen,a7,a8,a9)end end)register:addAction("mouseDown","screenMouseDown"..u,function(a7,a8,a9)if self:getPerspective()==screen.perspective then virtualMouseEvent(false,screen,a7,a8,a9)end end)end end;self:addScreen("mainScreenFirst",{menuitmwidth=1/24,menuitmheight=1/32,width=1,height=1,tag="hud",perspective="first"})self:addScreen("mainScreenThird",{menuitmwidth=1/24,menuitmheight=1/32,width=1,height=1,tag="hud"})self:addScreen("screen1first",{offsetx=0,perspective="first",parent="mainScreenFirst"})self:addScreen("screen1third",{offsetx=0})self:addScreen("screen2first",{offsetx=0,offsety=1*1/3,perspective="first",parent="mainScreenFirst"})self:addScreen("screen2third",{offsetx=0,offsety=1*1/3})self:addScreen("screen3first",{offsetx=1*0.63,offsety=1*0.25,width=1*0.23,height=1*0.23,perspective="first",parent="mainScreenFirst"})self:addScreen("screen3third",{offsetx=1*0.63,offsety=1*0.25,width=1*0.23,height=1*0.23})self:addScreen("screen4first",{offsetx=1*0.56,offsety=0,width=1*0.20,height=1*0.25,perspective="first",parent="mainScreenFirst"})self:addScreen("screen4third",{offsetx=1*0.56,offsety=0,width=1*0.20,height=1*0.25})register:addAction("registerAddView","viewRegisterWatcher",initAllScreens)initAllScreens()register:addAction("unitOnStart","Screener",function()register:addAction("systemOnUpdate","drawAllScreens",function()if databaseHasChild~=true and screenToggle and(executeTotal==1 or executeTotal%renderEveryXFrames==0)then drawAllScreens()end end)register:addAction("leftmouseStart","mouseStartTracker",function()if a or b then local W=system.getMousePosX()/d.totalWidth;local X=system.getMousePosY()/d.totalHeight;register:callAction("mouseDown",W,X,"hud")return true else return false end end)register:addAction("leftmouseStop","mouseStopTracker",function()if a or b then local W=system.getMousePosX()/d.totalWidth;local X=system.getMousePosY()/d.totalHeight;register:callAction("mouseUp",W,X,"hud")return true else return false end end)end)local al=getPlugin("CommandHandler")al:AddCommand("setup",function(am)a=not a;if a then system.lockView(true)print("setupMode on")else system.lockView(false)print("setupMode off")end end,"Activate/Deactivate screener setup mode")local an=false;al:AddCommand("mouse",function(am)an=not an;self:freeMouse(an)if an then print("mouse on")else print("mouse off")end end,"Mouse on/off")end;return self
        
        end
        package.preload[packagePrefix.."slots"] = function()
           local self={}self.slots=nil;local a={control=true,library=true,system=true,unit=true,player=true,construct=true}function self:calcSlots()self.slots={}local b=unit or{}for c,d in pairs(b)do if a[c]==nil then if type(c)=="string"and type(d)=="table"and type(d.export)=="table"then self.slots[c]=d end end end;return self.slots end;function self:getSlots()if self.slots==nil then self:calcSlots()end;return self.slots end;self.elementsIdList=nil;function self:calcElementList()if core==nil then return end;self.elementsIdList=core.getElementIdList()end;function self:getElementList()if self.elementsIdList==nil then self:calcElementList()end;return self.elementsIdList end;local e={RemoteControlUnit="remote",CockpitHovercraftUnit="command",PVPSeatUnit="gunner",CockpitCommandmentUnit="command",CockpitFighterUnit="command"}local f={Weapo="weapon",Shiel="shield",Radar="radar",CoreU="core"}local g={AntiGravityGeneratorUnit="antigrav",WarpDriveUnit="warpdrive",DataBankUnit="databases",ReceiverUnit="receiver",EmitterUnit="emitter",ScreenUnit="screens",CombatDefense="transponder",AtmoFuelContainer="atmofueltank",SpaceFuelContainer="spacefueltank",RocketFuelContainer="rocketfueltank",CounterUnit="counter",laserDetector="laser",SpaceEngine="engine"}local h={weapon=true,databases=true,screens=true,atmofueltank=true,spacefueltank=true,rocketfueltank=true,radar=true,engine=true}local i={core={"onStressChanged(stress)"},container={"onContentUpdate()"},industry={"onStarted(id,quantity)","onCompleted(id,quantity)","onStatusChanged(status)","onBankUpdate()"},radar={"onEnter(id)","onLeave(id)","onIdentified(id)"},screens={"mouseDown(x,y)","mouseUp(x,y)","onOutputChanged(output)"},laser={"onHit()","onLoss()"},receiver={"onReceived(channel,message)"},shield={"onToggled(active)","onAbsorbed(hitpoints,rawHitpoints)","onVentin(active,restoredHitpoints)","onDown()","onRestored()"},weapon={"onReload(ammoId)","onReloaded(ammoId)","onMissed(targetId)","onDestroyed(targetId)","onElementDestroyed(targetId,itemId)","onHit(targetId,damage)"}}local function j(k)for l,m in ipairs(k)do local n,o=m:match("^([^(]+)%((.*)%)")local p={}for q in o:gmatch("[^%s,]+")do table.insert(p,q)end;for r,s in ipairs(p)do print(string.format("* Slot name %q has options %q.",n,s))end;local t=map(p,function()return"*"end)for r,s in ipairs(t)do print(string.format("* Slot name %q has options %q.",n,s))end end end;function self:getClassType(u)local type;if g[u]~=nil then type=g[u]else local v=string.sub(u,0,5)if f[v]~=nil then type=f[v]end end;return type end;function self:register(w)_ENV=w;for type,r in pairs(h)do _ENV[type]={}end;for r,x in pairs(self:getSlots())do local u=x.getClass()local type=self:getClassType(u)if type==nil then system.print("Unrecognized Type: "..u)else if h[type]==nil then _ENV[type]=x else table.insert(_ENV[type],x)end end end;function compare(y,z)if y~=nil and y.getLocalId and z~=nil and z.getLocalId then return y.getLocalId()<z.getLocalId()end;return nil end;for type,r in pairs(h)do if#_ENV[type]>1 then table.sort(_ENV[type],compare)end end;if#_ENV["databases"]>0 then local A=getPlugin("bankraid",true)if A~=nil then _ENV["database"]=A:new(_ENV["databases"])else _ENV["database"]=_ENV["databases"][1]end end;if _ENV["unitType"]==nil or _ENV["unitType"]==""then if e[unit.getClass()]~=nil then _ENV["unitType"]=e[unit.getClass()]else system.print("Unrecognized unitTypeClass: "..unit.getClass())end end;register:addAction("antigravityStart","antigravityStart",function()if antigrav~=nil then antigrav.toggle()end end)register:addAction("systemOnUpdate","frameCounter",function()if executeTotal==nil then executeTotal=0 end;if executeSet==nil then executeSet=0 end;executeTotal=executeTotal+1;executeSet=executeSet+1;local B=system.getArkTime()if B-executeTime>1 then executeLastFrames=executeSet;executeSet=1;executeTime=B;local C=false;if C then system.print("Frames: "..executeLastFrames)end end end)register:addAction("systemOnActionStart","systemActionStartAlias",function(D,system)register:callAction(D.."Start",system)register:startHotkeyPressed(D)end)register:addAction("systemOnActionStop","systemActionStopAlias",function(D,system)register:callAction(D.."Stop",system)register:endHotkeyPressed(D)end)register:addAction("systemOnActionLoop","systemActionLoopAlias",function(D,system)register:callAction(D.."Loop",system)end)end;return self
        
        end
        package.preload[packagePrefix.."register"] = function()
           local self={}self.functionRegister={}self.overwriteRegister={}self.overwriteOrder={}self.viewRegister={}self.pressedRegister={}function self:hotkeyState(a)if self.pressedRegister[a]==1 then return 1 end;return 0 end;function self:startHotkeyPressed(a)self.pressedRegister[a]=1 end;function self:endHotkeyPressed(a)self.pressedRegister[a]=nil end;self.switches={}function self:addSwitch(b,c)assert(type(b)=="string","name isn't a string, type was "..type(b))assert(type(c)=="table",b..": entity isn't a table, type was "..type(c))self.switches[b]=c;self:callAction("registerAddSwitch",b)end;function self:getSwitch(b)assert(type(b)=="string","name isn't a string, type was "..type(b))return self.switches[b]end;function self:getSwitches()return self.switches end;self.taskRegister={}self.taskOrder={}local function d(e,f)if e~=nil and f~=nil then return self.taskRegister[e].order<self.taskRegister[f].order end;return nil end;local g=2500;function self:addTask(b,h,i,j)assert(type(b)=="string","addTask: name isn't a string, type was "..type(b))assert(type(h)=="function",b..": func isn't a function, type was "..type(h))if i==nil then i=10 else assert(type(i)=="number",b..": priority has to be number, type was "..type(i))end;if j==nil then j=g else assert(type(j)=="number",b..": rating has to be number, type was "..type(j))assert(j<=g,b..": rating has to be smaller then the allowed max rating of "..g)end;if not self:hasAction("systemUpdate","registerTasker")then self:addAction("systemUpdate","registerTasker",function()self:runTasks()end)end;if self.taskRegister[b]~=nil then self:removeTask(b)end;table.insert(self.taskOrder,b)self.taskRegister[b]={order=i,task=coroutine.create(h),rating=j}if#self.taskOrder>1 then table.sort(self.taskOrder,d)end end;function self:hasTask(b)return self.taskRegister[b]~=nil end;function self:removeTask(b)assert(type(b)=="string","removeTask: Name isn't a string, type was "..type(b))self.taskRegister[b]=nil;for k,l in pairs(self.taskOrder)do if l==b then table.remove(self.taskOrder,k)return end end end;function self:runTasks()local m=0;for n,b in ipairs(self.taskOrder)do local o=self.taskRegister[b]if m+o.rating<=g then if o.task==nil or coroutine.status(o.task)=="dead"then self:removeTask(b)else m=m+o.rating;local p,q=coroutine.resume(o.task)if not p then system.print(b.." in runTasks:",q)self:removeTask(b)end end end end end;function self:hasAction(r,b)return self.functionRegister[r]~=nil and self.functionRegister[r][b]~=nil end;function self:addAction(r,b,h)assert(type(r)=="string","action isn't a string, type was "..type(r))assert(type(b)=="string",r..": name isn't a string, type was "..type(b))assert(type(h)=="function",r..":"..b..": func isn't a function, type was "..type(h))if self.functionRegister[r]==nil then self.functionRegister[r]={}end;self.functionRegister[r][b]=h end;function self:removeAction(r,b)if self.functionRegister[r]==nil or self.functionRegister[r][b]==nil then return false end;self.functionRegister[r][b]=nil;return true end;function self:callAction(r,...)local s={}if self.functionRegister[r]~=nil then for b,h in pairs(self.functionRegister[r])do if h~=nil then local t,u=pcall(h,...)if t then s[b]=u else system.print(b.." in callAction:",u)end end end end;return s end;function self:callActionSpecific(r,b,...)assert(self.functionRegister[r]=="table",r..":".." not registered")assert(self.functionRegister[r][b]=="function",r..":"..b..": called specified function isn't a function, type was "..type(self.functionRegister[r][b]))local t,u=pcall(self.functionRegister[r][b],...)if t then return u else system.print(b.." in callActionSpecific:",u)end end;return self
        
        end
        system.rawPrint=system.print;function system.print(a,b)if b then b=tostring(b):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"','chunk'):gsub("&","&amp;"):gsub("<","&lt;"):gsub(">","&gt;")else b="???"end;system.rawPrint(a.." "..b)end;function print(c)system.rawPrint(tostring(c))end;local d=unit;if devMode==true and player.hasDRMAutorization()~=1 then print("devMode set but no DRM auth")error("devMode set but no DRM auth")d.exit()end;if d.hasDRM()==0 then if devMode~=true then print("DRM Required")error("DRM Required")d.exit()else print("DRM requirement skipped by devMode")end end;d.hideWidget()print("Hyperion Gunner Script V0.94")print("by Hyperion Scripting")system.showScreen(1)system.setScreen([[<svg xmlns="http://www.w3.org/2000/svg" width="40%" style="left:30%;top:10%;display:block; position:absolute;" viewBox="0 0 973.35 837.57">
            <defs>
            <style>
            .cls-1 { fill: #798a99; }
            .cls-2 { fill: #bd1730; }
            </style>
            </defs>
            <path class="cls-1" d="M583,93.5H437.52C353.65,361.21,211.41,603.08,25.7,804.26L98.3,930a1892.42,1892.42,0,0,1,828.89-.22l70.63-122.29C810.63,605.68,667.33,362.63,583,93.5ZM508.29,740.05A945,945,0,0,0,206.5,789.18C357.22,655.35,464.94,474.16,506.32,269c41.16,204.15,148,384.54,297.51,518.13A945.66,945.66,0,0,0,508.29,740.05Z" transform="translate(-25.08 -93)"/>
            <circle class="cls-2" cx="481.42" cy="523.5" r="118"/>
            </svg>
            <svg height="100%" width="100%" viewBox="0 0 1920 1080" style="left:0;top:0;display:block; position:absolute;">
            <text x="40%" y="88%" style="fill:#FFFFFF;font-size:50px">Hyperion Scripting</text>
            </svg>]])local e=require;require=function(f)return print("require '"..f.."': deprecated, use getPlugin()")end;local g={}local h={}function g:fixName(f,i)local j=packagePrefix;if i then j=""end;if string.find(f,j)then f=string.gsub(f,j,"")end;return f end;function g:unloadPlugin(f,i)assert(type(f)=="string","getPlugin: parameter name has to be string, was "..type(f))f=g:fixName(f,i)local j=packagePrefix;if i then j=""end;if package.loaded~=nil and package.loaded[j..f]~=nil then package.loaded[j..f]=nil end;if h[f]~=nil then if type(h[f])=="table"and type(h[f].unregister)=="function"then h[f].unregister()end;h[f]=nil end end;function g:getPlugin(f,k,l,i)assert(type(f)=="string","getPlugin: parameter name has to be string, was "..type(f))if k==nil then k=false end;f=g:fixName(f,i)if not g:hasPlugin(f,k,i)then return nil end;if type(h[f])=="table"and h[f].valid~=nil then if h[f]:valid(l)~=true then if not k then print("getPlugin '"..f.."':".." Not valid or compatible")end;return nil end end;return h[f]end;function g:hasPlugin(f,k,i)assert(type(f)=="string","hasPlugin: parameter name has to be string, was "..type(f))if k==nil then k=false end;f=g:fixName(f,i)local j=packagePrefix;if i then j=""end;if h[f]==nil then h[f]=false;if player.hasDRMAutorization()~=1 and package.preload[j..f]==nil then print("hasPlugin '"..f.."': DRM auth required to load external files")else local m,n=pcall(e,j..f)if not m then if k==nil or not k then system.print("hasPlugin '"..f.."': require failed",n)end else h[f]=n end end;if type(h[f])=="table"then if h[f].register~=nil then if _ENV["debugscreen"]==nil then _ENV["debugscreen"]=debugscreen end;if _ENV["register"]==nil then _ENV["register"]=register end;if _ENV["system"]==nil then _ENV["system"]=system end;if _ENV["unit"]==nil then _ENV["unit"]=unit end;if _ENV["player"]==nil then _ENV["player"]=player end;if _ENV["construct"]==nil then _ENV["construct"]=construct end;if _ENV["library"]==nil then _ENV["library"]=library end;local o,p=pcall(h[f].register,h[f],_ENV)if not o and not k then system.print("hasPlugin '"..f.."': register failed",p)end end else if h[f]~=nil and h[f]~=false then if type(h[f])=="string"then print("hasPlugin '"..f.."':"..h[f])else print("hasPlugin '"..f.."': not table value")end end end end;return type(h[f])=="table"end;function unloadPlugin(f,i)return g:unloadPlugin(f,i)end;function hasPlugin(f,k,i)return g:hasPlugin(f,k,i)end;function getPlugin(f,k,l,i)return g:getPlugin(f,k,l,i)end;local q={}unitType=""renderEveryXFrames=1;executeTotal=0;executeSet=0;executeTime=0;executeLastFrames=0;screenToggle=true;mode=-1;forceMode=-1;bootTime=system.getArkTime()useLightStyle=false;local r=120;local s=184;modeColors={}modeColors[0]=r;modeColors[1]=s;fuelTankHandlingSpace=3;fuelTankHandlingRocket=0;fuelTankHandlingAtmos=0;ContainerOptimization=4;FuelTankOptimization=4;function collect_keys(t,u)local v={}for w in pairs(t)do v[#v+1]=w end;table.sort(v,u)return v end;function sortedPairs(t,u)local x=collect_keys(t,u)local y=0;return function()y=y+1;if x[y]then return x[y],t[x[y]]end end end;function tableLength(z)local A=0;for B in pairs(z)do A=A+1 end;return A end;function timeit(C,D)collectgarbage()local E=system.getTime()local F=D()local G=system.getTime()print(C..": "..G-E)return F end;function getRelativePitch(H)return math.deg(math.atan(H[2],H[3]))-90 end;function getRelativeYaw(H)return math.deg(math.atan(H[2],H[1]))-90 end;function mysplit(I,J)if J==nil then J="%s"end;local t={}for c in string.gmatch(I,"([^"..J.."]+)")do table.insert(t,c)end;return t end;function inTable(K,L)if type(K)~="table"then return false end;for w,M in pairs(K)do if M==L then return true,w end end;return false end;function round(N,O)local P=10^(O or 0)if O~=nil then return math.floor(N*P+0.5)/P else return math.floor((N*P+0.5)/P)end end;if not inTable(player.getOrgIds(),2041)then system.print("Corp signatur required")error("Corp signatur required")d.exit()end;register=getPlugin("register")slots=getPlugin("slots")register:callAction("systemStart")local Q={}function addTimer(R,S,T)d.setTimer(R,S)Q[R]=T end;function onTimer(U)if Q[U]~=nil then local V,W=pcall(Q[U])if not V then print("Timer:"..W.."  "..U)end end end;function stopTimer()for w,B in pairs(Q)do d.setTimer(w,0)end end;local X=0;function delay(Y,S)local R="DelayCounter"..X;addTimer(R,S,function()pcall(Y)d.stopTimer(R)end)X=X+1 end;register:addAction("unitOnTimer","Timer",onTimer)if devMode==true then getPlugin("dev",true)getPlugin("devTools",true)end;getPlugin("optionals",true)for f,B in sortedPairs(package.preload)do getPlugin(f,true)end;delay(function()register:callAction("unitOnStart")end,0.5)
        
    onStop:
      lua: if register ~= nil then register:callAction("unitOnStop",unit) end
    onTimer(tag):
      lua: if register ~= nil then register:callAction("unitOnTimer",tag,unit) end
  system:
    onActionStart(action):
      lua: if register ~= nil then register:callAction("systemOnActionStart",action,system) end
    onActionStop(action):
      lua: if register ~= nil then register:callAction("systemOnActionStop",action,system) end
    onActionLoop(action):
      lua: if register ~= nil then register:callAction("systemOnActionLoop",action,system) end
    onUpdate:
      lua: if register ~= nil then register:callAction("systemOnUpdate",system) end
    onFlush:
      lua: if register ~= nil then register:callAction("systemOnFlush",system) end
    onInputText(text):
      lua: if register ~= nil then register:callAction("systemOnInputText",text,system) end
    onCameraChanged(mode):
      lua: if register ~= nil then register:callAction("systemOnCameraChanged",mode,system) end
  transponder:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,transponder) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,transponder) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,transponder) end
  weapon_1:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_1) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_1) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_1) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_1) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_1) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_1) end
  weapon_2:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_2) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_2) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_2) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_2) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_2) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_2) end
  weapon_3:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_3) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_3) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_3) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_3) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_3) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_3) end
  weapon_4:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_4) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_4) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_4) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_4) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_4) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_4) end
  weapon_5:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_5) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_5) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_5) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_5) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_5) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_5) end
  weapon_6:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_6) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_6) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_6) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_6) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_6) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_6) end
  weapon:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon) end
  radar_1:
    enter(id):
      lua: if register ~= nil then register:callAction("Enter",id,radar_1) end
    leave(id):
      lua: if register ~= nil then register:callAction("Leave",id,radar_1) end
  radar_2:
    enter(id):
      lua: if register ~= nil then register:callAction("Enter",id,radar_2) end
    leave(id):
      lua: if register ~= nil then register:callAction("Leave",id,radar_2) end
  radar_3:
    enter(id):
      lua: if register ~= nil then register:callAction("Enter",id,radar_3) end
    leave(id):
      lua: if register ~= nil then register:callAction("Leave",id,radar_3) end
  radar_4:
    enter(id):
      lua: if register ~= nil then register:callAction("Enter",id,radar_4) end
    leave(id):
      lua: if register ~= nil then register:callAction("Leave",id,radar_4) end
  radar_5:
    enter(id):
      lua: if register ~= nil then register:callAction("Enter",id,radar_5) end
    leave(id):
      lua: if register ~= nil then register:callAction("Leave",id,radar_5) end
  radar_6:
    enter(id):
      lua: if register ~= nil then register:callAction("Enter",id,radar_6) end
    leave(id):
      lua: if register ~= nil then register:callAction("Leave",id,radar_6) end
  radar:
    enter(id):
      lua: if register ~= nil then register:callAction("Enter",id,radar) end
    leave(id):
      lua: if register ~= nil then register:callAction("Leave",id,radar) end
  shieldGenerator:
    onToggled(active):
      lua: if register ~= nil then register:callAction("OnToggled",active,shieldGenerator) end
    onAbsorbed(hitpoints,rawHitpoints):
      lua: if register ~= nil then register:callAction("OnAbsorbed",hitpoints,rawHitpoints,shieldGenerator) end
    onVentin(active,restoredHitpoints):
      lua: if register ~= nil then register:callAction("OnVentin",active,restoredHitpoints,shieldGenerator) end
    onDown:
      lua: if register ~= nil then register:callAction("OnDown",shieldGenerator) end
    onRestored:
      lua: if register ~= nil then register:callAction("OnRestored",shieldGenerator) end
  core:
    onStressChanged(stress):
      lua: if register ~= nil then register:callAction("coreOnStressChanged",stress,core) end
