name: Ares_GunnerV0.9
slots:
  databank:
    class: DataBank
    select: manual
  transponder:
    class: TransponderUnit
  weapon:
    class: WeaponUnit
    select: manual
  radar:
    class: RadarPVPUnit
    select: manual
  shieldGenerator:
    class: ShieldGeneratorUnit
  core:
    class: CoreUnit
handlers:
  unit:
    onStart:
      lua: |
        packagePrefix = "autoconf.custom.AresOS."
        package.preload[packagePrefix.."configuration"] = function()
           local self={}local a=""function self:valid(b)return true end;self.version=0.91;self.loadPrio=1000;function self:register(c)_ENV=c end;self.owner=2041;self.creator=17654;self.basePos="::pos{0,0,-91264.7828,408204.8952,40057.4424}"self.friOrgs={11169,7922,8228,2917,17654,6714,13995,9355,18058,4699,9574,17981,12746,5870,12601,8180,3516,9151,8697,3644,14719,6707,18488}self.friPlayer={94563,57230,61799,27464,105615,55748,47124,47130,95815,105050,71758,114939,51450,72744}return self
        
        end
        package.preload[packagePrefix.."menuscreener"] = function()
           local self={}self.viewTags={"screen"}self.loadPrio=100;self.version=0.91;local a=0;local b=nil;local c=nil;local d=false;local e="AQN5B4-@7gSt1W?;"function self:valid(f)return true end;local g="Main"local h={}local i={}function self:addMenu(j,k)h[j]=k end;local l="gunner"function self:onMouseDown(m,n,o)end;function self:onMouseUp(p)local m=p.mouseX*100;local n=p.mouseY*100;for q,r in pairs(i)do if r.top<=n and n<=r.top+r.height and r.left<=m and m<=r.left+r.width then pcall(r.func)break end end end;function self:addButton(s,t,u,v,k)table.insert(i,{["top"]=t,["left"]=s,["width"]=u,["height"]=v,["func"]=k})end;function self:addFancyButton(s,t,u,v,k,j,w,x,y)self:addButton(s,t,u,v,k)local z=0.2;if t<=x and x<=t+v and s<=w and w<=s+u then z=0.5 end;y=y or"4682B4"local HTML=[[                        
                <rect x="]]..s..[[%" y="]]..t..[[%" rx="2" ry="2" width="]]..u..[[%" height="]]..v..[[%" style="fill:#]]..y..[[;fill-opacity:]]..z..[[" />
                <text x="]]..s+u*0.1 ..[[%" y="]]..t+v*0.7 ..[[%" style="fill:#FFFFFF;font-size:]]..v*1.5 ..[[">]]..j..[[</text>
            ]]return HTML end;function self:register(A)_ENV=A;if not self:valid(e)then return end;b=getPlugin("baseflight",true)c=getPlugin("screener",true)if c==nil then return end;c:addScreen("centerfirst",{offsetx=0.3035,offsety=0.11,width=0.393,height=0.7,perspective="first",parent="mainScreenFirst"})c:registerDefaultScreen("centerfirst","Menu")c:addView("Menu",self)register:addAction("option6Start","Exit",function()local B=system.getCameraMode()if B==1 and not d then system.lockView(1)d=true;c:freeMouse(true)else system.lockView(0)d=false;c:freeMouse(false)if b~=nil then b:setUpdateState(true)end end end)if player.getId()==23833 then register:addAction("systemOnCameraChanged","ViewLocker",function(B)if B==1 then system.lockView(1)d=true;c:freeMouse(true)end end)end;register:addAction("systemOnCameraChanged","ViewLockerStop",function(B)if B~=1 then system.lockView(0)d=false;c:freeMouse(false)if b~=nil then b:setUpdateState(true)end end end)self:addMenu("settings",function(w,x,C,D)self:addButton(3,10,20,3,function()l="gunner"a=0 end)self:addButton(53,10,20,3,function()l="remote"a=0 end)if D then if b~=nil then b:setUpdateState(false)end;a=a+system.getMouseWheel()*-1 else if b~=nil then b:setUpdateState(true)end end;if a<0 then a=0 end;local HTML=""if unitType=="gunner"then local E="4682B4"local F="4682B4"if l=="gunner"then E="00ff00"else F="00ff00"end;HTML=[[           
                    <rect x="2%" y="9%" rx="2" ry="2" width="96%" height="89%" style="fill:#4682B4;fill-opacity:0.35" />
        
                    <rect x="3%" y="10%" rx="2" ry="2" width="20%" height="3%" style="fill:#]]..E..[[;fill-opacity:0.8" />
                    <text x="5%" y="12%" style="fill:#FFFFFF;font-size:6">Gunner</text>
        
                    <rect x="53%" y="10%" rx="2" ry="2" width="20%" height="3%" style="fill:#]]..F..[[;fill-opacity:0.8" />
                    <text x="55%" y="12%" style="fill:#FFFFFF;font-size:6">Remote</text>
                    ]]end;if unitType==l then HTML=HTML..[[]]local G={}local H=getPlugin("settings")for I,J in pairs(H.Description)do table.insert(G,{I,nil})for j,K in pairs(J)do table.insert(G,{I,j})end end;local z=false;for L=1,80,1 do local y=L+a;local M=0;z=not z;if z then M=0.3 end;if G[y]==nil then break end;local N=G[y][1]local O=G[y][2]local P="4682B4"if L*3+13.2<=x and x<=L*3+13+2.5 and 2.5<=w and w<=2.5+95 then P="244c9c"M=0.3 end;if O==nil then HTML=HTML..[[<rect x="2.5%" y="]]..L*3+13 ..[[%" rx="2" ry="2" width="95%" height="3%" style="fill:#]]..P..[[;fill-opacity:]]..M..[[" /><text x="5%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">]]..N..[[</text>]]else HTML=HTML..[[<rect x="2.5%" y="]]..L*3+13 ..[[%" rx="2" ry="2" width="95%" height="3%" style="fill:#]]..P..[[;fill-opacity:]]..M..[[" /><text x="5%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">]]..O..[[</text><text x="60%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">]]..H.Description[N][O]..[[</text>
                            <text x="25%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">]]..tostring(H:get(O,N))..[[</text>
                            ]]local Q=H.Range[N][O]if Q[1]=="boolean"then HTML=HTML..[[<text x="30%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{]]..tostring(not H:get(O,N))..[[}</text>]]self:addButton(30,L*3+13.2,5,2.5,function()H:set(O,not H:get(O,N),N)end)elseif Q[1]=="string"then local m=0;for q,R in pairs(Q[2])do HTML=HTML..[[<text x="]]..30+m..[[%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{]]..R..[[}</text>]]self:addButton(30+m,L*3+13.2,#R*1.5,2.5,function()H:set(O,R,N)end)m=m+#R+2 end elseif Q[1]=="number"then local m=0;HTML=HTML..[[<text x="]]..30+m..[[%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{]]..Q[2]..[[}</text>]]self:addButton(29.25+m,L*3+13.2,4.5,2.5,function()H:set(O,Q[2],N)end)m=m+4;HTML=HTML..[[<text x="]]..30+m..[[%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{-]]..Q[4]..[[}</text>]]self:addButton(29.25+m,L*3+13.2,4.5,2.5,function()H:set(O,H:get(O,N)-Q[4],N)end)m=m+4;HTML=HTML..[[<text x="]]..30+m..[[%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{+]]..Q[4]..[[}</text>]]self:addButton(29.25+m,L*3+13.2,4.5,2.5,function()H:set(O,H:get(O,N)+Q[4],N)end)m=m+4;HTML=HTML..[[<text x="]]..30+m..[[%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{]]..Q[3]..[[}</text>]]self:addButton(29.25+m,L*3+13.2,4.5,2.5,function()H:set(O,Q[3],N)end)else end end end end;return HTML end)if unitType~="gunner"then self:addMenu("Commander",function(w,x,C,D)if D and(9<=x and x<=98 and 2<=w and w<=68)then if b~=nil then b:setUpdateState(false)end;a=a+system.getMouseWheel()*-1 else if b~=nil then b:setUpdateState(true)end end;return""end)self:addMenu("Ship",function(w,x,C,D)if D and(9<=x and x<=98 and 2<=w and w<=68)then if b~=nil then b:setUpdateState(false)end;a=a+system.getMouseWheel()*-1 else if b~=nil then b:setUpdateState(true)end end;return""end)self:addMenu("Main",function(w,x,C,D)HTML=""self:addFancyButton(3,93,15,4,function()unit.exit()end,"AllExit",w,x)HTML=HTML..self:addFancyButton(35,93,15,4,function()unit.exit()end,"RemoteExit",w,x)return HTML end)else self:addMenu("Pilot",function()return""end)end end;function self:setScreen(p)local w=p.mouseX;local x=p.mouseY;local C=p.mouseDown;local S=false;local D=false;w=w*100;x=x*100;if 0<=x and x<=100 and 0<=w and w<=100 then S=true;if 9<=x and x<=98 and 2<=w and w<=98 then D=true end end;if not system.isViewLocked()and unitType~="remote"then return""end;if not d then return end;i={}self:addButton(2,2,17.6,5,function()g="Main"end)self:addButton(21.6,2,17.6,5,function()g="Commander"end)self:addButton(41.2,2,17.6,5,function()g="Ship"end)self:addButton(60.8,2,17.6,5,function()g="Pilot"end)self:addButton(80.4,2,17.6,5,function()g="settings"a=0 end)self:addButton(92.5,92.5,5,5,function()system.lockView(0)d=false;c:freeMouse(false)if b~=nil then b:setUpdateState(true)end end)local HTML=""if unitType=="gunner"then HTML=[[        
                <svg style="width:100%;height:100%" viewBox="0 0 300 300">
                    <rect x="0%" y="0%" rx="2" ry="2" width="100%" height="100%" style="fill:#000000;fill-opacity:0.35" />
        
                    <rect x="2%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
                    <rect x="21.6%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
                    <rect x="41.2%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
                    <rect x="60.8%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
                    <rect x="80.4%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
        
                    <text x="8%" y="5.5%" style="fill:#FFFFFF;font-size:8">Main</text>
                    <text x="22%" y="5.5%" style="fill:#FFFFFF;font-size:8">Commander</text>
                    <text x="47%" y="5.5%" style="fill:#FFFFFF;font-size:8">Ship</text>
                    <text x="66.5%" y="5.5%" style="fill:#FFFFFF;font-size:8">Pilot</text>
                    <text x="83.8%" y="5.5%" style="fill:#FFFFFF;font-size:8">Settings</text>]]else HTML=[[        
                    <svg style="width:100%;height:100%" viewBox="0 0 300 300">]]end;local T,U,V=pcall(h[g],w,x,C,D)res=res or""V=V or""if T then HTML=HTML..U;return HTML..[[<text x="94%" y="97%" style="fill:#FFFFFF;font-size:14">X</text></svg>]]..V else if devMode then print(res)end end;return HTML..[[<text x="94%" y="97%" style="fill:#FFFFFF;font-size:14">X</text></svg>]]end;return self
        
        end
        package.preload[packagePrefix.."menuGunner"] = function()
           local self={}self.loadPrio=100;self.version=0.91;local a="AQN5B4-@7gSt1W?;"local b=0;function self:valid(c)if c~=a then return false end;return unitType=="gunner"end;function self:register(d)_ENV=d;if not self:valid(a)then return end;local e=getPlugin("menuscreener",true,a)if e==nil then return end;if core~=nil then local f=getTanks()self.SpaceTanks,self.RocketTanks=f.space,f.rocket end;e:addMenu("Main",function(g,h,i,j)HTML=[[
                <rect x="66%" y="9%" rx="2" ry="2" width="32%" height="20%" style="fill:#4682B4;fill-opacity:0.35" />
                <text x="70%" y="13%" style="fill:#FFFFFF;font-size:8">Destinations</text>]]HTML=HTML..e:addFancyButton(68,15,28,5,function()system.setWaypoint(getPlugin("configuration").basePos)end,"Base",g,h)if transponder~=nil then HTML=HTML..e:addFancyButton(68,50,28,5,function()transponder.deactivate()delay(transponder.activate,0.5)end,"RestartTrans",g,h)end;HTML=HTML..e:addFancyButton(3,93,15,4,function()unit.exit()end,"AllExit",g,h)HTML=HTML..e:addFancyButton(19,93,15,4,function()unit.exit()end,"GunnerExit",g,h)return HTML end)e:addMenu("Ship",function(g,h,i,j)HTML=[[
                    <rect x="2%" y="9%" rx="2" ry="2" width="56%" height="89%" style="fill:#4682B4;fill-opacity:0.35" />
                    <rect x="60%" y="9%" rx="2" ry="2" width="38%" height="49%" style="fill:#4682B4;fill-opacity:0.35" />
                    <rect x="60%" y="60%" rx="2" ry="2" width="38%" height="38%" style="fill:#4682B4;fill-opacity:0.35" />
        
                    <text x="6%" y="13%" style="fill:#FFFFFF;font-size:8">Elements</text>
                    <text x="64%" y="13%" style="fill:#FFFFFF;font-size:8">Tanks</text>
                    <text x="64%" y="64%" style="fill:#FFFFFF;font-size:8">Shield</text>]]if j and(9<=h and h<=98 and 2<=g and g<=68)then if baseFly~=nil then baseFly:setUpdateState(false)end;b=b+system.getMouseWheel()*-1 else if baseFly~=nil then baseFly:setUpdateState(true)end end;if core~=nil then local k=0;HTML=HTML..[[<text x="64%" y="16%" style="fill:#FFFFFF;font-size:8">Space:</text>]]for l,m in pairs(self.SpaceTanks)do local n=CalculateFuelLevel(m)*100;HTML=HTML..[[
                            <text x="64%" y="]]..19+k..[[%" style="fill:#FFFFFF;font-size:8">]]..m[1]..[[</text>
                            <text x="75%" y="]]..19+k..[[%" style="fill:#FFFFFF;font-size:8">]]..round(n,2)..[[</text>
                        ]]k=k+3 end;k=k+3;HTML=HTML..[[<text x="64%" y="]]..19+k..[[%" style="fill:#FFFFFF;font-size:8">Rocket:</text>]]for l,m in pairs(self.RocketTanks)do local n=CalculateFuelLevel(m)*100;HTML=HTML..[[
                            <text x="64%" y="]]..19+k..[[%" style="fill:#FFFFFF;font-size:8">]]..m[1]..[[</text>
                            <text x="75%" y="]]..19+k..[[%" style="fill:#FFFFFF;font-size:8">]]..round(n,2)..[[</text>
                        ]]k=k+3 end;local o=0;local p=0;local q={}for r,s in pairs(core.getElementIdList())do local t=core.getElementHitPointsById(s)local u=core.getElementMaxHitPointsById(s)o=o+t;p=p+u;if t~=u then table.insert(q,s)end end;HTML=HTML..[[
                            <text x="6%" y="]]..19 ..[[%" style="fill:#FFFFFF;font-size:8">ElementHP:</text>
                            <text x="30%" y="]]..19 ..[[%" style="fill:#FFFFFF;font-size:8">]]..round(o).."/"..round(p)..[[</text>]]HTML=HTML..[[
                        <text x="6%" y="]]..22 ..[[%" style="fill:#FFFFFF;font-size:8">CoreStress:</text>
                        <text x="30%" y="]]..22 ..[[%" style="fill:#FFFFFF;font-size:8">]]..round(core.getCoreStress()).."/"..round(core.getMaxCoreStress())..[[</text>]]k=28;for v=1,20,1 do local s=q[v+b]if s==nil then break end;HTML=HTML..[[
                            <text x="6%" y="]]..k..[[%" style="fill:#FFFFFF;font-size:8">]]..core.getElementDisplayNameById(s)..[[</text>
                            <text x="30%" y="]]..k..[[%" style="fill:#FFFFFF;font-size:8">]]..round(core.getElementHitPointsById(s)/core.getElementMaxHitPointsById(s)*100,2)..[[</text>
                        ]]k=k+3 end end;if shield~=nil then local w=tostring;HTML=HTML..[[
                        <text x="64%" y="67%" style="fill:#FFFFFF;font-size:5">State</text>
                        <text x="64%" y="70%" style="fill:#FFFFFF;font-size:5">HP</text>
                        <text x="64%" y="73%" style="fill:#FFFFFF;font-size:5">venting</text>
                        <text x="64%" y="76%" style="fill:#FFFFFF;font-size:5">VentingCd</text>
                        <text x="64%" y="79%" style="fill:#FFFFFF;font-size:5">Resistances</text>
                        <text x="64%" y="82%" style="fill:#FFFFFF;font-size:5">ResCd</text>
                        <text x="64%" y="85%" style="fill:#FFFFFF;font-size:5">ResPool</text>
                        <text x="64%" y="88%" style="fill:#FFFFFF;font-size:5">StressRatio</text>
                        <text x="64%" y="91%" style="fill:#FFFFFF;font-size:5">StressHp</text>
                        <text x="64%" y="94%" style="fill:#FFFFFF;font-size:5"></text>
                        <text x="64%" y="97%" style="fill:#FFFFFF;font-size:5"></text>
        
                        <text x="75%" y="67%" style="fill:#FFFFFF;font-size:5">]]..w(shield.isActive())..[[</text>
                        <text x="75%" y="70%" style="fill:#FFFFFF;font-size:5">]]..round(shield.getShieldHitpoints()).."  /  "..shield.getMaxShieldHitpoints()..[[</text>
                        <text x="75%" y="73%" style="fill:#FFFFFF;font-size:5">]]..w(shield.isVenting())..[[</text>
                        <text x="75%" y="76%" style="fill:#FFFFFF;font-size:5">]]..round(shield.getVentingCooldown()).."  /  "..shield.getVentingMaxCooldown()..[[</text>
                        <text x="75%" y="79%" style="fill:#FFFFFF;font-size:5">]]..shield.getResistances()[1].." "..shield.getResistances()[2].." "..shield.getResistances()[3].." "..shield.getResistances()[4]..[[</text>
                        <text x="75%" y="82%" style="fill:#FFFFFF;font-size:5">]]..shield.getResistancesCooldown().."  /  "..shield.getResistancesMaxCooldown()..[[</text>
                        <text x="75%" y="85%" style="fill:#FFFFFF;font-size:5">]]..shield.getResistancesRemaining().."  /  "..shield.getResistancesPool()..[[</text>
                        <text x="75%" y="88%" style="fill:#FFFFFF;font-size:5">]]..round(shield.getStressRatioRaw()[1],2).." "..round(shield.getStressRatioRaw()[2],2).." "..round(shield.getStressRatioRaw()[3],2).." "..round(shield.getStressRatioRaw()[4],2)..[[</text>
                        <text x="75%" y="91%" style="fill:#FFFFFF;font-size:5">]]..shield.getStressHitpointsRaw()..[[</text>]]local x="FF0000"if shield.isActive()then x="00FF00"end;HTML=HTML..e:addFancyButton(62,93,25,4,function()shield.activate()end,"activate Shield",g,h,x)end;return HTML end)end;function CalculateFuelLevel(s)return(core.getElementMassById(s[1])-s["me"])/s["mv"]end;function getTanks()local y,z,A={},{},{}local B=core.getElementIdList()fuelTankHandlingAtmos=fuelTankHandlingAtmos or 0;fuelTankHandlingSpace=fuelTankHandlingSpace or 0;fuelTankHandlingRocket=fuelTankHandlingRocket or 0;ContainerOptimization=ContainerOptimization or 0;FuelTankOptimization=FuelTankOptimization or 0;local function C(D)local E,F=0,0;if ContainerOptimization>0 then E=ContainerOptimization*0.05 end;if FuelTankOptimization>0 then F=FuelTankOptimization*0.05 end;return D*(1-(E+F))end;local f={atmo={},space={},rocket={}}local G=getPlugin("slots")for r,s in pairs(B)do local H=core.getElementClassById(s)local I=G:getClassType(H)if I~=nil then if I=="atmofueltank"or I=="spacefueltank"or I=="rocketfueltank"then local t=core.getElementMaxHitPointsById(s)local J=0;if I=="atmofueltank"then J=fuelTankHandlingAtmos elseif I=="spacefueltank"then J=fuelTankHandlingSpace elseif I=="rocketfueltank"then J=fuelTankHandlingRocket end;local K,L=tankStatsDefault(I,t,J)local M=false;M,K,L=tankStats(s,I,K,L)if not M then K=K+K*J*0.2;K=C(K)end;local N={[1]=s,["mv"]=K,["me"]=L}if I=="atmofueltank"then table.insert(f.atmo,N)elseif I=="spacefueltank"then table.insert(f.space,N)elseif I=="rocketfueltank"then table.insert(f.rocket,N)end end end end;for r,O in pairs(f)do table.sort(O,function(P,Q)return P[1]<Q[1]end)end;return f end;local R={atmofueltank={{w=10000,mv=51200,me=5480},{w=1300,mv=6400,me=988.67},{w=150,mv=1600,me=182.67},{w=0,mv=400,me=35.03}},spacefueltank={{w=10000,mv=76800,me=5480},{w=1300,mv=9600,me=988.67},{w=150,mv=2400,me=182.67},{w=0,mv=2400,me=182.67}},rocketfueltank={{w=65000,mv=50000*0.8,me=25740},{w=1300,mv=6400*0.8,me=4720},{w=150,mv=800*0.8,me=886.72},{w=0,mv=400*0.8,me=173.42}}}function tankStatsDefault(S,t)for r,T in pairs(R[S])do if t>T.w then return T.mv,T.me end end;return 0,0 end;function tankStats(s,U,K,L)local M=false;for r,V in pairs(_ENV[U])do if V.getLocalId()==s then M=true;K=V.getMaxVolume()*4;L=V.getSelfMass()break end end;return M,K,L end;return self
        
        end
        package.preload[packagePrefix.."combatscreen"] = function()
           local self={}self.version=0.91;self.loadPrio=1000;self.viewTags={"screen"}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;local tostring,tonumber=tostring,tonumber;local radar=radar[1]local c,d,e,f,g,h={data={kills={},id=player.getId(),name=player.getName()},ships={}},{},{},{},{},{}local i=0;local j=true;local k={Dead=true,[4]=true,[6]=true,[7]=true,[5]=true,XL=true,L=true,M=true,S=true,XS=true}local l,m,n,o;local p=1;local q=0;local r=false;local s=""local function t()end;function self:register(u)_ENV=u;if not self:valid(a)then return end;l=getPlugin("baseflight",true)m=getPlugin("radarwidget",true,a)n=getPlugin("gunnerhud",true,a)o=getPlugin("shortname",true,a)m:AddRadarMode("Automatic",function(v)local w=0;if database.hasKey~=nil then if database.hasKey("Primary")then w=database.getIntValue("Primary")m:AddShip(w,v,"primary - ",1)end end;if i~=0 then m:AddShip(i,v,"selected - ",2)end;for x,y in pairs(radar.getIdentifiedConstructIds())do if y==w or y==i then goto z end;m:AddShip(y,v,"")::z::end end)local A=getPlugin("commandhandler")A:AddCommand("t",function(B)if m.SpecialRadarMode=="Automatic"then i=o:getId(string.upper(B[2]))else m.tosearch=string.upper(B[2])m.SpecialRadarMode="Search"end end,"show the target: /t TW4")A:AddCommand("reset",function(B)for x,y in pairs(database.getKeyList())do if type(y)=="number"then database.clearValue(y)end end;for x,b in pairs(database.getKeyList())do if string.sub(b,0,3)=="dmg"then database.clearValue(b)end end;c={data={kills={},id=player.getId(),name=player.getName()},ships={}}end,"resets constructData")register:addAction("OnHit","combatData",function(y,C,D)if f[D.getLocalId()]==nil then f[D.getLocalId()]=0 end;f[D.getLocalId()]=f[D.getLocalId()]+1;table.insert(h,"Hit: "..round(C))y=tostring(y)if c.ships[y]==nil then c.ships[y]={}end;if c.ships[y].dmg==nil then c.ships[y].dmg=0 end;if c.ships[y].edes==nil then c.ships[y].edes={}end;c.ships[y].dmg=c.ships[y].dmg+math.floor(C)c.ships[y].lhit=math.floor(system.getUtcTime())end)register:addAction("OnElementDestroyed","combatData",function(y,E,D)table.insert(h,"E: "..string.sub(system.getItem(E).displayNameWithSize,0,20))y=tostring(y)if c.ships[y]==nil then c.ships[y]={}end;if c.ships[y].dmg==nil then c.ships[y].dmg=0 end;if c.ships[y].edes==nil then c.ships[y].edes={}end;table.insert(c.ships[y].edes,E)end)register:addAction("OnDestroyed","combatData",function(y,D)table.insert(c.data.kills,y)table.insert(h,"Killed: "..tostring(o:getShortName(y)))end)register:addAction("OnMissed","combatData",function(y,D)if g[D.getLocalId()]==nil then g[D.getLocalId()]=0 end;g[D.getLocalId()]=g[D.getLocalId()]+1;table.insert(h,"Missed: "..tostring(o:getShortName(y)))y=tostring(y)if c.ships[y]==nil then c.ships[y]={}end;if c.ships[y].dmg==nil then c.ships[y].dmg=0 end;if c.ships[y].edes==nil then c.ships[y].edes={}end;c.ships[y].lhit=math.floor(system.getUtcTime())end)register:addAction("unitOnStop","DataPrint",function()print(json.encode({ownData=c,shipData=e}))end)local F=getPlugin("screener",true)if F~=nil then F:addScreen("screen1third",{offsetx=0.01,offsety=0.03,width=0.2,height=0.25,perspective="third",parent="mainScreenThird"})F:registerDefaultScreen("screen1third","combatData")F:addView("combatData",self)end;addTimer("dmgtoDB",1,function()c.data.t=system.getArkTime()database.setStringValue("dmg"..unit.getLocalId(),json.encode(c))end)local function G()for x,y in pairs(radar.getIdentifiedConstructIds())do local H=""if radar.hasMatchingTransponder(y)then local I=radar.getConstructOwnerEntity(y)if I.isOrganization then H=system.getOrganization(I.id).name else H=system.getPlayerName(I.id)end end;database.setStringValue(y,json.encode({d=radar.getConstructInfos(y),m=math.floor(radar.getConstructMass(y)),n=radar.getConstructName(y),s=radar.getConstructCoreSize(y),k=radar.getConstructKind(y),o=H,h=radar.hasMatchingTransponder(y),a=radar.isConstructAbandoned(y),t=math.floor(system.getArkTime())}))e[y]={d=radar.getConstructInfos(y),m=math.floor(radar.getConstructMass(y)),n=radar.getConstructName(y),s=radar.getConstructCoreSize(y),k=radar.getConstructKind(y),o=H,h=radar.hasMatchingTransponder(y),a=radar.isConstructAbandoned(y),t=math.floor(system.getArkTime())}end;for x,J in pairs(databases)do for x,b in pairs(J.getKeyList())do local K=string.sub(b,4,#b)if string.sub(b,0,3)=="dmg"and K~=tostring(unit.getLocalId())then local L=json.decode(J.getStringValue(b))if system.getArkTime()-L.data.t>3600 then J.clearValue(b)else d[K]=L end;coroutine.yield()end end end;local M=0;for x,J in pairs(databases)do M=M+1;if M%10==0 then coroutine.yield()end;for x,y in pairs(J.getKeyList())do y=tonumber(y)if y~=nil then if not radar.isConstructIdentified(y)then local N=json.decode(J.getStringValue(y))if system.getArkTime()-N.t>60 then J.clearValue(y)else e[y]=N end end end end end end;local O;delay(function()O=coroutine.create(G)end,0.2)local P=0;register:addAction("systemOnUpdate","combatData",function()P=P+1;if P%3==0 then if O==nil then return end;if coroutine.status(O)=="dead"then O=coroutine.create(G)else coroutine.resume(O)end end end)if database.hasKey("dmg"..unit.getLocalId())then c=json.decode(database.getStringValue("dmg"..unit.getLocalId()))if system.getArkTime()-c.data.t>3600 then c={data={kills={}},ships={}}end;c.data.id=player.getId()c.data.name=player.getName()end;local Q=getPlugin("menuscreener",true,a)if Q~=nil then Q:addMenu("Commander",function(R,S,T,U)local w="none"if database.hasKey~=nil then if database.hasKey("Primary")then w=database.getIntValue("Primary")w=tostring(o:getShortName(w))end end;local function V(P,y,W,X,Y,Z,_,a0,a1,a2)Q:addButton(2.5,P-1.75,60,2.5,function()i=y;if not r then m.tosearch=string.upper(W)m.SpecialRadarMode="Search"end end)local a3={"Uni","Pla","Ast","Sta","Dyn","Spa","Ali"}local a4="4682B4"local a5=0;if a2 then a5=0.35 end;if P-1.75<=S and S<=P-1.75+2.5 and 2.5<=R and R<=2.5+65 then a4="244c9c"a5=0.35 end;_=_ or"plsIdent"local HTML=[[<rect x="2.5%" y="]]..P-1.75 ..[[%" rx="2" ry="2" width="65%" height="2.5%" style="fill:#]]..a4 ..[[;fill-opacity:]]..a5 ..[[" /><text x="3%" y="]]..P..[[%" style="fill:#FFFFFF;font-size:5">]]..W..[[</text>
                        <text x="7.8%" y="]]..P..[[%" style="fill:#FFFFFF;font-size:5">]]..X..[[</text>
                        <text x="28%" y="]]..P..[[%" style="fill:#FFFFFF;font-size:5">]]..Y..[[</text>
                        <text x="33%" y="]]..P..[[%" style="fill:#FFFFFF;font-size:5">]]..a3[Z]..[[</text>
                        <text x="39%" y="]]..P..[[%" style="fill:#FFFFFF;font-size:5">]].._..[[</text>
                        <text x="47%" y="]]..P..[[%" style="fill:#FFFFFF;font-size:5">]]..a0 ..[[</text>
                        <text x="57%" y="]]..P..[[%" style="fill:#FFFFFF;font-size:5">T - ]]..a1 ..[[ s</text>
                        ]]if s=="You"then Q:addButton(65,P-1.75,2.5,2.5,function()if database.hasKey~=nil then for x,J in pairs(databases)do J.setIntValue("Primary",y)end end end)local a4="00FF00"if y==i then a4="FFFF00"elseif w==W then a4="FF0000"end;HTML=HTML..[[<rect x="65%" y="]]..P-1.75 ..[[%" rx="2" ry="2" width="2.5%" height="2.5%" style="fill:#]]..a4 ..[[;fill-opacity:0.2" />]]end;return HTML end;if U and(9<=S and S<=98 and 2<=R and R<=68)then if l~=nil then l:setUpdateState(false)end;q=q+system.getMouseWheel()*-1 else if l~=nil then l:setUpdateState(true)end end;if q<0 then q=0 end;local a6=0;local a7={}for x,C in pairs(c.ships)do a6=a6+C.dmg end;for a8,N in pairs(d)do local b=N.data.name;a7[b]=0;for x,C in pairs(N.ships)do a7[b]=a7[b]+C.dmg end end;for y in pairs(e)do local W=tostring(y)if c.ships[W]~=nil and c.ships[W].lhit~=nil then e[y].lhit=c.ships[W].lhit end;for b,N in pairs(d)do if N.ships[W]~=nil and N.ships[W].lhit~=nil then if e[y].lhit<N.ships[W].lhit then e[y].lhit=N.ships[W].lhit end end end end;HTML=[[
                    <rect x="2%" y="9%" rx="2" ry="2" width="66%" height="89%" style="fill:#4682B4;fill-opacity:0.35" />
                    <rect x="70%" y="9%" rx="2" ry="2" width="28%" height="20%" style="fill:#4682B4;fill-opacity:0.35" />
                    <rect x="70%" y="31%" rx="2" ry="2" width="28%" height="47%" style="fill:#4682B4;fill-opacity:0.35" />
                    <rect x="70%" y="80%" rx="2" ry="2" width="28%" height="18%" style="fill:#4682B4;fill-opacity:0.35" />
        
                    <text x="4%" y="17%" style="fill:#FFFFFF;font-size:5">ID</text>
                    <text x="8%" y="17%" style="fill:#FFFFFF;font-size:5">Name</text>
                    <text x="28%" y="17%" style="fill:#FFFFFF;font-size:5">Size</text>
                    <text x="33%" y="17%" style="fill:#FFFFFF;font-size:5">Type</text>
                    <text x="39%" y="17%" style="fill:#FFFFFF;font-size:5">MaxV</text>
                    <text x="47%" y="17%" style="fill:#FFFFFF;font-size:5">TotalDmg</text>
                    <text x="57%" y="17%" style="fill:#FFFFFF;font-size:5">lastHit</text>
        
                    <line x1="10" y1="52" x2="200" y2="52" style="stroke:#FFFFFF;stroke-width:0.5" />
                    
                    <line x1="23" y1="48" x2="23" y2="290" style="stroke:#FFFFFF;stroke-width:0.5" />
                    <line x1="82" y1="48" x2="82" y2="290" style="stroke:#FFFFFF;stroke-width:0.5" />
                    <line x1="97" y1="48" x2="97" y2="290" style="stroke:#FFFFFF;stroke-width:0.5" />
                    <line x1="115" y1="48" x2="115" y2="290" style="stroke:#FFFFFF;stroke-width:0.5" />
                    <line x1="139" y1="48" x2="139" y2="290" style="stroke:#FFFFFF;stroke-width:0.5" />
                    <line x1="169" y1="48" x2="169" y2="290" style="stroke:#FFFFFF;stroke-width:0.5" />
                    
                    <text x="72%" y="12%" style="fill:#FFFFFF;font-size:7">DamageDealt:</text>
                    <text x="72%" y="15%" style="fill:#FFFFFF;font-size:5">You:</text>  <text x="85%" y="15%" style="fill:#FFFFFF;font-size:5">]]..round(a6)..[[</text>
        
                    <text x="72%" y="34%" style="fill:#FFFFFF;font-size:7">TargetInfos:</text>]]local P=18;for a8,C in pairs(a7)do HTML=HTML..[[<text x="72%" y="]]..P..[[%" style="fill:#FFFFFF;font-size:5">]]..a8 ..[[</text>  <text x="85%" y="]]..P..[[%" style="fill:#FFFFFF;font-size:5">]]..round(C)..[[</text>]]P=P+3 end;s=""if database.hasKey~=nil then if database.hasKey("Com")then s=database.getStringValue("Com")if s==player.getName()then s="You"end end end;HTML=HTML..Q:addFancyButton(71,81,26,3,function()if database.hasKey==nil then return end;for x,J in pairs(databases)do if s=="You"then J.clearValue("Com")else J.setStringValue("Com",player.getName())end end end,"Commander:    "..s,R,S)HTML=HTML..[[<text x="72%" y="90%" style="fill:#FFFFFF;font-size:7">Primary:</text> <text x="85%" y="90%" style="fill:#FFFF00;font-size:10">]]..w..[[</text>]]r=m.SpecialRadarMode=="Automatic"HTML=HTML..Q:addFancyButton(71,94,10,3,function()r=not r;if r then m.SpecialRadarMode="Automatic"else m.SpecialRadarMode=nil end end,"Slave:  "..tostring(r),R,S)if i==0 or e[i]==nil then HTML=HTML..[[<text x="72%" y="37%" style="fill:#FFFFFF;font-size:5">NoTargetSelected</text>]]else local a9=e[i]HTML=HTML..[[
                            <text x="72%" y="37%" style="fill:#FFFFFF;font-size:5">Weapon:</text>
                            <text x="72%" y="40%" style="fill:#FFFFFF;font-size:5">Radar:</text>
                            <text x="72%" y="43%" style="fill:#FFFFFF;font-size:5">antiGravity:</text>
                            <text x="72%" y="46%" style="fill:#FFFFFF;font-size:5">atmoEngines:</text>
                            <text x="72%" y="49%" style="fill:#FFFFFF;font-size:5">spaceEngines:</text>
                            <text x="72%" y="52%" style="fill:#FFFFFF;font-size:5">rocketEngines:</text>
                            <text x="72%" y="55%" style="fill:#FFFFFF;font-size:5">Mass:</text>
        
                            <text x="85%" y="37%" style="fill:#FFFFFF;font-size:5">]]..tostring(a9.d.weapons)..[[</text>
                            <text x="85%" y="40%" style="fill:#FFFFFF;font-size:5">]]..tostring(a9.d.radars)..[[</text>
                            <text x="85%" y="43%" style="fill:#FFFFFF;font-size:5">]]..tostring(a9.d.antiGravity)..[[</text>
                            <text x="85%" y="46%" style="fill:#FFFFFF;font-size:5">]]..tostring(a9.d.atmoEngines)..[[</text>
                            <text x="85%" y="49%" style="fill:#FFFFFF;font-size:5">]]..tostring(a9.d.spaceEngines)..[[</text>
                            <text x="85%" y="52%" style="fill:#FFFFFF;font-size:5">]]..tostring(a9.d.rocketEngines)..[[</text>
                            <text x="85%" y="55%" style="fill:#FFFFFF;font-size:5">]]..round(a9.m)..[[</text>]]if a9.h then HTML=HTML..[[
                                <text x="72%" y="61%" style="fill:#FFFFFF;font-size:5">Owner:</text>
                                <text x="80%" y="61%" style="fill:#FFFFFF;font-size:5">]]..a9.o..[[</text>
                            ]]end;local W=tostring(i)if i>1 and c.ships[W]~=nil then local aa=c.ships[W].dmg;local ab=#c.ships[W].edes;for x,N in pairs(d)do if N.ships[W]~=nil then aa=aa+N.ships[W].dmg;ab=ab+#N.ships[W].edes end end;HTML=HTML..[[                    
                                <text x="72%" y="58%" style="fill:#FFFFFF;font-size:5">Dmg:</text>
                                <text x="72%" y="61%" style="fill:#FFFFFF;font-size:5">EDes:</text>
                                <text x="85%" y="58%" style="fill:#FFFFFF;font-size:5">]]..aa..[[</text>
                                <text x="85%" y="61%" style="fill:#FFFFFF;font-size:5">]]..ab..[[</text>]]end end;local ac="ShowHostile"if j then ac="ShowFriendly"end;HTML=HTML..Q:addFancyButton(4,10,15,3,function()j=not j end,ac,R,S)if p==1 then ac="All"elseif p==2 then ac="OnlyNoData"else ac="OnlyData"end;HTML=HTML..Q:addFancyButton(20,10,15,3,function()p=p+1;if p>3 then p=1 end end,ac,R,S)local function ad(M,P,a8,R,S)local a3={"Uni","Pla","Ast","Sta","Dyn","Spa","Ali"}local ac=a8;if type(ac)=="number"then ac=a3[ac]end;local a4="FF0000"if k[a8]then a4="00FF00"end;return Q:addFancyButton(M,P,4,2,function()k[a8]=not k[a8]end,ac,R,S,a4)end;HTML=HTML..ad(40,10,"Dead",R,S)HTML=HTML..ad(45,10,4,R,S)HTML=HTML..ad(50,10,6,R,S)HTML=HTML..ad(55,10,7,R,S)HTML=HTML..ad(60,10,5,R,S)HTML=HTML..ad(40,13,"XL",R,S)HTML=HTML..ad(45,13,"L",R,S)HTML=HTML..ad(50,13,"M",R,S)HTML=HTML..ad(55,13,"S",R,S)HTML=HTML..ad(60,13,"XS",R,S)local P=20;local a2=true;local ae=1;if j then ae=0 end;local af={}local ag=radar.getConstructIds()if p==3 then ag=e end;for W,y in pairs(ag)do if p==3 then y=W end;if e[y]==nil then if ae~=radar.hasMatchingTransponder(y)then goto z end;if not k["Dead"]and radar.isConstructAbandoned(y)then goto z end;if not k[radar.getConstructKind(y)]then goto z end;if not k[radar.getConstructCoreSize(y)]then goto z end else if ae~=e[y].h then goto z end;if not k["Dead"]and e[y].a then goto z end;if not k[e[y].k]then goto z end;if not k[e[y].s]then goto z end;if p==2 then goto z end end;table.insert(af,y)::z::end;local ah=system.getUtcTime()for I=1,109,1 do local y=af[I+q]if y==nil then q=q-1;break end;local ai=ah;local C=0;local aj;if e[y]~=nil then aj=round(n:MasstoMaxV(e[y].m)*3.6)if e[y].k~=5 then aj="static"end;ai=e[y].lhit or ah;local W=tostring(y)if c.ships[W]~=nil and c.ships[W].dmg~=nil then C=c.ships[W].dmg end end;if e[y]==nil then HTML=HTML..V(P,y,tostring(o:getShortName(y)),string.sub(radar.getConstructName(y),0,19),radar.getConstructCoreSize(y),radar.getConstructKind(y),aj,0,tostring(round(ah-ai)),a2)else HTML=HTML..V(P,y,tostring(o:getShortName(tonumber(y))),string.sub(e[y].n,0,19),e[y].s,e[y].k,aj,round(C),tostring(round(ah-ai)),a2)end;a2=not a2;P=P+2.5;if P>97 then break end end;return HTML end)end end;function self:setScreen()local y=0;if weapon[1]~=nil then y=weapon[1].getTargetId()end;local ak=0;if c.ships==nil then c.ships={}end;for x,C in pairs(c.ships)do ak=ak+C.dmg end;local al=[[
                <svg viewBox="0 0 100 80" style="width:100%;height:100%">
                    <rect x="0%" y="0%" rx="2" ry="2" width="100%" height="80%" style="fill:#4682B4;fill-opacity:0.1" />
                    <text x="5%" y="7.5%" style="fill:#FFFFFF;font-size:5">CombatLog</text>
                    <text x="50%" y="7.5%" style="fill:#FFFFFF;font-size:4">TargetData</text>
                    <text x="50%" y="12%" style="fill:#FFFFFF;font-size:3">Dmg: </text>
                    <text x="50%" y="16%" style="fill:#FFFFFF;font-size:3">DesElements: </text>
        
        
                    <text x="50%" y="30%" style="fill:#FFFFFF;font-size:3">TotalDmg: </text>
                    <text x="50%" y="35%" style="fill:#FFFFFF;font-size:3">TotalKills: </text>
        
                    <text x="50%" y="50%" style="fill:#FFFFFF;font-size:4">WData</text>
                    <text x="65%" y="50%" style="fill:#FFFFFF;font-size:3">Hits</text>
                    <text x="80%" y="50%" style="fill:#FFFFFF;font-size:3">Shots</text>
                ]]local W=tostring(y)if y>1 and c.ships[W]~=nil then local aa=c.ships[W].dmg;local ab=#c.ships[W].edes;for x,N in pairs(d)do if N.ships[W]~=nil then aa=aa+N.ships[W].dmg;ab=ab+#N.ships[W].edes end end;al=al..[[
                    <text x="80%" y="12%" style="fill:#FFFFFF;font-size:3">]]..round(aa)..[[</text>
                    <text x="80%" y="16%" style="fill:#FFFFFF;font-size:3">]]..ab..[[</text>]]end;al=al..[[<text x="80%" y="30%" style="fill:#FFFFFF;font-size:3">]]..round(ak)..[[</text>]]al=al..[[<text x="80%" y="35%" style="fill:#FFFFFF;font-size:3">]]..round(#c.data.kills)..[[</text>]]local P=4;for x,D in pairs(weapon)do local y=D.getLocalId()if g[y]==nil then g[y]=0 end;if f[y]==nil then f[y]=0 end;local am=f[y]+g[y]local an=100;if am>0 then an=f[y]/am*100 end;local ac=D.getName()local ao=string.find(ac,"%[")+1;local ap=string.find(ac,"]")-1;ac=string.sub(ac,ao,ap)al=al..[[<text x="50%" y="]]..50+P..[[%" style="fill:#FFFFFF;font-size:3">]]..ac..[[: </text>]]al=al..[[<text x="65%" y="]]..50+P..[[%" style="fill:#FFFFFF;font-size:3">]]..round(an,2)..[[%</text>]]al=al..[[<text x="80%" y="]]..50+P..[[%" style="fill:#FFFFFF;font-size:3">]]..am..[[</text>]]P=P+4 end;for I=0,15,1 do if I>=#h then break end;al=al..[[<text x="2%" y="]]..12+I*4 ..[[%" style="fill:#FFFFFF;font-size:3">]]..h[#h-I]..[[</text>]]end;return al..[[</svg>]]end;return self
        
        end
        package.preload[packagePrefix.."widgetcreator"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;function self:register(c)_ENV=c;if not self:valid(a)then return end;register:addAction("unitOnStart","WidgetCreate",function()self:CreateWidgets()end)end;self.version=0.91;self.loadPrio=20;local d=unit;local e=system;function self:CreateWidgets()self:DestroyWidgets()self.DataIDs={}self.Panels={}if#weapon>0 then if#weapon<=3 then local f=e.createWidgetPanel("")self.Panels[#self.Panels+1]=f;for g=1,#weapon,1 do if#self.DataIDs>=#weapon then break end;local h=e.createWidget(f,"weapon")local i=weapon[g].getWidgetData()table.insert(self.DataIDs,e.createData(i))e.addDataToWidget(self.DataIDs[#self.DataIDs],h)end else local j=math.ceil(#weapon/2)for k=1,2,1 do local f=e.createWidgetPanel("")self.Panels[#self.Panels+1]=f;for g=1,j,1 do local h=e.createWidget(f,"weapon")local i=weapon[#self.DataIDs+1].getWidgetData()table.insert(self.DataIDs,e.createData(i))e.addDataToWidget(self.DataIDs[#self.DataIDs],h)if#self.DataIDs>=#weapon then break end end end end end;local radar=radar[1]if radar~=nil then local f=e.createWidgetPanel("")self.Panels[#self.Panels+1]=f;local h=e.createWidget(f,"radar")local i=radar.getWidgetData()self.RadarDataID=e.createData(i)e.addDataToWidget(self.RadarDataID,h)end end;function self:DestroyWidgets()if self.Panels~=nil then for l,f in pairs(self.Panels)do e.destroyWidgetPanel(f)end end end;return self
        
        end
        package.preload[packagePrefix.."config"] = function()
           local self={}local a=nil;local b={}function self:get(c,d)if a==nil then self:load()end;b[c]=true;if a[c]==nil then return d end;if d~=nil and a[c]==d then a[c]=nil;return d end;return a[c]end;function self:set(c,e,d)if a==nil then self:load()end;b[c]=true;if a[c]~=e then if e==d then a[c]=nil else a[c]=e end;self:save()end end;function self:load()if a==nil then if database.hasKey~=nil and database.hasKey("config"..unitType..unit.getLocalId())then local f=database.getStringValue("config"..unitType..unit.getLocalId())a=json.decode(f)end;if a==nil then a={}end end end;function self:save()if a~=nil then if database.hasKey~=nil then database.setStringValue("config"..unitType..unit.getLocalId(),json.encode(a))end end end;function self:cleanup()if a==nil then return end;local g=false;for h,i in pairs(a)do if b[h]==nil then g=true;a[h]=nil end end;if g then self:save()end end;function self:register(j)_ENV=j;register:addAction("systemStop","configCleanup",function()self:cleanup()end)end;return self
        
        end
        package.preload[packagePrefix.."shortname"] = function()
           local self={}local a={["O"]=true,["Q"]=true,["0"]=true}local b={}self.version=0.91;self.loadPrio=20;local c="AQN5B4-@7gSt1W?;"local d,e={},{}function self:valid(f)if f~=c then return false end;return unitType=="gunner"end;function addRangeToCharSet(g,h)for i=g,h do local j=string.char(i)if not a[j]then b[#b+1]=j end end end;addRangeToCharSet(48,57)addRangeToCharSet(65,90)kCharSetSize=#b;function getHash(k)k=k>>16~k;k=k*0x45d9f3b;k=k>>16~k;k=k*0x45d9f3b;k=k>>16~k;if k<0 then k=~k end;return k end;function createShortName(l)local l=tonumber(l)if l==nil then return""end;local m=getHash(l)%8388593;local g=m*653276%8388593;local h=g*653276%8388593;local j=h*653276%8388593;return b[g%kCharSetSize+1]..b[h%kCharSetSize+1]..b[j%kCharSetSize+1]end;function self:getShortName(l)if d[l]==nil then local n=createShortName(l)d[l]=n;e[n]=l end;return d[l]end;function self:getId(n)return e[n]end;return self
        
        end
        package.preload[packagePrefix.."gunnerhud"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;self.version=0.91;self.loadPrio=1000;self.viewTags={"hud"}local c=0;local d={}local e=0;local f=unit;local g=system;local h=0;local i=0;local j,k,l,m,n,o;local radar=radar[1]function self:register(p)if not self:valid(a)then return end;j=getPlugin("commandhandler")n=getPlugin("radarwidget",true,a)o=getPlugin("shortname",true,a)j:AddCommand("l",function(q)if q[2]~=nil then m=o:getId(q[2]:upper())if m==nil then l=q[2]:upper()end else m=radar.getTargetId()if m==1 then m=nil end end end,"sets your Leader")addTimer("Leader",0.5,function()if m~=nil then local r=o:getShortName(m)local s=radar.getConstructWorldPos(m)if database.hasKey~=nil then if r~=nil and s[1]~=0 then database.setStringValue("Leader",json.encode({n=r,p=radar.getConstructWorldPos(m),t=system.getArkTime()}))else database.clearValue("Leader")end end else database.clearValue("Leader")end end)k=getPlugin("shortname",true,"AQN5B4-@7gSt1W?;"):getShortName(construct.getId())register:addAction("OnEnter","Alarm",function(t)c=20;table.insert(d,t)i=t end)register:addAction("OnDestroyed","Kill",function(t)h=system.getArkTime()end)if construct.getParent()~=0 then m=construct.getParent()end;local u=getPlugin("screener")if u~=nil then u:registerDefaultScreen("mainScreenThird","gunnerhud")u:registerDefaultScreen("mainScreenFirst","gunnerhud")u:addView("gunnerhud",self)end;register:addAction("option8Start","Vent",function()if shield~=nil then if not shield.isVenting()then shield.startVenting()system.playSound("HSC/venting_shield.mp3")else shield.stopVenting()end end end)for v,w in pairs(databases)do if w.hasKey~=nil then w.clearValue("AutoTurnOff")end end;register:addAction("unitOnStop","autoDeactivate",function()for v,w in pairs(databases)do if w.hasKey~=nil then w.setStringValue("AutoTurnOff",player.getId())end end end)end;function self:setScreen()local x=0;local y=0;if shield~=nil then x=math.ceil(shield.getShieldHitpoints()/shield.getMaxShieldHitpoints()*100)y=shield.isActive()end;local z,A,B,C,D,E,v,F=targetHud()local G,H=getMinAmmo()local I=x;local J=G;local K=0;if core~=nil then K=(1-core.getCoreStressRatio())*100 end;local L;local M="<svg width=\"100%\" height=\"94.5%\" viewBox=\"0 0 1920 1080\" style=\"top:0;left:0\">"M=M.."<rect x=\"52%\" y=\"93.95%\" rx=\"2\" ry=\"2\" width=\"23.15%\" height=\"4.8%\" style=\"fill:#4682B4;fill-opacity:0.35\" />".."<rect x=\"52.2%\" y=\"96.4%\" width=\"7.25%\" height=\"1.9%\" style=\"fill:none;stroke:#FFFFFF;stroke-width:1px\" />".."<rect x=\"59.95%\" y=\"96.4%\" width=\"7.25%\" height=\"1.9%\" style=\"fill:none;stroke:#FFFFFF;stroke-width:1px\" />".."<rect x=\"67.7%\" y=\"96.4%\" width=\"7.25%\" height=\"1.9%\" style=\"fill:none;stroke:#FFFFFF;stroke-width:1px\" />"if shield~=nil then M=M.."<text x=\"52.35%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">Shield ("..round(x,2).."%)</text>"if not y then L="#777777"else if I>=66 then L="#009acd"else if I<66 and I>33 then L="#FFA500"end;if I<=33 then L="#FF0000"end end end;for N=0,19,1 do if I>0 then M=M.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..52.35+0.35*N.."%\" y=\"96.7%\" style=\"fill:"..L.."\" />"end;if I<=0 then M=M.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..52.35+0.35*N.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;I=I-5 end end;if core~=nil then M=M.."<text x=\"60.1%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">C. Stress ("..round((1-core.getCoreStressRatio())*100,2).."%)</text>"if K>=100 then L="#32CD32"else if K<100 and K>66 then L="#FFA500"end;if K<=66 then L="#FF0000"end end;for N=0,19,1 do if K>0 then M=M.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..60.1+0.35*N.."%\" y=\"96.7%\" style=\"fill:"..L.."\" />"end;if K<=0 then M=M.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..60.1+0.35*N.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;K=K-5 end end;M=M.."<text x=\"67.85%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">Ammo ("..H..")</text>"if J>33 then L="#CD661D"else if J<=33 then L="#FF0000"end end;for N=0,19,1 do if J>0 then M=M.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..67.85+0.35*N.."%\" y=\"96.7%\" style=\"fill:"..L.."\" />"end;if J<=0 then M=M.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..67.85+0.35*N.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;J=J-5 end;if radar.getTargetId()~=0 then local g=o:getShortName(radar.getTargetId())if system.getCameraMode()~=1 then M=M.."<text x=\"49.2%\" y=\"49%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">"..g.."</text>"else M=M.."<text x=\"49%\" y=\"3%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:25px\">"..g.."</text>"end end;local O=""if uiTarget==true then if z<10 then L="#FF0000"elseif z<=30 then L="#FFA500"else L="#32CD32"end;M=M.."<rect x=\""..52 .."%\" y=\"89%\" rx=\"2\" ry=\"2\" width=\"23.15%\" height=\"4.8%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"M=M.."<text x=\""..52+0.5 .."%\" y=\"91.8%\" style=\"fill:#FFFFFF;font-size:12px\">".."Hitchance:".."</text>".."<text x=\""..52+4 .."%\" y=\"92%\" style=\"fill:"..L..";font-size:20px\">"..z.."%</text>"if B==0 then L="#FFA500"elseif B<0 then L="#FF0000"else L="#32CD32"end;M=M.."<text x=\""..59 .."%\" y=\"90.5%\" style=\"fill:#FFFFFF;font-size:12px\">".."Target Speed:".."</text>".."<text x=\""..59+4.5 .."%\" y=\"91%\" style=\"fill:"..L..";font-size:20px\">"..A.."</text>"local P=construct.getMaxSpeed()*3.6-E;if math.abs(P)<500 then L="#FFA500"elseif P<0 then L="#FF0000"else L="#32CD32"end;if radar.getConstructKind(D)==5 then M=M.."<text x=\""..59 .."%\" y=\"93.1%\" style=\"fill:#FFFFFF;font-size:12px\">".."   Max Speed:".."</text>".."<text x=\""..59+4.2 .."%\" y=\"93.3%\" style=\"fill:"..L..";font-size:15px\">"..E.."</text>"else M=M.."<text x=\""..59 .."%\" y=\"93.1%\" style=\"fill:#FFFFFF;font-size:12px\">".."   Max Speed:".."</text>".."<text x=\""..59+4.2 .."%\" y=\"93.3%\" style=\"fill:#FFFFFF;font-size:15px\"> Static </text>"end;ammo=F;local Q="false"if radar.getConstructInfos(D).weapons~=0 then Q="true"end;M=M.."<text x=\""..67+0.5 .."%\" y=\"90.5%\" style=\"fill:#FFFFFF;font-size:12px\">".."Weaponised:".."</text>".."<text x=\""..71+0.5 .."%\" y=\"90.5%\" style=\"fill:#FFFFFF;font-size:12px\">"..Q.."</text>"M=M.."<text x=\""..67+0.5 .."%\" y=\"93.1%\" style=\"fill:#FFFFFF;font-size:12px\">".."Ammo Typ:".."</text>".."<text x=\""..71+0.5 .."%\" y=\"93.1%\" style=\"fill:#FFFFFF;font-size:12px\">"..ammo.."</text>"if math.abs(h-system.getArkTime())<3 then O=[[
        				<style>
        					#KillMarker {display:block; position:absolute; top:0; left:0} 
        				</style>
                        </svg>
                        <svg id="KillMarker" height="100%" width="100%">
                            <circle cx="50%" cy="50%" r="5%" stroke="red" stroke-width="1.5%" fill="none" opacity="0.5"/>
                        </svg>
                    ]]end end;if k~=nil and not system.isViewLocked()then M=M.."<rect x=\""..69.4 .."%\" y=\"84.1%\" rx=\"2\" ry=\"2\" width=\"5.75%\" height=\"4.75%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"M=M.."<text x=\""..70.4 .."%\" y=\"87.1%\" style=\"fill:#FFFFFF;font-size:20px\">ID: "..k.."</text>"end;if l~=nil then m=o:getId(l)if m~=nil then l=nil end end;if m~=nil then local R=m;if R~=nil then local S=radar.getConstructDistance(R)/1000;if S<=0 or S==nil then M=M.."<rect x=\""..58 .."%\" y=\"86.1%\" rx=\"2\" ry=\"2\" width=\"11.38%\" height=\"2.75%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"M=M.."<text x=\""..58.4 .."%\" y=\"88%\" style=\"fill:#FF0000;font-size:15px\">Leader is out of Range</text>"else if S<100 then L="#32CD32"elseif S<300 then L="#FFA500"else L="#FF0000"end;M=M.."<rect x=\""..58 .."%\" y=\"86.1%\" rx=\"2\" ry=\"2\" width=\"11.38%\" height=\"2.75%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"M=M.."<text x=\""..58.4 .."%\" y=\"88%\" style=\"fill:#FFFFFF;font-size:15px\">Distance to Leader:</text>"if S<100 then M=M.."<text x=\""..66.3 .."%\" y=\"88%\" style=\"fill:"..L..";font-size:15px\">"..round(S,1).."</text>"M=M.."<text x=\""..68 .."%\" y=\"88%\" style=\"fill:#FFFFFF;font-size:15px\">km</text>"else M=M.."<text x=\""..66.3 .."%\" y=\"88%\" style=\"fill:"..L..";font-size:15px\">"..round(S/200,1).."</text>"M=M.."<text x=\""..68 .."%\" y=\"88%\" style=\"fill:#FFFFFF;font-size:15px\">su</text>"end end else M=M.."<rect x=\""..58 .."%\" y=\"86.1%\" rx=\"2\" ry=\"2\" width=\"11.38%\" height=\"2.75%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"M=M.."<text x=\""..58.4 .."%\" y=\"88%\" style=\"fill:#FF0000;font-size:15px\">Leader is out of Range</text>"end end;M=M.."</g>"M=M.."<rect x=\"28.25%\" y=\"91.95%\" rx=\"2\" ry=\"2\" width=\"8.2%\" height=\"6.8%\" style=\"fill:#4682B4;fill-opacity:0.35\" />"if y then colorShield="#FFFFFF"else colorShield="#FF0000"end;if not isVenting then colorVenting="#FFFFFF"else colorVenting="#00FF00"end;if shield~=nil then M=M.."<text x=\"28.5%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:"..colorVenting..";font-size:15px\">".."Venting (Alt+8)  "..round(shield.getVentingCooldown(),0).." </text>"end;M=M.."<text x=\"28.5%\" y=\"93.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">CMCI On/Off (Alt+6) </text>"M=M.."<text x=\"28.5%\" y=\"97.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">".."Radar (Alt+3) </text>"M=M.."</svg>"local T,U=pcall(AlarmHud)if not T then U=""end;return M..O..StatsHud()..U end;function ConeHUD()local Q=weapon[1]svg=[[ 
                <svg id="StatsHud" height="100%" width="100%" viewBox="0 0 1920 1080">]]local V=Q.getOptimalDistance()print(V)if Q.getTargetId()>0 then V=radar.getConstructDistance(Q.getTargetId())end;local W=construct.getWorldPosition()local X=construct.getWorldForward()local Y=construct.getWorldOrientationRight()local Z=math.tan(Q.getOptimalAimingCone())*V;local _=library.getPointOnScreen({W[1]+X[1]*V,W[2]+X[2]*V,W[3]+X[3]*V})local a0=library.getPointOnScreen({W[1]+X[1]*V+Y[1]*Z,W[2]+X[2]*V+Y[2]*Z,W[3]+X[3]*V+Y[3]*Z})if _[1]==0 and _[2]==0 and _[3]==0 then _={-10,-10,-10}a0={-10,-10,-10}end;print(a0)svg=svg.."<circle style=\"fill:#00FF00;opacity:0.1;\" cx=\"".._[1]*1920 .."\" cy=\"".._[2]*1080 .."\" r=\""..0.3*1080 .."\" />"svg=svg.."<circle style=\"fill:#00FF00;opacity:0.1;\" cx=\""..a0[1]*1920 .."\" cy=\""..a0[2]*1080 .."\" r=\""..0.1*1080 .."\" />"return svg.."</svg>"end;function StatsHud()local a1=[[
        		<style>
        			#StatsHud {display:block; position:absolute; top:0; left:0} 
        			#StatsHud text {fill:aqua;font-family:Montserrat;fill:#FFFFFF;font-size:12px}
        		</style>
        
                <svg id="StatsHud" height="100%" width="100%" viewBox="0 0 1920 1080">]]a1=a1 .."<rect x=\"76.06%\" y=\"93.95%\" rx=\"2\" ry=\"2\" width=\"15%\" height=\"4.8%\" style=\"fill:#4682B4;fill-opacity:0.35\" />"a1=a1 .."<text x=\"76.6%\" y=\"95.2%\">Type</text>"a1=a1 .."<text x=\"76.6%\" y=\"96.7%\">Hostile</text>"a1=a1 .."<text x=\"76.6%\" y=\"98.2%\">Friendly</text>"a1=a1 .."<text x=\"80.1%\" y=\"95.2%\">L</text>"a1=a1 .."<text x=\"80.1%\" y=\"96.7%\">"..#n.ConstructSort[0][5].L.."</text>"a1=a1 .."<text x=\"80.1%\" y=\"98.2%\">"..#n.ConstructSort[1][5].L.."</text>"a1=a1 .."<text x=\"82.1%\" y=\"95.2%\">M</text>"a1=a1 .."<text x=\"82.1%\" y=\"96.7%\">"..#n.ConstructSort[0][5].M.."</text>"a1=a1 .."<text x=\"82.1%\" y=\"98.2%\">"..#n.ConstructSort[1][5].M.."</text>"a1=a1 .."<text x=\"84.1%\" y=\"95.2%\">S</text>"a1=a1 .."<text x=\"84.1%\" y=\"96.7%\">"..#n.ConstructSort[0][5].S.."</text>"a1=a1 .."<text x=\"84.1%\" y=\"98.2%\">"..#n.ConstructSort[1][5].S.."</text>"a1=a1 .."<text x=\"86.1%\" y=\"95.2%\">XS</text>"a1=a1 .."<text x=\"86.1%\" y=\"96.7%\">"..#n.ConstructSort[0][5].XS.."</text>"a1=a1 .."<text x=\"86.1%\" y=\"98.2%\">"..#n.ConstructSort[1][5].XS.."</text>"local a2=n.ConstructSort[1][6]local a3=n.ConstructSort[0][6]a1=a1 .."<text x=\"88.1%\" y=\"95.2%\">Station</text>"a1=a1 .."<text x=\"88.1%\" y=\"96.7%\">"..#a3.L+#a3.M+#a3.S+#a3.XS.."</text>"a1=a1 .."<text x=\"88.1%\" y=\"98.2%\">"..#a2.L+#a2.M+#a2.S+#a2.XS.."</text>"a1=a1 ..[[</svg>]]return a1 end;function AlarmHud()local a4=0;local a5=[[
        		<style>
        			#AlarmHud, #AlarmHud svg {display:block; position:absolute; top:0; left:0} 
        			#AlarmHud #FriendContact line {stroke:#01DF01;opacity:0.4;stroke-width:10%;fill-opacity:0;}
        			#AlarmHud #EnemyContact line {stroke:#FF0000;opacity:0.4;stroke-width:10%;fill-opacity:0;}
        		</style>
        
                <svg id="AlarmHud" height="100%" width="100%" viewBox="0 0 1920 1080">
                <g id="Layer_2">
                <title>Layer 2</title>
                ]]local a6=not construct.isInPvPZone()if a6==false then if system.getArkTime()-bootTime<10 then d={}c=0 end;if c>0 then if#d>0 and not devMode then local a7=radar.getConstructCoreSize(d[1])print("------------")print("New Contact")print(a7)print(getPlugin("shortname",true,"AQN5B4-@7gSt1W?;"):getShortName(d[1]).."-"..radar.getConstructName(d[1]))print(d[1])print(system.getWaypointFromPlayerPos())table.remove(d,1)end;if radar.hasMatchingTransponder(i)then system.playSound("HSC/new_radar_friend.mp3")a5=a5 ..[[
                        <svg id="FriendContact" x="0%" y="0%">
                        <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_2" y2="0" x2="1920" y1="0" x1="0" fill="none"/>
                        <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_3" y2="1080" x2="0" y1="0" x1="0" fill="none"/>
                        <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_4" y2="1080" x2="1920" y1="0" x1="1920" fill="none"/>
                        <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_5" y2="1080" x2="1920" y1="1080" x1="0" fill="none"/>
                        ]]else system.playSound("HSC/new_radarcontact.mp3")a5=a5 ..[[
                            <svg id="EnemyContact" x="0%" y="0%">
                            <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_2" y2="0" x2="1920" y1="0" x1="0" fill="none"/>
                            <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_3" y2="1080" x2="0" y1="0" x1="0" fill="none"/>
                            <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_4" y2="1080" x2="1920" y1="0" x1="1920" fill="none"/>
                            <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_5" y2="1080" x2="1920" y1="1080" x1="0" fill="none"/>
                            ]]end;c=c-1 end end;a5=a5 ..[[
                </svg>
                ]]return a5 end;function getMinAmmo()local a8=99;for v,Q in ipairs(weapon)do local T=Q.getAmmoCount()if T<a8 then a8=T end end;local a9=0;local aa=100;if weapon[1]~=nil then a9=weapon[1].getCycleTime()*a8;aa=a8/weapon[1].getMaxAmmo()end;if a9<10 and relaod_warning==false then system.playSound("HSC/ammo_relaod.mp3")relaod_warning=true elseif a9>10 and relaod_warning==true then relaod_warning=false end;return aa*100,FormatTimeString(a9)end;function FormatTimeString(ab)local ac=0;local ad=0;local ae=0;if ab<60 then ab=math.floor(ab)elseif ab<3600 then ac=math.floor(ab/60)ab=math.floor(ab%60)elseif ab<86400 then ad=math.floor(ab/3600)ac=math.floor(ab%3600/60)else ae=math.floor(ab/86400)ad=math.floor(ab%86400/3600)end;if ae>0 then return ae.."d "..ad.."h "elseif ad>0 then return ad.."h "..ac.."m "elseif ac>0 then return ac.."m "..ab.."s"elseif ab>0 then return ab.."s"else return"0s"end end;function targetHud()local t=radar.getTargetId()local af=0;local ag=0;local ah=0;local ai=0;local aj=0;local ak=false;local ammo="Precision"uiTarget=false;local al=nil;for N,am in ipairs(weapon)do if am.getHitPoints()>0 then al=am;break end end;if al~=nil and t~=0 and radar.isConstructIdentified(t)then af=round(al.getHitProbability()*100)ag=round(radar.getConstructSpeed(t)*3.6)ai=ag-e;e=ag;ah=radar.getConstructDistance(t)aj=round(self:MasstoMaxV(radar.getConstructMass(t))*3.6)local an=radar.isConstructAbandoned(t)if oldTarget==t then ak=an~=oldTargetStatus end;oldTargetStatus=an;oldTarget=t;uiTarget=true;local T=tonumber(al.getOptimalDistance())*1.1;if ah<T then ammo="Heavy"end end;return af,ag,ai,ah,t,aj,ak,ammo end;function self:MasstoMaxV(ao)ao=ao;local T=13879+-0.0107*ao+6.86E-09*ao^2+-2.25E-15*ao^3+2.8E-22*ao^4;if ao>3000000 then T=20000/3.6 end;T=utils.clamp(T,20000/3.6,50000/3.6)return T end;return self
        
        end
        package.preload[packagePrefix.."weaponwidget"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;self.version=0.91;local c=nil;local weapon=weapon;s=system;u=unit;local c,d;function self:register(e)_ENV=e;if not self:valid(a)then return end;c=getPlugin("widgetcreator",true,a)d=getPlugin("shortname",true,a)if c==nil then return end;register:addAction("unitOnStart","WeaponStart",function()register:addAction("systemOnUpdate","weaponwidget",function()self:ReWriteWeapon()end)end)end;function self:ReWriteWeapon()for f,g in pairs(c.DataIDs)do local h=weapon[f].getWidgetData()if h~=nil then local i,j=string.find(h,[["ammoName":"]])local i,k=string.find(h,[["]],j+1)if k-j>12 then local l=mysplit(string.sub(h,j,k))l=string.sub(l[2],0,4)..string.sub(l[3],0,3)h=string.sub(h,0,j)..l..string.sub(h,k,#h)end;local i,m=string.find(h,[["constructId":"]])local n=weapon[f].getTargetId()local i,o=string.find(h,[["name":"]],m)if o~=nil then local i,p=string.find(h,[["]],o+1)h=string.sub(h,0,o)..tostring(d:getShortName(n))..string.sub(h,p,#h)end;local i,j=string.find(h,[["name":"]])local i,k=string.find(h,[["]],j+1)if k-j>12 then local l=weapon[f].getLocalId().."  HC:  "..round(weapon[f].getHitProbability()*100,2)h=string.sub(h,0,j)..l..string.sub(h,k,#h)end;s.updateData(g,h)end end end;return self
        
        end
        package.preload[packagePrefix.."shieldreconfigure"] = function()
           local self={}self.version=0.91;local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return shield~=nil end;function self:register(c)_ENV=c;if shield==nil then return end;shield.activate()register:addAction("OnAbsorbed","shieldreconfigure",Shieldreconfigure)end;local d={0,0,0,0}function getRes(e,f)local g={0.15,0.15,0.15,0.15}if e[1]>=e[2]and e[1]>=e[3]and e[1]>e[4]then g={f,0,0,0}elseif e[2]>=e[1]and e[2]>=e[3]and e[2]>e[4]then g={0,f,0,0}elseif e[3]>=e[1]and e[3]>=e[2]and e[3]>e[4]then g={0,0,f,0}elseif e[4]>=e[1]and e[4]>=e[2]and e[4]>e[3]then g={0,0,0,f}else print("Fehler! Im else...")end;return g end;function Shieldreconfigure()if shield.getResistancesCooldown()==0 then print("Schilde rekonfigurieren!!!")local f=shield.getResistancesPool()local e=shield.getStressRatioRaw()local g=getRes(e,f)if d[1]==g[1]and d[2]==g[2]and d[3]==g[3]and d[4]==g[4]then print("Ress sind gleich!")else if shield.setResistances(g[1],g[2],g[3],g[4])then print("Schilde rekonfiguriert!")d[1]=g[1]d[2]=g[2]d[3]=g[3]d[4]=g[4]else print("Fehler: "..shield.getStressRatioRaw()[1]..", "..shield.getStressRatioRaw()[2]..", "..shield.getStressRatioRaw()[3]..", "..shield.getStressRatioRaw()[4])end end end end;return self
        
        end
        package.preload[packagePrefix.."radarwidget"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then nginx.log(ngx.ERR,"auth failed: ",b)return ngx.exit(ngx.HTTP_UNAUTHORIZED)end;return unitType=="gunner"end;local radar=radar[1]self.version=0.91;self.viewTags={"hud"}local c=0;local d=false;local e,f,g,h,i,j,l;local m=getPlugin("configuration")local o=m.friOrgs;local p=m.friPlayer;self.ConstructSort={[0]={[0]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[1]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[2]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[3]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[4]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[5]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[6]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[7]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}}},[1]={[0]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[1]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[2]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[3]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[4]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[5]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[6]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[7]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}}},["dead"]={}}local q=getPlugin("settings",true)function self:register(r)_ENV=r;if shield~=nil then if shield.getStressRatioRaw()=={0,0,0,0}then shield.setResistances(0.3,0.3,0,0)end end;if not self:valid(a)then return end;f=getPlugin("widgetcreator",true,"AQN5B4-@7gSt1W?;")g=getPlugin("shortname",true,"AQN5B4-@7gSt1W?;")q:add("SpecialSort",true,"","Sort Core Size first then distance","Radar_Widget")q:add("IdentifiedonTop",true,"","Puts the Identified on Top of the screens","Radar_Widget")h=getPlugin("commandhandler")h:AddCommand("hide",function(s)local t=s[2]for u,v in pairs(mysplit(t,","))do v=string.sub(v,0,3)if v=="spa"then v=6 elseif v=="sta"then v=4 elseif v=="dyn"then v=5 else v=string.upper(v)end;q:set(v,false,"Radar_Widget")end end,"hides core sizes: /hide XS,S,M,L,space,dynamic,static")h:AddCommand("show",function(s)local t=s[2]for u,v in pairs(mysplit(t,","))do v=string.sub(v,0,3)if v=="spa"then v=6 elseif v=="sta"then v=4 elseif v=="dyn"then v=5 else v=string.upper(v)q:set(v,true,"Radar_Widget_Size")return end;q:set(v,true,"Radar_Widget_Type")end end,"shows core sizes: /show XS,S,M,L,space,dynamic,static")h:AddCommand("t",function(s)self.tosearch=string.upper(s[2])self.SpecialRadarMode="Search"end,"show the target: /t TW4")h:AddCommand("togdead",function(s)q:set("ShowDead",not q:get("ShowDead","Radar_Widget"),"Radar_Widget")end,"toggles if dead cores are shown")h:AddCommand("settags",function(u,s)local s=mysplit(string.sub(s,2,#s))local t=s[2]local w={}for u,x in pairs(mysplit(t,","))do table.insert(w,x)end;if transponder~=nil then transponder.activate()transponder.setTags(w)end end,"sets the transponder Tags")h:AddCommand("gettags",function()if transponder~=nil then for u,x in pairs(transponder.getTags())do print(x)end end end,"gets the transponder Tags")coRadar=coroutine.create(function()self:radarwidget()end)self.RadarMode="Hostile"q:add("ShowDead",true,"","if dead are to be shown","Radar_Widget")q:add("XS",true,"","if XS are to be shown","Radar_Widget_Size")q:add("S",true,"","if S are to be shown","Radar_Widget_Size")q:add("M",true,"","if M are to be shown","Radar_Widget_Size")q:add("L",true,"","if L are to be shown","Radar_Widget_Size")q:add("XL",true,"","if XL are to be shown","Radar_Widget_Size")q:add(1,true,"","if Universes are to be shown","Radar_Widget_Type")q:add(2,true,"","if Planets are to be shown","Radar_Widget_Type")q:add(3,true,"","if Asteroids are to be shown","Radar_Widget_Type")q:add(4,true,"","if Statics are to be shown","Radar_Widget_Type")q:add(5,true,"","if Dynamics are to be shown","Radar_Widget_Type")q:add(6,true,"","if Spaces are to be shown","Radar_Widget_Type")q:add(7,true,"","if Aliens are to be shown","Radar_Widget_Type")q:add("2LevelAuth",false,"","Owner based identification","Radar_Widget")register:addAction("laltStart","RadarScroll",function()d=true end)register:addAction("laltStop","RadarScroll",function()d=false end)register:addAction("systemOnUpdate","radarScroll",function()if d then c=c+system.getMouseWheel()*-3 end;i()end)register:addAction("systemOnUpdate","radarwidget",function()if coroutine.status(coRadar)=="dead"then coRadar=coroutine.create(function()self:radarwidget()end)else coroutine.resume(coRadar)end end)addTimer("Trans",0.4,self.AutoTrans)register:addAction("option3Start","RadarSwitch",function()self:switchRadar()end)local y=getPlugin("screener",true)if y~=nil then y:registerDefaultScreen("mainScreenThird","Radar")y:registerDefaultScreen("mainScreenFirst","Radar")y:addView("Radar",self)end end;local z=system;local A=unit;function self:switchRadar()if self.SpecialRadarMode~=nil then self.SpecialRadarMode=nil elseif self.RadarMode=="Hostile"then self.RadarMode="Friendly"elseif self.RadarMode=="Friendly"then self.RadarMode="Verified"elseif self.RadarMode=="Verified"then self.RadarMode="External"local B=getPlugin("Targets",true,"",true)if B==nil then self.RadarMode="Hostile"end elseif self.RadarMode=="External"then self.RadarMode="Hostile"else self.RadarMode="Hostile"end end;function self:AddShip(C,j,D,k)k=k or 3;D=D or""local E,v=getSubJson(j,tostring(C))if E~=nil then E=AddUnique(E,C,D)v=math.floor(v/150)if E==nil then return end;e[k][v]=E end end;function AddUnique(F,C,D)local G=string.find(F,[["name":"]])+#[["name":"]]return string.sub(F,0,G-1)..tostring(g:getShortName(C)).." - "..D..string.sub(F,G,#F)end;function getSubJson(F,C)if radar.hasMatchingTransponder(C)then return getSubJF(F,C)else return getSubJH(F,C)end end;function getSubJH(F,C)local H=string.find(F,C..[[","]])if H==nil then return end;local I=string.find(F,[["targetThreatState"]],H+100)local J=string.find(F,[[}]],I)return string.sub(F,H-16,J),H end;function getSubJF(F,C)local H=string.find(F,C..[[","]])if H==nil then return end;local u,J=string.find(F,[[)"}]],H+100)return string.sub(F,H-16,J),H end;function self:radarwidget()local K={[0]={[0]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[1]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[2]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[3]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[4]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[5]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[6]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[7]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}}},[1]={[0]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[1]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[2]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[3]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[4]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[5]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[6]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[7]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}}},["dead"]={}}local L=radar.getConstructIds()local M=radar.getWidgetData()j=M;e={[1]={},[2]={},[3]={},[4]={},[5]={},[6]={}}local N=-1;for u,O in pairs(L)do local P=not radar.hasMatchingTransponder(O)local Q=radar.isConstructAbandoned(O)if q:get("2LevelAuth","Radar_Widget")then local C,R=radar.getConstructOwnerEntity(O)R=C.isOrganization;C=C.id;if R then if not inTable(o,C)then P=true end else if not inTable(p,C)then P=true end end end;local S=radar.getConstructCoreSize(O)local T=radar.getConstructKind(O)if T==-1 then goto U end;if T==7 then N=O end;if Q then table.insert(K["dead"],O)else if P then n=0 else n=1 end;table.insert(K[n][T][S],O)end;if(self.RadarMode=="Hostile"or self.RadarMode=="Friendly")and self.SpecialRadarMode==nil then if self.RadarMode=="Friendly"then P=not P end;if P and q:get(S,"Radar_Widget_Size")and q:get(T,"Radar_Widget_Type")then if not q:get("ShowDead","Radar_Widget")and Q then goto U end;local D=""if q:get("SpecialSort","Radar_Widget")then if S=="XL"then k=2 elseif S=="L"then k=3 elseif S=="M"then k=4 elseif S=="S"then k=5 elseif S=="XS"then k=6 end end;if q:get("IdentifiedonTop","Radar_Widget")then if radar.isConstructIdentified(O)then k=1 end end;if Q then D="dead - "end;self:AddShip(O,M,D,k)end end::U::if system.getInstructionCount()>1000000 then coroutine.yield()end end;if self.SpecialRadarMode==nil then local V,W=pcall(self.RadarModes[self.RadarMode],M)else pcall(self.RadarModes[self.SpecialRadarMode],M)end;self.AlienCore=N;self.ConstructSort=K;l=e end;function i()local M=j;if l==nil then return end;local X={[1]={},[2]={},[3]={},[4]={},[5]={},[6]={}}local Y=0;for k,Z in pairs(l)do for _=0,math.ceil(#M/150),1 do Y=Y+1;if Z[_]~=nil then X[k][#X[k]+1]=Z[_]end;if Y>5000 then Y=0;coroutine.yield()end end end;local a0=0;for u,Z in pairs(X)do a0=a0+#Z end;self.ConsCount=a0;local a1={}for k,Z in pairs(X)do for u,a2 in pairs(Z)do table.insert(a1,a2)end end;local J=#a1;if c>J-4 then c=J-4 end;if c<0 then c=0 end;for _=1,c,1 do table.remove(a1,1)end;local a3={}for u,a4 in ipairs(a1)do table.insert(a3,a4)if#a3>=4 then break end end;local a5=table.concat(a3,",")..","local a6=string.find(M,[[],]])local a7=string.sub(M,a6,#M)local u,a8=string.find(a7,[["errorMessage":"",]])local u,n=string.find(a7,[["worksInSpace":]])local a9=string.find(a7,[[e]],n)+1;local u,aa=string.find(a7,[["worksInAtmosphere":]])local ab=string.find(a7,[[e]],aa)+1;local I=self.SpecialRadarMode or self.RadarMode;if a8~=nil then a7=string.sub(a7,0,a8-2)..I.." Scroll: "..c.." / "..J..string.sub(a7,a8-1,aa).."false"..string.sub(a7,ab,n).."false"..string.sub(a7,a9,#a7)end;Output=[[{"constructsList":[]]..string.sub(a5,0,#a5-1)..a7;z.updateData(f.RadarDataID,Output)end;self.RadarModes={["External"]=function(M)local B=getPlugin("Targets",true)if B~=nil then for u,v in pairs(B)do local C=g:getId(v.shortid[1])self:AddShip(C,M)end;unloadPlugin("Targets")end end,["Verified"]=function(M)local B=radar.getIdentifiedConstructIds()for u,C in pairs(B)do self:AddShip(C,M,"searched - ",3)end end,["Search"]=function(M)local ac=0;if database.hasKey~=nil then if database.hasKey("Primary")then ac=database.getIntValue("Primary")self:AddShip(ac,M,"primary - ",1)end end;local ad=radar.getTargetId()if ad~=0 then self:AddShip(ad,M,"selected - ",2)end;local ae=0;if self.tosearch~=nil then ae=g:getId(self.tosearch)if ae~=ad then self:AddShip(ae,M,"searched - ",3)end end;for u,C in pairs(radar.getIdentifiedConstructIds())do if C==ac or C==ad or C==ae then goto U end;self:AddShip(C,M,"",5)::U::end end}function self:AddRadarMode(af,ag)self.RadarModes[af]=ag end;q:add("autoTrans","off",{"string",{"auto","Hyp","off"}},"if Transponder should auto Update","Transponder")function self:AutoTrans()local ah="Transponder"if q:get("autoTrans",ah)=="auto"then local ai=getPlugin(ah,true,"",true)if ai~=nil then local aj={}local ak=1;for u,v in pairs(ai)do aj[ak]=v.transponder[1]ak=ak+1 end;transponder.setTags(aj)unloadPlugin(ah)end end end;function self:setScreen()local al;local am=weapon[1]local an,ao;if am~=nil then an=am.getMaxDistance()/400000;ao=am.getOptimalDistance()/400000 end;local ap=radar.getIdentifyRanges()[4]or 100000;local aq=ap/400000;if aq>1 then aq=1 end;al=[[
                <head>
                    <style>
                        body {margin: 0}
                        svg {display:block; position:absolute; top:0; left:0} 
                    </style>
                </head>
                <body>
                <svg height="100%" width="100%" viewBox="0 0 1920 1080">
                <rect x="1898" y="333" rx="3" ry="3" width="26" height="670" style="fill:#4682B4;fill-opacity:0.35" />
        
                <rect x="1901" y="337" rx="3" ry="3" width="3" height="662" style="fill:#ffffff;fill-opacity:0.5" />
            ]]if ao~=nil then al=al..[[
                    <rect x="1903" y="]]..round(337+(1-an)*662)..[[" width="2" height="]]..round((an-ao)*662)..[[" style="fill:#ff0000;fill-opacity:0.8" />
                    <rect x="1903" y="]]..round(337+(1-ao)*662)..[[" width="2" height="]]..round(ao*662)..[[" style="fill:#00ff00;fill-opacity:0.8" />
                    <rect x="1899" y="]]..round(337+(1-aq)*662)..[[" width="8" height="3" style="fill:#000000;fill-opacity:1" />]]for u,C in pairs(radar.getIdentifiedConstructIds())do local ar=radar.getConstructDistance(C)/400000;al=al..[[<text x="1904" y="]]..round(337+(1-ar)*662)+3 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#000000;font-size:10px;stroke:#000000;stroke-width:1px">]]..g:getShortName(C)..[[</text>]]end;local C=radar.getTargetId()if C>0 then local ar=radar.getConstructDistance(C)/400000;al=al..[[<text x="1904" y="]]..round(337+(1-ar)*662)+3 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#ff00ff;font-size:10px;stroke:#000000;stroke-width:1px">]]..g:getShortName(C)..[[</text>]]end end;local R=-35;if#weapon<4 then R=250 end;local function _(W)if W then return"00ff00"else return"ff0000"end end;al=al..[[
                <rect x="1530" y="]]..567+R..[[" rx="3" ry="3" width="145" height="125" style="fill:#4682B4;fill-opacity:0.35" />
                <text x="1540" y="]]..585+R..[[" font-family="Super Sans" text-anchor="start" style="fill:#ffffff;font-size:18px;stroke:#000000;stroke-width:1px">Type</text>
                <text x="1540" y="]]..605+R..[[" font-family="Super Sans" text-anchor="start" style="fill:#]].._(q:get(4,"Radar_Widget_Type"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Static</text>
                <text x="1540" y="]]..625+R..[[" font-family="Super Sans" text-anchor="start" style="fill:#]].._(q:get(5,"Radar_Widget_Type"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Dynamic</text>
                <text x="1540" y="]]..645+R..[[" font-family="Super Sans" text-anchor="start" style="fill:#]].._(q:get(6,"Radar_Widget_Type"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Space</text>
                <text x="1540" y="]]..665+R..[[" font-family="Super Sans" text-anchor="start" style="fill:#]].._(q:get(7,"Radar_Widget_Type"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Alien</text>
                <text x="1540" y="]]..685+R..[[" font-family="Super Sans" text-anchor="start" style="fill:#]].._(q:get("ShowDead","Radar_Widget"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Dead</text>
                
                <text x="1620" y="]]..585+R..[[" font-family="Super Sans" text-anchor="start" style="fill:#ffffff;font-size:18px;stroke:#000000;stroke-width:1px">Size</text>
                <text x="1620" y="]]..605+R..[[" font-family="Super Sans" text-anchor="start" style="fill:#]].._(q:get("XL","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">XL</text>
                <text x="1620" y="]]..625+R..[[" font-family="Super Sans" text-anchor="start" style="fill:#]].._(q:get("L","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">L</text>
                <text x="1620" y="]]..645+R..[[" font-family="Super Sans" text-anchor="start" style="fill:#]].._(q:get("M","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">M</text>
                <text x="1620" y="]]..665+R..[[" font-family="Super Sans" text-anchor="start" style="fill:#]].._(q:get("S","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">S</text>
                <text x="1620" y="]]..685+R..[[" font-family="Super Sans" text-anchor="start" style="fill:#]].._(q:get("XS","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">XS</text>]]return al.."</svg>"end;return self
        
        end
        package.preload[packagePrefix.."settings"] = function()
           self={}local a=getPlugin("config")self.version=0.91;self.loadPrio=5;self.Default={}self.Range={}self.Description={}function self:add(b,c,d,e,f)if b==nil or c==nil then return"missing Infos"end;e=e or""f=f or"Standard"if d==nil or type(d)~="table"then local g=type(c)if g=="boolean"then d={"boolean"}elseif g=="number"then d={"number",1,10,1}else return"missing Range Infos"end end;if self.Default[f]==nil then self.Default[f]={}self.Range[f]={}self.Description[f]={}end;self.Default[f][b]=c;self.Range[f][b]=d;self.Description[f][b]=e end;function self:rem(b,f)f=f or"Standard"self.Default[f][b]=nil;self.Range[f][b]=nil;self.Description[f][b]=nil end;function self:set(b,h,f)f=f or"Standard"local i=self.Range[f][b]local g=type(h)if i[1]~=g then return end;if g=="number"then h=utils.clamp(h,i[2],i[3])h=(h-i[2])/i[4]h=round(h)h=h*i[4]+i[2]elseif g=="string"then if not inTable(i[2],h)then return end end;a:set(f..b,h,self.Default[f][b])end;function self:get(b,f)f=f or"Standard"return a:get(f..b,self.Default[f][b])end;function self:register(j)_ENV=j end;return self
        
        end
        package.preload[packagePrefix.."commandhandler"] = function()
           local self={}local a={"/","!"}function self:register(b)_ENV=b;if unitType=="gunner"then self.prefix="/"elseif unitType=="remote"then self.prefix="!"else self.prefix="/"end;CommandList={{[self.prefix]={{["help"]=function(c)local d=c[2]if d==nil then for e,f in pairs(CommandList[1][self.prefix][2])do print(e..":  "..f)end end end},{["help"]="use this to list all commands"}}},{[self.prefix]="basic commands from the"..unitType or""}}local function g(h)text=string.lower(h)local i=string.sub(text,1,1)if i==self.prefix then local j=mysplit(string.sub(text,2,#text))local k,l=pcall(CommandList[1][i][1][j[1]],j,h)if not k then print(l)end elseif inTable(a,i)then elseif#text==3 then g("/t "..text)else if unitType=="gunner"then print(h)end end end;register:addAction("systemOnInputText","commandhandler",g)end;self.version=0.91;self.loadPrio=5;function self:AddCommand(m,n,o)CommandList[1][self.prefix][1][m]=n;CommandList[1][self.prefix][2][m]=o or""end;return self
        
        end
        package.preload[packagePrefix.."screener"] = function()
           local self={}local a=false;local b=false;self.loadPrio=10;local c=getPlugin("config")local d={menuitmwidth=1/8,menuitmheight=1/16,offsetx=0,offsety=0,width=1*1/3,height=1*1/3,tag="screen",totalWidth=system.getScreenHeight(),totalHeight=system.getScreenWidth(),perspective="third",parent="mainScreenThird",mouseDown=false}local e={}function self:hotkeyState(f)if self.pressedRegister[f]==1 then return 1 end;return 0 end;function self:startHotkeyPressed(f)self.pressedRegister[f]=1 end;function self:endHotkeyPressed(f)self.pressedRegister[f]=nil end;function self:freeMouse(g)if a and g then print("setupMode off")a=false end;b=g;system.lockView(b)end;function self:addButton(h,i,j,k,l,m,n)end;function self:addScreen(o,p)curr={}for q,r in pairs(d)do if p[q]==nil then curr[q]=r else curr[q]=p[q]end end;curr["name"]=o;e[o]=curr end;function self:getPerspectiveList()return{"first","third"}end;function self:getPerspective()local s=system.getCameraMode()if s==1 then return"first"else return"third"end end;local t={}function self:addView(u,v)assert(type(u)=="string","name isn't a string, type was "..type(u))assert(type(v)=="table",u..": viewObj isn't a table, type was "..type(v))t[u]=v;register:callAction("registerAddView",u)end;function self:removeView(u)if t[u]==nil then return false end;t[u]=nil;register:callAction("registerRemoveView",u)end;function self:getViewList(w)local x={}for y,z in pairs(t)do if z==nil or z.viewTags==nil then system.print("No view tags: '"..y)else for A,B in pairs(z.viewTags)do if w==nil or B==w then table.insert(x,y)end end end end;table.sort(x)return x end;function self:renderView(u,screen,...)if t[u]==nil then system.print("Render of view '"..(u or"???").."' failed, because it there is no such view registered!","")end;local v=t[u]if v.setScreen~=nil then local C,D=pcall(v.setScreen,v,screen,...)if C then return D else system.print(u.." in setScreen:",D)return nil end else system.print(u.." render has no function 'setScreen'")end end;function self:renderViewRequireRerender(u,screen,...)if self.viewRegister[u]==nil then system.print("Rerender request of view '"..(u or"???").."' failed, because it there is no such view registered!","")end;local v=t[u]if v.requireRerender~=nil then local C,D=pcall(v.requireRerender,v,screen,...)if C then return D else system.print(u.." in renderViewRequireRerender:",D)return nil end end;return true end;function self:actionToHtml(E,...)local F,G=register:callAction(E,...),""for A,r in pairs(F)do if r then G=G..r end end;return G end;function screenObj(u)return e[u]end;local H=0;local I={}function self:addColor(J,K)I[J]=math.max(0,math.min(K,360))end;function self:getColor(J)if I[J]==nil then if devMode then print("color for mode "..J.." was not registered. Setting 290.")end;self:addColor(J,290)end;return I[J]end;function self:setColorMode(J)H=J end;local L={}function self:colors(J)if J==nil then J=H end;if L[J]==nil then if I[J]==nil then if devMode then print("color for mode "..J.." was not registered")end;self:addColor(J,290)end;local K=self:getColor(J)L[J]={hsl=K,sqLeftHsl=K+270.0,sqTwoRight=K+180.0,warn=5}local M=L[J]if M.sqLeftHsl>360 then M.sqLeftHsl=M.sqLeftHsl-360 end;if M.sqTwoRight>360 then M.sqTwoRight=M.sqTwoRight-360 end;if M.hsl<45 or M.hsl>315 then M.warn=M.sqTwoRight end end;return L[J]end;function drawAllScreensCss()local M=self:colors()local N=[[
                                    * { font-family:Montserrat }
                                    body { margin: 0}
                                    svg {display:block; position:absolute; top:auto; left:auto}
                                    svg svg { overflow: visible }
                                    .screenSvg { position: relative; margin: auto 0; }
                                    .screen { margin:0; padding:0; position: absolute; left: 0; top: 0; border: 2px solid transparent }
        							.lfill { fill:hsl(]]..M.hsl..[[, 93.6%, 56.9%)}
                                    .sfill { fill:hsl(]]..M.hsl..[[, 100%, 50%) }
        							.lstroke { stroke:hsl(]]..M.hsl..[[, 93.6%, 56.9%)}
                                    .sstroke { stroke:hsl(]]..M.hsl..[[, 100%, 50%) }
        							.bstroke { stroke:black }
                                ]]if a then N=N..[[
        							.screen { border: 2px solid hsl(]]..M.hsl..[[, 93.6%, 56.9%) }
        							.menu { position: absolute; right: 0; top: 0; width: 100%; height: 3.125%; overflow: hidden; z-index: 1000 }
        							.mItm { z-index:inherit; background-color:hsl(]]..M.hsl..[[, 100%, 50%);position: relative; float: right; height: 100%; width: calc(100% / 24); border: 2px solid hsl(]]..M.hsl..[[, 93.6%, 56.9%); overflow: hidden; color: white;display: flex;align-items: center;justify-content: center; }
        						]]end;local s=self:getPerspective()for u,A in pairs(e)do screen=screenObj(u)if s==screen.perspective then N=N..[[
        								#]]..u..[[ { width: ]]..screen.width*100 ..[[%; height: ]]..screen.height*100 ..[[%; top: ]]..screen.offsety*100 ..[[%; left: ]]..screen.offsetx*100 ..[[% }
        			]]if a then N=N..[[
        								#]]..u..[[ > .menu { height: ]]..screen.menuitmheight*100 ..[[% }
        								#]]..u..[[ > .menu .mItm { width: ]]..screen.menuitmwidth*100 ..[[% }
        				]]for O,h in pairs(self:getViewList(screen.tag))do local P="scval_"..u.."_"..h;local curr=c:get(P,0)if curr==1 then N=N..[[
        								#]]..u..[[ > .menu .mItm.n]]..O..[[ { background-color:hsl(]]..M.sqTwoRight..[[, 100%, 50%) }
        						]]end end end end end;return N end;register:addAction("staticCssStyle","drawAllScreensCss",drawAllScreensCss)local Q={}function drawAllScreens()local R=0;local S,T,U=self:actionToHtml("staticCssStyle"),"",""local V,W,X={},{},{}local s=self:getPerspective()if a then for O,u in pairs(self:getViewList("screen"))do T=T..'<div class="mItm text n'..O..'">'..u.."</div>"end;T=[[
        			<div class="menu screentag">
        				]]..T..[[
        			</div>
        		]]end;for u,A in pairs(e)do screen=screenObj(u)if s==screen.perspective then if screen.tag=="screen"then if W[screen.parent]==nil then W[screen.parent]=""end;W[screen.parent]=W[screen.parent]..[[
                                           <div id="]]..u..[[" class="screen">
                                            ]]..T..[[
                                            ]]..self:actionToHtml(u.."Html")..[[
                                           </div>]]end end end;if a then T=""for O,u in pairs(self:getViewList("hud"))do T=T..'<div class="mItm text n'..O..'">'..u.."</div>"end;T=[[
        			<div class="menu hudtag">
        				]]..T..[[
        			</div>
        		]]end;for u,A in pairs(e)do screen=screenObj(u)if s==screen.perspective then if screen.tag=="hud"then if X[screen.parent]==nil then X[screen.parent]=""end;if W[u]==nil then W[u]=""end;X[screen.parent]=X[screen.parent]..[[
        									   <div id="]]..u..[[" class="screen">
        										]]..T..[[
        										]]..self:actionToHtml(u.."Html")..[[
        										]]..W[u]..[[
        									   </div>]]end end end;local Y=""if a or b then local Z=system.getMousePosX()/d.totalWidth;local _=system.getMousePosY()/d.totalHeight;Y=[[
        			<svg style="z-index: 10000;position: absolute;left:]]..Z*100 ..[[%;top:]].._*100 ..[[%" height="20px" width="20px" viewBox="0 0 512 512">
        				<path class="sfill bstroke" d="M434.214,344.448L92.881,3.115c-3.051-3.051-7.616-3.947-11.627-2.304c-3.989,1.643-6.592,5.547-6.592,9.856v490.667
        					c0,4.459,2.773,8.448,6.976,10.005c1.195,0.448,2.453,0.661,3.691,0.661c3.051,0,6.037-1.323,8.085-3.733l124.821-145.6h208.427
        					c4.309,0,8.213-2.603,9.856-6.592C438.182,352.085,437.265,347.52,434.214,344.448z"/>
        			</svg>
        			]]end;for u,G in pairs(X)do Y=Y..G end;local a0=[[
                                    <head>
                                        <style>
                                            ]]..S..[[
                                        </style>
                                    </head>
                                    <body>
                                        ]]..Y..[[
                                    </body>
                                ]]if devMode then for A,a1 in pairs(screens)do if a1.getName()=="debugscreen"then a1.setHTML(a0)end end end;if#screens>0 then for a2,a3 in pairs(screens)do a3.mouseX=a3.getMouseX()a3.mouseY=a3.getMouseY()a3.mouseDown=a3.getMouseState()local u,a4="screen"..a2,nil;for A,h in pairs(self:getViewList("screen"))do local a5=u.."_"..h;local P="scval_"..a5;local curr=c:get(P,0)if curr==1 then if self:renderViewRequireRerender(h,a3)then if a4==nil then a4=""end;a4=a4 ..self:renderView(h,a3)end end end;if a4~=nil then a3.setHTML(a4)end end end;system.setScreen(a0)end;function self:triggerViewMouseEvent(a6,u,screen,...)if t[u]==nil then system.print("Render of view '"..(u or"???").."' failed, because it there is no such view registered!","")end;local v=t[u]local a7=v.onMouseUp;if a6==false then a7=v.onMouseDown end;if a7 then local C,D=pcall(a7,v,screen,...)if C then return D else system.print(u..": error in triggerViewMouseEvent:",a6,D)return nil end else end end;function self:registerDefaultScreen(o,h)local P="scval_"..o.."_"..h;if devMode then print("registering default view "..P)end;c:set(P,1,0)end;function self:register(a8)_ENV=a8;self:addColor(0,120)self:setColorMode(0)d.totalWidth=system.getScreenWidth()d.totalHeight=system.getScreenHeight()local a9=false;function setActionHtml(o,h)local screen=screenObj(o)local a5=o.."_"..h;local P="scval_"..a5;local curr=c:get(P,0)if curr==1 then if devMode then print("register setActionHtml for "..P)end;register:addAction(o.."Html",a5 .."Html",function()if a==false and b==false then screen.mouseX,screen.mouseY,screen.mouseXPos,screen.mouseYPos=-1,-1,-1,-1;screen.mouseDown=false else screen.mouseXPos=system.getMousePosX()-screen.offsetx;screen.mouseYPos=system.getMousePosY()-screen.offsety;screen.mouseX=(system.getMousePosX()/d.totalWidth-screen.offsetx)/screen.width;screen.mouseY=(system.getMousePosY()/d.totalHeight-screen.offsety)/screen.height;screen.mouseDown=screen.mouseDown and a9 end;return self:renderView(h,screen)end)else register:removeAction(o.."Html",a5 .."Html")end end;function realMouseEvent(a6,screen,aa,j,k)local o=screen.name;for A,a3 in pairs(screens)do if a3.getId()==aa.getId()then a3.mouseX=a3.getMouseX()a3.mouseY=a3.getMouseY()a3.mouseDown=a3.getMouseState()for A,h in pairs(register:getViewList(screen.tag))do local a5=o.."_"..h;local P="scval_"..a5;local curr=c:get(P,0)if curr==1 then self:triggerViewMouseEvent(a6,h,a3)end end;return true end end;return false end;function virtualMouseEvent(a6,screen,ab,ac,ad)local s,o=self:getPerspective(),screen.name;local ae,af=screen.width,screen.height;local ag=screen.menuitmwidth*screen.width;local ah=screen.menuitmheight*screen.height;local ai=ab-screen.offsetx;local aj=ac-screen.offsety;if ai>=0 and ai<ae then if aj>=0 and aj<af then screen.mouseXPos,screen.mouseYPos=ai,aj;screen.mouseX,screen.mouseY=ai/ae,aj/af;if devMode then print("clickx "..ai.." to "..ae.." results in "..ai/ae)end;screen.mouseDown=not a6;if not b and aj<ah then if a6 then for ak,h in pairs(self:getViewList(screen.tag))do local al,am=ak*ag,(ak-1)*ag;if ai>ae-al and ai<=ae-am then local a5=o.."_"..h;local P="scval_"..a5;local curr=c:get(P,0)if curr==1 then c:set(P,0,0)else c:set(P,1,0)end;setActionHtml(o,h)end end end else for A,h in pairs(self:getViewList(screen.tag))do local a5=o.."_"..h;local P="scval_"..a5;local curr=c:get(P,0)if curr==1 then self:triggerViewMouseEvent(a6,h,screen)end end end;if devMode then local a7="DOWN"if a6 then a7="UP"end;print("Event "..a7 .."Screen "..o.." Type "..ad.." Relative x "..ai.." Relative y "..aj)end;return true end end;return false end;function tableLength(an)assert(type(an)=='table','bad parameter #1: must be table')local ao=0;for A in pairs(an)do ao=ao+1 end;return ao end;function initAllScreens()screenObjCache={}if devMode then print("reinitialize all "..tableLength(e).." screens")end;for u,A in pairs(e)do local screen=screenObj(u)for A,h in pairs(self:getViewList(screen.tag))do setActionHtml(u,h)end;register:addAction("screenMouseUp","realScreenMouseUp"..u,function(aa,j,k)realMouseEvent(true,screen,aa,j,k)end)register:addAction("screenMouseDown","realScreenMouseUp"..u,function(aa,j,k)realMouseEvent(false,screen,aa,j,k)end)register:addAction("mouseUp","screenMouseUp"..u,function(ab,ac,ad)if self:getPerspective()==screen.perspective then virtualMouseEvent(true,screen,ab,ac,ad)end end)register:addAction("mouseDown","screenMouseDown"..u,function(ab,ac,ad)if self:getPerspective()==screen.perspective then virtualMouseEvent(false,screen,ab,ac,ad)end end)end end;self:addScreen("mainScreenFirst",{menuitmwidth=1/24,menuitmheight=1/32,width=1,height=1,tag="hud",perspective="first"})self:addScreen("mainScreenThird",{menuitmwidth=1/24,menuitmheight=1/32,width=1,height=1,tag="hud"})self:addScreen("screen1first",{offsetx=0,perspective="first",parent="mainScreenFirst"})self:addScreen("screen1third",{offsetx=0})self:addScreen("screen2first",{offsetx=0,offsety=1*1/3,perspective="first",parent="mainScreenFirst"})self:addScreen("screen2third",{offsetx=0,offsety=1*1/3})self:addScreen("screen3first",{offsetx=1*0.63,offsety=1*0.25,width=1*0.23,height=1*0.23,perspective="first",parent="mainScreenFirst"})self:addScreen("screen3third",{offsetx=1*0.63,offsety=1*0.25,width=1*0.23,height=1*0.23})self:addScreen("screen4first",{offsetx=1*0.56,offsety=0,width=1*0.20,height=1*0.25,perspective="first",parent="mainScreenFirst"})self:addScreen("screen4third",{offsetx=1*0.56,offsety=0,width=1*0.20,height=1*0.25})register:addAction("registerAddView","viewRegisterWatcher",initAllScreens)initAllScreens()register:addAction("unitOnStart","Screener",function()register:addAction("systemOnUpdate","drawAllScreens",function()if executeTotal==1 or executeTotal%renderEveryXFrames==0 or a or b then if screenToggle then drawAllScreens()end end end)register:addAction("leftmouseStart","mouseStartTracker",function()a9=true;if a or b then local Z=system.getMousePosX()/d.totalWidth;local _=system.getMousePosY()/d.totalHeight;register:callAction("mouseDown",Z,_,"hud")return true else return false end end)register:addAction("leftmouseStop","mouseStopTracker",function()a9=false;if a or b then local Z=system.getMousePosX()/d.totalWidth;local _=system.getMousePosY()/d.totalHeight;register:callAction("mouseUp",Z,_,"hud")return true else return false end end)end)local ap=getPlugin("commandhandler")ap:AddCommand("setup",function(aq)a=not a;if a then system.lockView(true)print("setupMode on")else system.lockView(false)print("setupMode off")end end,"Activate/Deactivate screener setup mode")local ar=false;ap:AddCommand("mouse",function(aq)ar=not ar;self:freeMouse(ar)if ar then print("mouse on")else print("mouse off")end end,"Mouse on/off")local as=getPlugin("settings")as:add("FPS",3,{"number",1,10,1},"RefreshRate")renderEveryXFrames=as:get("FPS")or 3 end;return self
        
        end
        package.preload[packagePrefix.."slots"] = function()
           local self={}self.slots=nil;local a={control=true,library=true,system=true,unit=true,player=true,construct=true}function self:calcSlots()self.slots={}local b=unit or{}for c,d in pairs(b)do if a[c]==nil then if type(c)=="string"and type(d)=="table"and type(d.export)=="table"then self.slots[c]=d end end end;return self.slots end;function self:getSlots()if self.slots==nil then self:calcSlots()end;return self.slots end;self.elementsIdList=nil;function self:calcElementList()if core==nil then return end;self.elementsIdList=core.getElementIdList()end;function self:getElementList()if self.elementsIdList==nil then self:calcElementList()end;return self.elementsIdList end;local e={RemoteControlUnit="remote",CockpitHovercraftUnit="command",PVPSeatUnit="gunner",CockpitCommandmentUnit="command",CockpitFighterUnit="command"}local f={Weapo="weapon",Shiel="shield",Radar="radar",CoreU="core",Stasi="weapon"}local g={AntiGravityGeneratorUnit="antigrav",WarpDriveUnit="warpdrive",DataBankUnit="databases",ReceiverUnit="receiver",EmitterUnit="emitter",ScreenUnit="screens",CombatDefense="transponder",AtmoFuelContainer="atmofueltank",SpaceFuelContainer="spacefueltank",RocketFuelContainer="rocketfueltank",CounterUnit="counter",laserDetector="laser",SpaceEngine="engine"}local h={weapon=true,databases=true,screens=true,atmofueltank=true,spacefueltank=true,rocketfueltank=true,radar=true,engine=true}local i={core={"onStressChanged(stress)"},container={"onContentUpdate()"},industry={"onStarted(id,quantity)","onCompleted(id,quantity)","onStatusChanged(status)","onBankUpdate()"},radar={"onEnter(id)","onLeave(id)","onIdentified(id)"},screens={"mouseDown(x,y)","mouseUp(x,y)","onOutputChanged(output)"},laser={"onHit()","onLoss()"},receiver={"onReceived(channel,message)"},shield={"onToggled(active)","onAbsorbed(hitpoints,rawHitpoints)","onVentin(active,restoredHitpoints)","onDown()","onRestored()"},weapon={"onReload(ammoId)","onReloaded(ammoId)","onMissed(targetId)","onDestroyed(targetId)","onElementDestroyed(targetId,itemId)","onHit(targetId,damage)"}}local function j(k)for l,m in ipairs(k)do local n,o=m:match("^([^(]+)%((.*)%)")local p={}for q in o:gmatch("[^%s,]+")do table.insert(p,q)end;for r,s in ipairs(p)do print(string.format("* Slot name %q has options %q.",n,s))end;local t=map(p,function()return"*"end)for r,s in ipairs(t)do print(string.format("* Slot name %q has options %q.",n,s))end end end;function self:getClassType(u)local type;if g[u]~=nil then type=g[u]else local v=string.sub(u,0,5)if f[v]~=nil then type=f[v]end end;return type end;function self:register(w)_ENV=w;for type,r in pairs(h)do _ENV[type]={}end;for r,x in pairs(self:getSlots())do local u=x.getClass()local type=self:getClassType(u)if type==nil then system.print("Unrecognized Type: "..u)else if h[type]==nil then _ENV[type]=x else table.insert(_ENV[type],x)end end end;function compare(y,z)if y~=nil and y.getLocalId and z~=nil and z.getLocalId then return y.getLocalId()<z.getLocalId()end;return nil end;for type,r in pairs(h)do if#_ENV[type]>1 then table.sort(_ENV[type],compare)end end;if#_ENV["databases"]>0 then local A=getPlugin("bankraid",true)if A~=nil then _ENV["database"]=A:new(_ENV["databases"])else _ENV["database"]=_ENV["databases"][1]end end;if _ENV["unitType"]==nil or _ENV["unitType"]==""then if e[unit.getClass()]~=nil then _ENV["unitType"]=e[unit.getClass()]else end end;register:addAction("antigravityStart","antigravityStart",function()if antigrav~=nil then antigrav.toggle()end end)register:addAction("systemOnUpdate","frameCounter",function()if executeTotal==nil then executeTotal=0 end;if executeSet==nil then executeSet=0 end;executeTotal=executeTotal+1;executeSet=executeSet+1;local B=system.getArkTime()if B-executeTime>1 then executeLastFrames=executeSet;executeSet=1;executeTime=B;local C=false;if C then system.print("Frames: "..executeLastFrames)end end end)register:addAction("systemOnActionStart","systemActionStartAlias",function(D,system)register:callAction(D.."Start",system)register:startHotkeyPressed(D)end)register:addAction("systemOnActionStop","systemActionStopAlias",function(D,system)register:callAction(D.."Stop",system)register:endHotkeyPressed(D)end)register:addAction("systemOnActionLoop","systemActionLoopAlias",function(D,system)register:callAction(D.."Loop",system)end)end;return self
        
        end
        package.preload[packagePrefix.."register"] = function()
           local self={}self.functionRegister={}self.overwriteRegister={}self.overwriteOrder={}self.viewRegister={}self.pressedRegister={}function self:hotkeyState(a)if self.pressedRegister[a]==1 then return 1 end;return 0 end;function self:startHotkeyPressed(a)self.pressedRegister[a]=1 end;function self:endHotkeyPressed(a)self.pressedRegister[a]=nil end;self.switches={}function self:addSwitch(b,c)assert(type(b)=="string","name isn't a string, type was "..type(b))assert(type(c)=="table",b..": entity isn't a table, type was "..type(c))self.switches[b]=c;self:callAction("registerAddSwitch",b)end;function self:getSwitch(b)assert(type(b)=="string","name isn't a string, type was "..type(b))return self.switches[b]end;function self:getSwitches()return self.switches end;self.taskRegister={}self.taskOrder={}local function d(e,f)if e~=nil and f~=nil then return self.taskRegister[e].order<self.taskRegister[f].order end;return nil end;local g=2500;function self:addTask(b,h,i,j)assert(type(b)=="string","addTask: name isn't a string, type was "..type(b))assert(type(h)=="function",b..": func isn't a function, type was "..type(h))if i==nil then i=10 else assert(type(i)=="number",b..": priority has to be number, type was "..type(i))end;if j==nil then j=g else assert(type(j)=="number",b..": rating has to be number, type was "..type(j))assert(j<=g,b..": rating has to be smaller then the allowed max rating of "..g)end;if not self:hasAction("systemUpdate","registerTasker")then self:addAction("systemUpdate","registerTasker",function()self:runTasks()end)end;if self.taskRegister[b]~=nil then self:removeTask(b)end;table.insert(self.taskOrder,b)self.taskRegister[b]={order=i,task=coroutine.create(h),rating=j}if#self.taskOrder>1 then table.sort(self.taskOrder,d)end end;function self:hasTask(b)return self.taskRegister[b]~=nil end;function self:removeTask(b)assert(type(b)=="string","removeTask: Name isn't a string, type was "..type(b))self.taskRegister[b]=nil;for k,l in pairs(self.taskOrder)do if l==b then table.remove(self.taskOrder,k)return end end end;function self:runTasks()local m=0;for n,b in ipairs(self.taskOrder)do local o=self.taskRegister[b]if m+o.rating<=g then if o.task==nil or coroutine.status(o.task)=="dead"then self:removeTask(b)else m=m+o.rating;local p,q=coroutine.resume(o.task)if not p then system.print(b.." in runTasks:",q)self:removeTask(b)end end end end end;function self:hasAction(r,b)return self.functionRegister[r]~=nil and self.functionRegister[r][b]~=nil end;function self:addAction(r,b,h)assert(type(r)=="string","action isn't a string, type was "..type(r))assert(type(b)=="string",r..": name isn't a string, type was "..type(b))assert(type(h)=="function",r..":"..b..": func isn't a function, type was "..type(h))if self.functionRegister[r]==nil then self.functionRegister[r]={}end;self.functionRegister[r][b]=h end;function self:removeAction(r,b)if self.functionRegister[r]==nil or self.functionRegister[r][b]==nil then return false end;self.functionRegister[r][b]=nil;return true end;function self:callAction(r,...)local s={}if self.functionRegister[r]~=nil then if devMode then system.print("callAction: "..r)end;for b,h in pairs(self.functionRegister[r])do if h~=nil then local t,u=pcall(h,...)if t then s[b]=u else system.print(b.." in callAction:",u)end end end end;return s end;function self:callActionSpecific(r,b,...)assert(self.functionRegister[r]=="table",r..":".." not registered")assert(self.functionRegister[r][b]=="function",r..":"..b..": called specified function isn't a function, type was "..type(self.functionRegister[r][b]))local t,u=pcall(self.functionRegister[r][b],...)if t then return u else system.print(b.." in callActionSpecific:",u)end end;return self
        
        end
        system.rawPrint=system.print;function system.print(a,b)if b then b=tostring(b):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"','chunk'):gsub("&","&amp;"):gsub("<","&lt;"):gsub(">","&gt;")else b="???"end;system.rawPrint(a.." "..b)end;function print(c)system.rawPrint(tostring(c))end;local d=unit;if devMode==true and not player.hasDRMAutorization()then print("devMode set but no DRM auth")error("devMode set but no DRM auth")d.exit()end;if not d.hasDRM()then if devMode~=true then print("DRM Required")error("DRM Required")d.exit()else print("DRM requirement skipped by devMode")end end;d.hideWidget()print("Hyperion Gunner Script V0.98.3")print("by Hyperion Scripting")print("for further information you can contact me on discord: Skeletmaster#9864")system.showScreen(1)system.setScreen([[<svg xmlns="http://www.w3.org/2000/svg" width="40%" style="left:30%;top:10%;display:block; position:absolute;" viewBox="0 0 973.35 837.57">
            <defs>
            <style>
            .cls-1 { fill: #798a99; }
            .cls-2 { fill: #bd1730; }
            </style>
            </defs>
            <path class="cls-1" d="M583,93.5H437.52C353.65,361.21,211.41,603.08,25.7,804.26L98.3,930a1892.42,1892.42,0,0,1,828.89-.22l70.63-122.29C810.63,605.68,667.33,362.63,583,93.5ZM508.29,740.05A945,945,0,0,0,206.5,789.18C357.22,655.35,464.94,474.16,506.32,269c41.16,204.15,148,384.54,297.51,518.13A945.66,945.66,0,0,0,508.29,740.05Z" transform="translate(-25.08 -93)"/>
            <circle class="cls-2" cx="481.42" cy="523.5" r="118"/>
            </svg>
            <svg height="100%" width="100%" viewBox="0 0 1920 1080" style="left:0;top:0;display:block; position:absolute;">
            <text x="40%" y="88%" style="fill:#FFFFFF;font-size:50px">Hyperion Scripting</text>
            </svg>]])local e=require;require=function(f)return print("require '"..f.."': deprecated, use getPlugin()")end;local g={}local h={}function g:fixName(f)local i=packagePrefix;if string.find(f,i)then f=string.gsub(f,i,"")end;return f end;function g:unloadPlugin(f,j,k)assert(type(f)=="string","getPlugin: parameter name has to be string, was "..type(f))f=g:fixName(f)local i=packagePrefix;if type(h[f])=="table"and h[f].valid~=nil then if h[f]:valid(k)~=true then return nil end end;if j then i=""end;if package.loaded~=nil and package.loaded[i..f]~=nil then package.loaded[i..f]=nil end;if h[f]~=nil then if type(h[f])=="table"and type(h[f].unregister)=="function"then h[f].unregister()end;h[f]=nil end end;function g:getPlugin(f,l,k,j)assert(type(f)=="string","getPlugin: parameter name has to be string, was "..type(f))if l==nil then l=false end;f=g:fixName(f)if not g:hasPlugin(f,l,j)then return nil end;if type(h[f])=="table"and h[f].valid~=nil then if h[f]:valid(k)~=true then if not l then print("getPlugin '"..f.."':".." Not valid or compatible")end;return nil end end;return h[f]end;function g:hasPlugin(f,l,j)assert(type(f)=="string","hasPlugin: parameter name has to be string, was "..type(f))if l==nil then l=false end;f=g:fixName(f)local i=packagePrefix;if j then i=""end;if h[f]==nil then h[f]=false;local m,n=pcall(e,i..f)if not m then if l==nil or not l then system.print("hasPlugin '"..f.."': require failed",n)end else h[f]=n end;if type(h[f])=="table"then if h[f].register~=nil then if _ENV["debugscreen"]==nil then _ENV["debugscreen"]=debugscreen end;if _ENV["register"]==nil then _ENV["register"]=register end;if _ENV["system"]==nil then _ENV["system"]=system end;if _ENV["unit"]==nil then _ENV["unit"]=unit end;if _ENV["player"]==nil then _ENV["player"]=player end;if _ENV["construct"]==nil then _ENV["construct"]=construct end;if _ENV["library"]==nil then _ENV["library"]=library end;local o,p=pcall(h[f].register,h[f],_ENV)if not o and not l then system.print("hasPlugin '"..f.."': register failed",p)end end else if h[f]~=nil and h[f]~=false then if type(h[f])=="string"then print("hasPlugin '"..f.."':"..h[f])else print("hasPlugin '"..f.."': not table value")end end end end;return type(h[f])=="table"end;function unloadPlugin(f,j)return g:unloadPlugin(f,j)end;function hasPlugin(f,l,j)return g:hasPlugin(f,l,j)end;function getPlugin(f,l,k,j)return g:getPlugin(f,l,k,j)end;local q={}unitType=""renderEveryXFrames=3;executeTotal=0;executeSet=0;executeTime=0;executeLastFrames=0;screenToggle=true;mode=-1;forceMode=-1;bootTime=system.getArkTime()useLightStyle=false;local r=120;local s=184;modeColors={}modeColors[0]=r;modeColors[1]=s;fuelTankHandlingSpace=5;fuelTankHandlingRocket=0;fuelTankHandlingAtmos=0;ContainerOptimization=5;FuelTankOptimization=5;function collect_keys(t,u)local v={}for w in pairs(t)do v[#v+1]=w end;table.sort(v,u)return v end;function sortedPairs(t,u)local x=collect_keys(t,u)local y=0;return function()y=y+1;if x[y]then return x[y],t[x[y]]end end end;function tableLength(z)local A=0;for B in pairs(z)do A=A+1 end;return A end;function timeit(C,D)collectgarbage()local E=system.getTime()local F=D()local G=system.getTime()print(C..": "..G-E)return F end;function getRelativePitch(H)return math.deg(math.atan(H[2],H[3]))-90 end;function getRelativeYaw(H)return math.deg(math.atan(H[2],H[1]))-90 end;function mysplit(I,J)if J==nil then J="%s"end;local t={}for c in string.gmatch(I,"([^"..J.."]+)")do table.insert(t,c)end;return t end;function inTable(K,L)if type(K)~="table"then return false end;for w,M in pairs(K)do if M==L then return true,w end end;return false end;function round(N,O)local P=10^(O or 0)if O~=nil then return math.floor(N*P+0.5)/P else return math.floor((N*P+0.5)/P)end end;local Q=getPlugin("configuration")if Q.owner~=nil and Q.owner~=""then if not inTable(player.getOrgIds(),Q.owner)then system.print("Corp signatur required")error("Corp signatur required")d.exit()end end;if Q.creater~=nil and Q.creater~=""then if not construct.getCreator()[1]==Q.creater then system.print("Corp creater required")error("Corp creater required")d.exit()end end;register=getPlugin("register")slots=getPlugin("slots")register:callAction("systemStart")local R={}function addTimer(S,T,U)d.setTimer(S,T)R[S]=U end;function onTimer(V)if R[V]~=nil then local W,X=pcall(R[V])if not W then print("Timer:"..X.."  "..V)end end end;function stopTimer()for w,B in pairs(R)do d.setTimer(w,0)end end;local Y=0;function delay(Z,T)local S="DelayCounter"..Y;addTimer(S,T,function()pcall(Z)d.stopTimer(S)end)Y=Y+1 end;register:addAction("unitOnTimer","Timer",onTimer)if devMode==true then getPlugin("dev",true)getPlugin("devTools",true)end;getPlugin("optionals",true)for f,B in sortedPairs(package.preload)do getPlugin(f,true)end;delay(function()register:callAction("unitOnStart")system.setScreen("")end,0.5)
        
    onStop:
      lua: if register ~= nil then register:callAction("unitOnStop",unit) end
    onTimer(tag):
      lua: if register ~= nil then register:callAction("unitOnTimer",tag,unit) end
  system:
    onActionStart(action):
      lua: if register ~= nil then register:callAction("systemOnActionStart",action,system) end
    onActionStop(action):
      lua: if register ~= nil then register:callAction("systemOnActionStop",action,system) end
    onActionLoop(action):
      lua: if register ~= nil then register:callAction("systemOnActionLoop",action,system) end
    onUpdate:
      lua: if register ~= nil then register:callAction("systemOnUpdate",system) end
    onFlush:
      lua: if register ~= nil then register:callAction("systemOnFlush",system) end
    onInputText(text):
      lua: if register ~= nil then register:callAction("systemOnInputText",text,system) end
    onCameraChanged(mode):
      lua: if register ~= nil then register:callAction("systemOnCameraChanged",mode,system) end
  transponder:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,transponder) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,transponder) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,transponder) end
  weapon_1:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_1) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_1) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_1) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_1) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_1) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_1) end
  weapon_2:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_2) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_2) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_2) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_2) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_2) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_2) end
  weapon_3:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_3) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_3) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_3) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_3) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_3) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_3) end
  weapon_4:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_4) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_4) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_4) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_4) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_4) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_4) end
  weapon_5:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_5) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_5) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_5) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_5) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_5) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_5) end
  weapon_6:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_6) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_6) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_6) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_6) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_6) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_6) end
  weapon:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon) end
  radar_1:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_1) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_1) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_1) end
  radar_2:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_2) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_2) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_2) end
  radar_3:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_3) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_3) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_3) end
  radar_4:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_4) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_4) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_4) end
  radar_5:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_5) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_5) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_5) end
  radar_6:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_6) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_6) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_6) end
  radar:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar) end
  shieldGenerator:
    onToggled(active):
      lua: if register ~= nil then register:callAction("OnToggled",active,shieldGenerator) end
    onAbsorbed(hitpoints,rawHitpoints):
      lua: if register ~= nil then register:callAction("OnAbsorbed",hitpoints,rawHitpoints,shieldGenerator) end
    onVentin(active,restoredHitpoints):
      lua: if register ~= nil then register:callAction("OnVentin",active,restoredHitpoints,shieldGenerator) end
    onDown:
      lua: if register ~= nil then register:callAction("OnDown",shieldGenerator) end
    onRestored:
      lua: if register ~= nil then register:callAction("OnRestored",shieldGenerator) end
  core:
    onStressChanged(stress):
      lua: if register ~= nil then register:callAction("coreOnStressChanged",stress,core) end
