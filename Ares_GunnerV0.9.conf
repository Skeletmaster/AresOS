name: Ares_GunnerV0.9
slots:
  databank:
    class: DataBank
  transponder:
    class: TransponderUnit
  weapon:
    class: WeaponUnit
    select: manual
  radar:
    class: RadarPVPUnit
    select: manual
  shieldGenerator:
    class: ShieldGeneratorUnit
  core:
    class: CoreUnit
handlers:
  unit:
    onStart:
      lua: |
        packagePrefix = "autoconf.custom.AresOS."
        package.preload[packagePrefix.."menuscreener"] = function()
           local self={}self.viewTags={"screen"}self.loadPrio=100;self.version=0.9;local a=0;local b=nil;local c=nil;local d=false;local e="AQN5B4-@7gSt1W?;"function self:valid(f)return true end;local g="Main"local h={}local i={}function self:addMenu(j,k)h[j]=k end;local l="gunner"function self:onMouseDown(m,n,o)end;function self:onMouseUp(m,n,o)m=m*100;n=n*100;for p,q in pairs(i)do if q.top<=n and n<=q.top+q.height and q.left<=m and m<=q.left+q.width then pcall(q.func)break end end end;function self:addButton(r,s,t,u,k)table.insert(i,{["top"]=s,["left"]=r,["width"]=t,["height"]=u,["func"]=k})end;function self:addFancyButton(r,s,t,u,k,j,v,w,x)table.insert(i,{["top"]=s,["left"]=r,["width"]=t,["height"]=u,["func"]=k})local y=0.2;if s<=w and w<=s+u and r<=v and v<=r+t then y=0.5 end;x=x or"4682B4"local z=[[                        
                <rect x="]]..r..[[%" y="]]..s..[[%" rx="2" ry="2" width="]]..t..[[%" height="]]..u..[[%" style="fill:#]]..x..[[;fill-opacity:]]..y..[[" />
                <text x="]]..r+t*0.1 ..[[%" y="]]..s+u*0.7 ..[[%" style="fill:#FFFFFF;font-size:]]..u*1.5 ..[[">]]..j..[[</text>
            ]]return z end;function self:register(A)_ENV=A;if not self:valid(e)then return end;b=getPlugin("BaseFlight",true)c=getPlugin("screener",true)if c==nil then return end;c:addScreen("centerfirst",{offsetx=0.3035,offsety=0.11,width=0.393,height=0.7,perspective="first",parent="mainScreenFirst"})c:registerDefaultScreen("centerfirst","Menu")c:addView("Menu",self)register:addAction("option6Start","Exit",function()system.lockView(0)d=false;c:freeMouse(false)if b~=nil then b:setUpdateState(true)end end)register:addAction("systemOnCameraChanged","ViewLocker",function(B)if B==1 then system.lockView(1)d=true;c:freeMouse(true)else system.lockView(0)d=false;c:freeMouse(false)if b~=nil then b:setUpdateState(true)end end end)self:addMenu("Settings",function(v,w,C,D)self:addButton(3,10,20,3,function()l="gunner"a=0 end)self:addButton(53,10,20,3,function()l="remote"a=0 end)if D then if b~=nil then b:setUpdateState(false)end;a=a+system.getMouseWheel()*-1 else if b~=nil then b:setUpdateState(true)end end;if a<0 then a=0 end;local z=""if unitType=="gunner"then local E="4682B4"local F="4682B4"if l=="gunner"then E="00ff00"else F="00ff00"end;z=[[           
                    <rect x="2%" y="9%" rx="2" ry="2" width="96%" height="89%" style="fill:#4682B4;fill-opacity:0.35" />
        
                    <rect x="3%" y="10%" rx="2" ry="2" width="20%" height="3%" style="fill:#]]..E..[[;fill-opacity:0.8" />
                    <text x="5%" y="12%" style="fill:#FFFFFF;font-size:6">Gunner</text>
        
                    <rect x="53%" y="10%" rx="2" ry="2" width="20%" height="3%" style="fill:#]]..F..[[;fill-opacity:0.8" />
                    <text x="55%" y="12%" style="fill:#FFFFFF;font-size:6">Remote</text>
                    ]]end;if unitType==l then z=z..[[]]local G={}local H=getPlugin("Settings")for I,J in pairs(H.Description)do table.insert(G,{I,nil})for j,K in pairs(J)do table.insert(G,{I,j})end end;local y=false;for L=1,80,1 do local x=L+a;local M=0;y=not y;if y then M=0.3 end;if G[x]==nil then break end;local N=G[x][1]local O=G[x][2]local P="4682B4"if L*3+13.2<=w and w<=L*3+13+2.5 and 2.5<=v and v<=2.5+95 then P="244c9c"M=0.3 end;if O==nil then z=z..[[<rect x="2.5%" y="]]..L*3+13 ..[[%" rx="2" ry="2" width="95%" height="3%" style="fill:#]]..P..[[;fill-opacity:]]..M..[[" /><text x="5%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">]]..N..[[</text>]]else z=z..[[<rect x="2.5%" y="]]..L*3+13 ..[[%" rx="2" ry="2" width="95%" height="3%" style="fill:#]]..P..[[;fill-opacity:]]..M..[[" /><text x="5%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">]]..O..[[</text><text x="60%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">]]..H.Description[N][O]..[[</text>
                            <text x="25%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">]]..tostring(H:get(O,N))..[[</text>
                            ]]local Q=H.Range[N][O]if Q[1]=="boolean"then z=z..[[<text x="30%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{]]..tostring(not H:get(O,N))..[[}</text>]]self:addButton(30,L*3+13.2,5,2.5,function()H:set(O,not H:get(O,N),N)end)elseif Q[1]=="string"then local m=0;for p,R in pairs(Q[2])do z=z..[[<text x="]]..30+m..[[%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{]]..R..[[}</text>]]self:addButton(30+m,L*3+13.2,#R*1.5,2.5,function()H:set(O,R,N)end)m=m+#R+2 end else end end end end;return z end)if unitType~="gunner"then self:addMenu("Commander",function(v,w,C,D)if D and(9<=w and w<=98 and 2<=v and v<=68)then if b~=nil then b:setUpdateState(false)end;a=a+system.getMouseWheel()*-1 else if b~=nil then b:setUpdateState(true)end end;return""end)end end;function self:setScreen(v,w,C,S)local T=false;local D=false;v=v*100;w=w*100;if 0<=w and w<=100 and 0<=v and v<=100 then T=true;if 9<=w and w<=98 and 2<=v and v<=98 then D=true end end;if system.isViewLocked()~=1 and unitType~="remote"then return""end;if not d then return end;i={}self:addButton(2,2,17.6,5,function()g="Main"end)self:addButton(21.6,2,17.6,5,function()g="Commander"end)self:addButton(41.2,2,17.6,5,function()g="Ship"end)self:addButton(60.8,2,17.6,5,function()g="Pilot"end)self:addButton(80.4,2,17.6,5,function()g="Settings"a=0 end)self:addButton(92.5,92.5,5,5,function()system.lockView(0)d=false;c:freeMouse(false)if b~=nil then b:setUpdateState(true)end end)local z=""if unitType=="gunner"then z=[[        
                <svg style="width:100%;height:100%" viewBox="0 0 300 300">
                    <rect x="0%" y="0%" rx="2" ry="2" width="100%" height="100%" style="fill:#000000;fill-opacity:0.35" />
        
                    <rect x="2%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
                    <rect x="21.6%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
                    <rect x="41.2%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
                    <rect x="60.8%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
                    <rect x="80.4%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
        
                    <text x="8%" y="5.5%" style="fill:#FFFFFF;font-size:8">Main</text>
                    <text x="22%" y="5.5%" style="fill:#FFFFFF;font-size:8">Commander</text>
                    <text x="47%" y="5.5%" style="fill:#FFFFFF;font-size:8">Ship</text>
                    <text x="66.5%" y="5.5%" style="fill:#FFFFFF;font-size:8">Pilot</text>
                    <text x="83.8%" y="5.5%" style="fill:#FFFFFF;font-size:8">Settings</text>]]else z=[[        
                    <svg style="width:100%;height:100%" viewBox="0 0 300 300">]]end;local U,V=pcall(h[g],v,w,C,D)if U then z=z..V else if devMode then print(V)end end;return z..[[<text x="94%" y="97%" style="fill:#FFFFFF;font-size:14">X</text></svg>]]end;return self
        
        end
        package.preload[packagePrefix.."menuGunner"] = function()
           local self={}self.loadPrio=100;self.version=0.9;local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;function self:register(c)_ENV=c;if not self:valid(a)then return end;local d=getPlugin("menuscreener",true,a)if d==nil then return end;if core~=nil then self.SpaceTanks,self.RocketTanks=getTankId()end;d:addMenu("Main",function(e,f,g,h)HTML=[[
                <rect x="66%" y="9%" rx="2" ry="2" width="32%" height="20%" style="fill:#4682B4;fill-opacity:0.35" />
                <text x="70%" y="13%" style="fill:#FFFFFF;font-size:8">Destinations</text>]]HTML=HTML..d:addFancyButton(68,15,28,5,function()system.setWaypoint("::pos{0,0,-91264.7828,408204.8952,40057.4424}")end,"Base",e,f)return HTML end)d:addMenu("Ship",function(e,f,g,h)HTML=[[
                    <rect x="2%" y="9%" rx="2" ry="2" width="56%" height="89%" style="fill:#4682B4;fill-opacity:0.35" />
                    <rect x="60%" y="9%" rx="2" ry="2" width="38%" height="49%" style="fill:#4682B4;fill-opacity:0.35" />
                    <rect x="60%" y="60%" rx="2" ry="2" width="38%" height="38%" style="fill:#4682B4;fill-opacity:0.35" />
        
                    <text x="6%" y="13%" style="fill:#FFFFFF;font-size:8">Elements</text>
                    <text x="64%" y="13%" style="fill:#FFFFFF;font-size:8">Tanks</text>
                    <text x="64%" y="64%" style="fill:#FFFFFF;font-size:8">Shield</text>]]if core~=nil then local i=0;HTML=HTML..[[<text x="64%" y="16%" style="fill:#FFFFFF;font-size:8">Space:</text>]]for j,k in pairs(self.SpaceTanks)do local l=CalculateFuelLevel(k)*100;HTML=HTML..[[
                            <text x="64%" y="]]..19+i..[[%" style="fill:#FFFFFF;font-size:8">]]..k[1]..[[</text>
                            <text x="75%" y="]]..19+i..[[%" style="fill:#FFFFFF;font-size:8">]]..round(l,2)..[[</text>
                        ]]i=i+3 end;i=i+3;HTML=HTML..[[<text x="64%" y="]]..19+i..[[%" style="fill:#FFFFFF;font-size:8">Rocket:</text>]]for j,k in pairs(self.RocketTanks)do local l=CalculateFuelLevel(k)*100;HTML=HTML..[[
                            <text x="64%" y="]]..19+i..[[%" style="fill:#FFFFFF;font-size:8">]]..k[1]..[[</text>
                            <text x="75%" y="]]..19+i..[[%" style="fill:#FFFFFF;font-size:8">]]..round(l,2)..[[</text>
                        ]]i=i+3 end end;if shield~=nil then HTML=HTML..[[
                        <text x="64%" y="67%" style="fill:#FFFFFF;font-size:5">State</text>
                        <text x="64%" y="70%" style="fill:#FFFFFF;font-size:5">HP</text>
                        <text x="64%" y="73%" style="fill:#FFFFFF;font-size:5">venting</text>
                        <text x="64%" y="76%" style="fill:#FFFFFF;font-size:5">VentingCd</text>
                        <text x="64%" y="79%" style="fill:#FFFFFF;font-size:5">Resistances</text>
                        <text x="64%" y="82%" style="fill:#FFFFFF;font-size:5">ResCd</text>
                        <text x="64%" y="85%" style="fill:#FFFFFF;font-size:5">ResPool</text>
                        <text x="64%" y="88%" style="fill:#FFFFFF;font-size:5">StressRatio</text>
                        <text x="64%" y="91%" style="fill:#FFFFFF;font-size:5">StressHp</text>
                        <text x="64%" y="94%" style="fill:#FFFFFF;font-size:5"></text>
                        <text x="64%" y="97%" style="fill:#FFFFFF;font-size:5"></text>
        
                        <text x="75%" y="67%" style="fill:#FFFFFF;font-size:5">]]..shield.isActive()..[[</text>
                        <text x="75%" y="70%" style="fill:#FFFFFF;font-size:5">]]..shield.getShieldHitpoints().."  /  "..shield.getMaxShieldHitpoints()..[[</text>
                        <text x="75%" y="73%" style="fill:#FFFFFF;font-size:5">]]..shield.isVenting()..[[</text>
                        <text x="75%" y="76%" style="fill:#FFFFFF;font-size:5">]]..shield.getVentingCooldown().."  /  "..shield.getVentingMaxCooldown()..[[</text>
                        <text x="75%" y="79%" style="fill:#FFFFFF;font-size:5">]]..shield.getResistances()[1].." "..shield.getResistances()[2].." "..shield.getResistances()[3].." "..shield.getResistances()[4]..[[</text>
                        <text x="75%" y="82%" style="fill:#FFFFFF;font-size:5">]]..shield.getResistancesCooldown().."  /  "..shield.getResistancesMaxCooldown()..[[</text>
                        <text x="75%" y="85%" style="fill:#FFFFFF;font-size:5">]]..shield.getResistancesRemaining().."  /  "..shield.getResistancesPool()..[[</text>
                        <text x="75%" y="88%" style="fill:#FFFFFF;font-size:5">]]..shield.getStressRatioRaw()[1].." "..shield.getStressRatioRaw()[2].." "..shield.getStressRatioRaw()[3].." "..shield.getStressRatioRaw()[4]..[[</text>
                        <text x="75%" y="91%" style="fill:#FFFFFF;font-size:5">]]..shield.getStressHitpointsRaw()..[[</text>]]end;return HTML end)end;function getTankId()local m={}local n={}local o=core.getElementIdList()local function p(q)local r,s=0,0;if ContainerOptimization>0 then r=ContainerOptimization*0.05 end;if FuelTankOptimization>0 then s=FuelTankOptimization*0.05 end;return q*(1-(r+s))end;for t,u in pairs(o)do local v=core.getElementDisplayNameById(u)if v=="Space Fuel Tank"then local w=core.getElementMaxHitPointsById(u)local x=2400;local y=182.67;if w>10000 then x=76800;y=5480 elseif w>1300 then x=9600;y=988.67 end;x=x+x*fuelTankHandlingSpace*0.2;table.insert(m,{[1]=u,["mv"]=p(x),["me"]=y})elseif v=="Rocket Fuel Tank"then local w=core.getElementMaxHitPointsById(u)local x=400*0.8;local y=173.42;if w>65000 then x=50000*0.8;y=25740 elseif w>6000 then x=6400*0.8;y=4720 elseif w>700 then x=800*0.8;y=886.72 end;x=x+x*fuelTankHandlingRocket*0.2;table.insert(n,{[1]=u,["mv"]=p(x),["me"]=y})end end;table.sort(m,function(z,A)return z[1]<A[1]end)table.sort(n,function(z,A)return z[1]<A[1]end)return m,n end;function CalculateFuelLevel(u)return(core.getElementMassById(u[1])-u["me"])/u["mv"]end;return self
        
        end
        package.preload[packagePrefix.."combatscreen"] = function()
           local self={}self.version=0.9;self.loadPrio=1000;self.viewTags={"screen"}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;local radar=radar[1]local c=getPlugin("BaseFlight",true)local d=getPlugin("RadarWidget",true,"AQN5B4-@7gSt1W?;")local e=getPlugin("GunnerHUD",true,"AQN5B4-@7gSt1W?;")local f={}local g={}local h={}local i={}local j={}local k=0;local l=true;local m={Dead=true,[4]=true,[6]=true,[7]=true,[5]=true,XL=true,L=true,M=true,S=true,XS=true}local n=1;local o=0;local p=false;local q=""function self:register(r)_ENV=r;if not self:valid(a)then return end;addTimer("combatData",1,function()for s in pairs(j)do if radar.isConstructIdentified(s)==1 then j[s].d=radar.getConstructInfos(s)j[s].m=radar.getConstructMass(s)j[s].h=radar.hasMatchingTransponder(s)j[s].a=radar.isConstructAbandoned(s)==1 end end end)d:AddRadarMode("Automatic",function(t)local u=0;if database~=nil and database.hasKey~=nil then if database.hasKey("Primary")==1 then u=database.getIntValue("Primary")d:AddShip(u,t,"primary - ",1)end end;if k~=0 then d:AddShip(k,t,"selected - ",2)end;for v,s in pairs(radar.getIdentifiedConstructIds())do if s==u or s==k then goto w end;d:AddShip(s,t,"")::w::end end)register:addAction("OnHit","combatData",function(s,x,y)if f[y.getLocalId()]==nil then f[y.getLocalId()]=0 end;f[y.getLocalId()]=f[y.getLocalId()]+1;if j[s].dmg==nil then j[s].dmg=0 end;j[s].dmg=j[s].dmg+x;table.insert(i,"Hit: "..round(x))j[s].lhit=system.getUtcTime()end)register:addAction("OnElementDestroyed","combatData",function(s,z,y)if j[s].edes==nil then j[s].edes={}end;table.insert(j[s].edes,z)table.insert(i,"Element: "..system.getItem(z).displayNameWithSize)end)register:addAction("OnDestroyed","combatData",function(s,y)table.insert(h,s)table.insert(i,"Killed: "..tostring(d.CodeList[s]))end)register:addAction("OnMissed","combatData",function(s,y)if g[y.getLocalId()]==nil then g[y.getLocalId()]=0 end;g[y.getLocalId()]=g[y.getLocalId()]+1;table.insert(i,"Missed: "..tostring(d.CodeList[s]))j[s].lhit=system.getUtcTime()end)register:addAction("OnIdentified","combatData",function(s)delay(function()local A;if radar.hasMatchingTransponder(s)==1 then local B,C=radar.getConstructOwnerEntity(s)if C then A=system.getOrganization(B)else A=system.getPlayerName(B)end end;j[s]={d=radar.getConstructInfos(s),m=radar.getConstructMass(s),n=radar.getConstructName(s),s=radar.getConstructCoreSize(s),k=radar.getConstructKind(s),o=A,h=radar.hasMatchingTransponder(s),a=radar.isConstructAbandoned(s)==1,dmg=0,edes={},lhit}end,0.5)end)register:addAction("unitOnStop","DataPrint",function()print(json.encode(j))end)local D=getPlugin("screener",true)if D~=nil then D:addScreen("screen1third",{offsetx=0.01,offsety=0.03,width=0.2,height=0.25,perspective="third",parent="mainScreenThird"})D:registerDefaultScreen("screen1third","combatData")D:addView("combatData",self)end;local E=getPlugin("menuscreener",true,a)if E~=nil then E:addMenu("Commander",function(F,G,H,I)local function J(K,s,L,M,N,O,P,Q,R,C)E:addButton(2.5,K-1.75,60,2.5,function()k=s;if not p then d.tosearch=string.upper(L)d.SpecialRadarMode="Search"end end)local S={"Uni","Pla","Ast","Sta","Dyn","Spa","Ali"}local T="4682B4"local U=0;if C then U=0.35 end;if K-1.75<=G and G<=K-1.75+2.5 and 2.5<=F and F<=2.5+65 then T="244c9c"U=0.35 end;P=P or"plsIdent"local HTML=[[<rect x="2.5%" y="]]..K-1.75 ..[[%" rx="2" ry="2" width="65%" height="2.5%" style="fill:#]]..T..[[;fill-opacity:]]..U..[[" /><text x="3%" y="]]..K..[[%" style="fill:#FFFFFF;font-size:5">]]..L..[[</text>
                        <text x="7.8%" y="]]..K..[[%" style="fill:#FFFFFF;font-size:5">]]..M..[[</text>
                        <text x="28%" y="]]..K..[[%" style="fill:#FFFFFF;font-size:5">]]..N..[[</text>
                        <text x="33%" y="]]..K..[[%" style="fill:#FFFFFF;font-size:5">]]..S[O]..[[</text>
                        <text x="39%" y="]]..K..[[%" style="fill:#FFFFFF;font-size:5">]]..P..[[</text>
                        <text x="47%" y="]]..K..[[%" style="fill:#FFFFFF;font-size:5">]]..Q..[[</text>
                        <text x="57%" y="]]..K..[[%" style="fill:#FFFFFF;font-size:5">T - ]]..R..[[ s</text>
                        ]]if q=="You"then E:addButton(65,K-1.75,2.5,2.5,function()if database~=nil and database.hasKey~=nil then database.setIntValue("Primary",s)end end)HTML=HTML..[[<rect x="65%" y="]]..K-1.75 ..[[%" rx="2" ry="2" width="2.5%" height="2.5%" style="fill:#00FF00;fill-opacity:0.2" />]]end;return HTML end;if I and(9<=G and G<=98 and 2<=F and F<=68)then if c~=nil then c:setUpdateState(false)end;o=o+system.getMouseWheel()*-1 else if c~=nil then c:setUpdateState(true)end end;if o<0 then o=0 end;local V=0;for v,x in pairs(j)do V=V+x.dmg end;local u="none"if database~=nil and database.hasKey~=nil then if database.hasKey("Primary")==1 then u=database.getIntValue("Primary")u=tostring(d.CodeList[u])end end;HTML=[[
                    <rect x="2%" y="9%" rx="2" ry="2" width="66%" height="89%" style="fill:#4682B4;fill-opacity:0.35" />
                    <rect x="70%" y="9%" rx="2" ry="2" width="28%" height="20%" style="fill:#4682B4;fill-opacity:0.35" />
                    <rect x="70%" y="31%" rx="2" ry="2" width="28%" height="47%" style="fill:#4682B4;fill-opacity:0.35" />
                    <rect x="70%" y="80%" rx="2" ry="2" width="28%" height="18%" style="fill:#4682B4;fill-opacity:0.35" />
        
                    <text x="4%" y="17%" style="fill:#FFFFFF;font-size:5">ID</text>
                    <text x="8%" y="17%" style="fill:#FFFFFF;font-size:5">Name</text>
                    <text x="28%" y="17%" style="fill:#FFFFFF;font-size:5">Size</text>
                    <text x="33%" y="17%" style="fill:#FFFFFF;font-size:5">Type</text>
                    <text x="39%" y="17%" style="fill:#FFFFFF;font-size:5">MaxV</text>
                    <text x="47%" y="17%" style="fill:#FFFFFF;font-size:5">TotalDmg</text>
                    <text x="57%" y="17%" style="fill:#FFFFFF;font-size:5">lastHit</text>
        
                    <line x1="10" y1="52" x2="200" y2="52" style="stroke:#FFFFFF;stroke-width:0.5" />
                    
                    <line x1="23" y1="48" x2="23" y2="290" style="stroke:#FFFFFF;stroke-width:0.5" />
                    <line x1="82" y1="48" x2="82" y2="290" style="stroke:#FFFFFF;stroke-width:0.5" />
                    <line x1="97" y1="48" x2="97" y2="290" style="stroke:#FFFFFF;stroke-width:0.5" />
                    <line x1="115" y1="48" x2="115" y2="290" style="stroke:#FFFFFF;stroke-width:0.5" />
                    <line x1="139" y1="48" x2="139" y2="290" style="stroke:#FFFFFF;stroke-width:0.5" />
                    <line x1="169" y1="48" x2="169" y2="290" style="stroke:#FFFFFF;stroke-width:0.5" />
                    
                    <text x="72%" y="12%" style="fill:#FFFFFF;font-size:7">DamageDealt:</text>
                    <text x="72%" y="15%" style="fill:#FFFFFF;font-size:5">You:</text>  <text x="85%" y="15%" style="fill:#FFFFFF;font-size:5">]]..round(V)..[[</text>
        
                    <text x="72%" y="34%" style="fill:#FFFFFF;font-size:7">TargetInfos:</text>
                    ]]q=""if database~=nil and database.hasKey~=nil then if database.hasKey("Com")==1 then q=database.getStringValue("Com")if q==player.getName()then q="You"end end end;HTML=HTML..E:addFancyButton(71,81,26,3,function()if database==nil then return end;if q=="You"then database.clearValue("Com")else database.setStringValue("Com",player.getName())end end,"Commander:    "..q,F,G)HTML=HTML..[[<text x="72%" y="90%" style="fill:#FFFFFF;font-size:7">Primary:</text> <text x="85%" y="90%" style="fill:#FFFF00;font-size:10">]]..u..[[</text>]]HTML=HTML..E:addFancyButton(71,94,10,3,function()p=not p;if p then d.SpecialRadarMode="Automatic"else d.SpecialRadarMode=nil end end,"Slave:  "..tostring(p),F,G)if k==0 or j[k]==nil then HTML=HTML..[[<text x="72%" y="37%" style="fill:#FFFFFF;font-size:5">NoTargetSelected</text>]]else local W=j[k]HTML=HTML..[[
                            <text x="72%" y="37%" style="fill:#FFFFFF;font-size:5">Weapon:</text>
                            <text x="72%" y="40%" style="fill:#FFFFFF;font-size:5">Radar:</text>
                            <text x="72%" y="43%" style="fill:#FFFFFF;font-size:5">antiGravity:</text>
                            <text x="72%" y="46%" style="fill:#FFFFFF;font-size:5">atmoEngines:</text>
                            <text x="72%" y="49%" style="fill:#FFFFFF;font-size:5">spaceEngines:</text>
                            <text x="72%" y="52%" style="fill:#FFFFFF;font-size:5">rocketEngines:</text>
                            <text x="72%" y="55%" style="fill:#FFFFFF;font-size:5">Mass:</text>
        
                            <text x="85%" y="37%" style="fill:#FFFFFF;font-size:5">]]..tostring(W.d.weapons)..[[</text>
                            <text x="85%" y="40%" style="fill:#FFFFFF;font-size:5">]]..tostring(W.d.radars)..[[</text>
                            <text x="85%" y="43%" style="fill:#FFFFFF;font-size:5">]]..tostring(W.d.antiGravity)..[[</text>
                            <text x="85%" y="46%" style="fill:#FFFFFF;font-size:5">]]..tostring(W.d.atmoEngines)..[[</text>
                            <text x="85%" y="49%" style="fill:#FFFFFF;font-size:5">]]..tostring(W.d.spaceEngines)..[[</text>
                            <text x="85%" y="52%" style="fill:#FFFFFF;font-size:5">]]..tostring(W.d.rocketEngines)..[[</text>
                            <text x="85%" y="55%" style="fill:#FFFFFF;font-size:5">]]..round(W.m)..[[</text>]]if W.h==1 then HTML=HTML..[[
                                <text x="72%" y="61%" style="fill:#FFFFFF;font-size:5">Owner:</text>
                                <text x="85%" y="61%" style="fill:#FFFFFF;font-size:5">]]..W.o..[[</text>
                            ]]end end;local X="ShowHostile"if l then X="ShowFriendly"end;HTML=HTML..E:addFancyButton(4,10,15,3,function()l=not l end,X,F,G)if n==1 then X="All"elseif n==2 then X="OnlyNoData"else X="OnlyData"end;HTML=HTML..E:addFancyButton(20,10,15,3,function()n=n+1;if n>3 then n=1 end end,X,F,G)local function Y(Z,K,_,F,G)local S={"Uni","Pla","Ast","Sta","Dyn","Spa","Ali"}local X=_;if type(X)=="number"then X=S[X]end;local T="FF0000"if m[_]then T="00FF00"end;return E:addFancyButton(Z,K,4,2,function()m[_]=not m[_]end,X,F,G,T)end;HTML=HTML..Y(40,10,"Dead",F,G)HTML=HTML..Y(45,10,4,F,G)HTML=HTML..Y(50,10,6,F,G)HTML=HTML..Y(55,10,7,F,G)HTML=HTML..Y(60,10,5,F,G)HTML=HTML..Y(40,13,"XL",F,G)HTML=HTML..Y(45,13,"L",F,G)HTML=HTML..Y(50,13,"M",F,G)HTML=HTML..Y(55,13,"S",F,G)HTML=HTML..Y(60,13,"XS",F,G)local K=20;local C=true;local a0=1;if l then a0=0 end;local a1={}local a2=radar.getConstructIds()if n==3 then a2=j end;for L,s in pairs(a2)do if n==3 then s=L end;if j[s]==nil then if a0~=radar.hasMatchingTransponder(s)then goto w end;if not m["Dead"]and radar.isConstructAbandoned(s)==1 then goto w end;if not m[radar.getConstructKind(s)]then goto w end;if not m[radar.getConstructCoreSize(s)]then goto w end else if a0~=j[s].h then goto w end;if not m["Dead"]and j[s].a then goto w end;if not m[j[s].k]then goto w end;if not m[j[s].s]then goto w end;if n==2 then goto w end end;table.insert(a1,s)::w::end;local a3=system.getUtcTime()for B=1,109,1 do local s=a1[B+o]if s==nil then break end;local lhit=a3;local x=0;local a4;if j[s]~=nil then a4=round(e:MasstoMaxV(j[s].m)*3.6)if j[s].k~=5 then a4="static"end;lhit=j[s].lhit or a3;x=j[s].dmg end;if j[s]==nil then HTML=HTML..J(K,s,tostring(d.CodeList[s]),string.sub(radar.getConstructName(s),0,19),radar.getConstructCoreSize(s),radar.getConstructKind(s),a4,0,tostring(round(a3-lhit)),C)else HTML=HTML..J(K,s,tostring(d.CodeList[s]),string.sub(j[s].n,0,19),j[s].s,j[s].k,a4,round(x),tostring(round(a3-lhit)),C)end;C=not C;K=K+2.5;if K>97 then break end end;return HTML end)end end;function self:setScreen()local s=weapon[1].getTargetId()local a5=0;for v,x in pairs(j)do a5=a5+x.dmg end;local a6=[[
                <svg viewBox="0 0 100 80" style="width:100%;height:100%">
                    <rect x="0%" y="0%" rx="2" ry="2" width="100%" height="80%" style="fill:#4682B4;fill-opacity:0.35" />
                    <text x="5%" y="7.5%" style="fill:#FFFFFF;font-size:5">CombatLog</text>
                    <text x="50%" y="7.5%" style="fill:#FFFFFF;font-size:4">TargetData</text>
                    <text x="50%" y="12%" style="fill:#FFFFFF;font-size:3">Dmg: </text>
                    <text x="50%" y="16%" style="fill:#FFFFFF;font-size:3">DesElements: </text>
        
        
                    <text x="50%" y="30%" style="fill:#FFFFFF;font-size:3">TotalDmg: </text>
        
                    <text x="50%" y="50%" style="fill:#FFFFFF;font-size:4">WData</text>
                    <text x="65%" y="50%" style="fill:#FFFFFF;font-size:3">Hits</text>
                    <text x="80%" y="50%" style="fill:#FFFFFF;font-size:3">Shots</text>
                ]]if s>1 and j[s]~=nil then a6=a6 ..[[
                    <text x="80%" y="12%" style="fill:#FFFFFF;font-size:3">]]..round(j[s].dmg)..[[</text>
                    <text x="80%" y="16%" style="fill:#FFFFFF;font-size:3">]]..#j[s].edes..[[</text>
        
                    <text x="80%" y="30%" style="fill:#FFFFFF;font-size:3">]]..round(a5)..[[</text>
                ]]end;local K=4;for _,y in pairs(weapon)do local s=y.getLocalId()if g[s]==nil then g[s]=0 end;if f[s]==nil then f[s]=0 end;local a7=f[s]+g[s]local a8=100;if a7>0 then a8=f[s]/a7*100 end;local X=y.getName()local a9=string.find(X,"%[")+1;local aa=string.find(X,"]")-1;X=string.sub(X,a9,aa)a6=a6 ..[[<text x="50%" y="]]..50+K..[[%" style="fill:#FFFFFF;font-size:3">]]..X..[[: </text>]]a6=a6 ..[[<text x="65%" y="]]..50+K..[[%" style="fill:#FFFFFF;font-size:3">]]..round(a8,2)..[[%</text>]]a6=a6 ..[[<text x="80%" y="]]..50+K..[[%" style="fill:#FFFFFF;font-size:3">]]..a7 ..[[</text>]]K=K+4 end;for B=0,15,1 do if B>=#i then break end;a6=a6 ..[[<text x="2%" y="]]..12+B*4 ..[[%" style="fill:#FFFFFF;font-size:3">]]..i[#i-B]..[[</text>]]end;return a6 ..[[</svg>]]end;return self
        
        end
        package.preload[packagePrefix.."WidgetCreator"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;function self:register(c)_ENV=c;if not self:valid(a)then return end;register:addAction("unitOnStart","WidgetCreate",function()self:CreateWidgets()end)end;self.version=0.9;self.loadPrio=20;local d=unit;local e=system;function self:CreateWidgets()self:DestroyWidgets()self.DataIDs={}self.Panels={}if#weapon>0 then if#weapon<=3 then local f=e.createWidgetPanel("")self.Panels[#self.Panels+1]=f;for g=1,#weapon,1 do if#self.DataIDs>=#weapon then break end;local h=e.createWidget(f,"weapon")local i=weapon[g].getWidgetData()table.insert(self.DataIDs,e.createData(i))e.addDataToWidget(self.DataIDs[#self.DataIDs],h)end else local j=math.ceil(#weapon/2)for k=1,2,1 do local f=e.createWidgetPanel("")self.Panels[#self.Panels+1]=f;for g=1,j,1 do local h=e.createWidget(f,"weapon")local i=weapon[#self.DataIDs+1].getWidgetData()table.insert(self.DataIDs,e.createData(i))e.addDataToWidget(self.DataIDs[#self.DataIDs],h)if#self.DataIDs>=#weapon then break end end end end end;local radar=radar[1]if radar~=nil then local f=e.createWidgetPanel("")self.Panels[#self.Panels+1]=f;local h=e.createWidget(f,"radar")local i=radar.getWidgetData()self.RadarDataID=e.createData(i)e.addDataToWidget(self.RadarDataID,h)end end;function self:DestroyWidgets()if self.Panels~=nil then for l,f in pairs(self.Panels)do e.destroyWidgetPanel(f)end end end;return self
        
        end
        package.preload[packagePrefix.."config"] = function()
           local self={}local a=nil;local b={}function self:get(c,d)if a==nil then self:load()end;b[c]=true;if a[c]==nil then return d end;if d~=nil and a[c]==d then a[c]=nil;return d end;return a[c]end;function self:set(c,e,d)if a==nil then self:load()end;b[c]=true;if a[c]~=e then if e==d then a[c]=nil else a[c]=e end;self:save()end end;function self:load()if a==nil then if database~=nil and database.hasKey~=nil and database.hasKey("config"..unitType..unit.getLocalId())==1 then local f=database.getStringValue("config"..unitType..unit.getLocalId())a=json.decode(f)end;if a==nil then a={}end end end;function self:save()if a~=nil then if database~=nil and database.hasKey~=nil then database.setStringValue("config"..unitType..unit.getLocalId(),json.encode(a))end end end;function self:cleanup()if a==nil then return end;local g=false;for h,i in pairs(a)do if b[h]==nil then g=true;a[h]=nil end end;if g then self:save()end end;function self:register(j)_ENV=j;register:addAction("systemStop","configCleanup",function()self:cleanup()end)end;return self
        
        end
        package.preload[packagePrefix.."shortName"] = function()
           local self={}local a={["O"]=true,["Q"]=true,["0"]=true}local b={}self.version=0.9;self.loadPrio=20;local c="AQN5B4-@7gSt1W?;"function self:valid(d)if d~=c then return false end;return unitType=="gunner"end;function addRangeToCharSet(e,f)for g=e,f do local h=string.char(g)if not a[h]then b[#b+1]=h end end end;addRangeToCharSet(48,57)addRangeToCharSet(65,90)kCharSetSize=#b;function getHash(i)i=i>>16~i;i=i*0x45d9f3b;i=i>>16~i;i=i*0x45d9f3b;i=i>>16~i;if i<0 then i=~i end;return i end;function self:getShortName(j)local j=tonumber(j)if j==nil then return""end;local k=getHash(j)%8388593;local e=k*653276%8388593;local f=e*653276%8388593;local h=f*653276%8388593;return b[e%kCharSetSize+1]..b[f%kCharSetSize+1]..b[h%kCharSetSize+1]end;return self
        
        end
        package.preload[packagePrefix.."GunnerHUD"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;self.version=0.9;self.loadPrio=1000;self.viewTags={"hud"}local c=0;local d={}local e=0;local f=unit;local g=system;local h=0;function self:register(i)if not self:valid(a)then return end;ownShortName=getPlugin("shortName",true,"AQN5B4-@7gSt1W?;"):getShortName(construct.getId())register:addAction("OnEnter","Alarm",function(j)c=20;table.insert(d,j)end)register:addAction("OnDestroyed","Kill",function(j)h=system.getArkTime()end)local k=getPlugin("screener")if k~=nil then k:registerDefaultScreen("mainScreenThird","GunnerHUD")k:registerDefaultScreen("mainScreenFirst","GunnerHUD")k:addView("GunnerHUD",self)end;register:addAction("option8Start","Vent",function()if shield~=nil then if shield.isVenting()==0 then shield.startVenting()system.playSound("HSC/venting_shield.mp3")else shield.stopVenting()end end end)register:addAction("option9Start","Shildswitch",function()if shield~=nil then uiShieldActive=shield.getState()if uiShieldActive==1 then shield.deactivate()elseif uiShieldActive==0 then shield.activate()end end end)end;function self:setScreen()local l=0;local uiShieldActive=0;if shield~=nil then l=math.ceil(shield.getShieldHitpoints()/shield.getMaxShieldHitpoints()*100)uiShieldActive=shield.isActive()end;local m,n,o,p,q,r,s,t=targetHud()local u=getPlugin("RadarWidget",true,"AQN5B4-@7gSt1W?;")local v,w=getMinAmmo()local x=l;local y=v;local z=0;if core~=nil then z=(1-core.getCoreStressRatio())*100 end;local A;local B="<svg width=\"100%\" height=\"94.5%\" viewBox=\"0 0 1920 1080\" style=\"top:0;left:0\">"B=B.."<rect x=\"52%\" y=\"93.95%\" rx=\"2\" ry=\"2\" width=\"23.15%\" height=\"4.8%\" style=\"fill:#4682B4;fill-opacity:0.35\" />".."<rect x=\"52.2%\" y=\"96.4%\" width=\"7.25%\" height=\"1.9%\" style=\"fill:none;stroke:#FFFFFF;stroke-width:1px\" />".."<rect x=\"59.95%\" y=\"96.4%\" width=\"7.25%\" height=\"1.9%\" style=\"fill:none;stroke:#FFFFFF;stroke-width:1px\" />".."<rect x=\"67.7%\" y=\"96.4%\" width=\"7.25%\" height=\"1.9%\" style=\"fill:none;stroke:#FFFFFF;stroke-width:1px\" />"if shield~=nil then B=B.."<text x=\"52.35%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">Shield ("..round(l,2).."%)</text>"if uiShieldActive==0 then A="#777777"else if x>=66 then A="#009acd"else if x<66 and x>33 then A="#FFA500"end;if x<=33 then A="#FF0000"end end end;for C=0,19,1 do if x>0 then B=B.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..52.35+0.35*C.."%\" y=\"96.7%\" style=\"fill:"..A.."\" />"end;if x<=0 then B=B.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..52.35+0.35*C.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;x=x-5 end end;if core~=nil then B=B.."<text x=\"60.1%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">C. Stress ("..round((1-core.getCoreStressRatio())*100,2).."%)</text>"if z>=100 then A="#32CD32"else if z<100 and z>66 then A="#FFA500"end;if z<=66 then A="#FF0000"end end;for C=0,19,1 do if z>0 then B=B.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..60.1+0.35*C.."%\" y=\"96.7%\" style=\"fill:"..A.."\" />"end;if z<=0 then B=B.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..60.1+0.35*C.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;z=z-5 end end;B=B.."<text x=\"67.85%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">Ammo ("..w..")</text>"if y>33 then A="#CD661D"else if y<=33 then A="#FF0000"end end;for C=0,19,1 do if y>0 then B=B.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..67.85+0.35*C.."%\" y=\"96.7%\" style=\"fill:"..A.."\" />"end;if y<=0 then B=B.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..67.85+0.35*C.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;y=y-5 end;if radar[1].getTargetId()~=0 then local g=u.CodeList[radar[1].getTargetId()]if system.isViewLocked()~=1 then B=B.."<text x=\"49.2%\" y=\"49%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">"..g.."</text>"else B=B.."<text x=\"49%\" y=\"3%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:25px\">"..g.."</text>"end end;local D=""if uiTarget==true then if m<10 then A="#FF0000"elseif m<=30 then A="#FFA500"else A="#32CD32"end;B=B.."<rect x=\""..52 .."%\" y=\"89%\" rx=\"2\" ry=\"2\" width=\"23.15%\" height=\"4.8%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"B=B.."<text x=\""..52+0.5 .."%\" y=\"91.8%\" style=\"fill:#FFFFFF;font-size:12px\">".."Hitchance:".."</text>".."<text x=\""..52+4 .."%\" y=\"92%\" style=\"fill:"..A..";font-size:20px\">"..m.."%</text>"if o==0 then A="#FFA500"elseif o<0 then A="#FF0000"else A="#32CD32"end;B=B.."<text x=\""..59 .."%\" y=\"90.5%\" style=\"fill:#FFFFFF;font-size:12px\">".."Target Speed:".."</text>".."<text x=\""..59+4.5 .."%\" y=\"91%\" style=\"fill:"..A..";font-size:20px\">"..n.."</text>"local E=construct.getMaxSpeed()*3.6-r;if math.abs(E)<500 then A="#FFA500"elseif E<0 then A="#FF0000"else A="#32CD32"end;if radar[1].getConstructKind(q)==5 then B=B.."<text x=\""..59 .."%\" y=\"93.1%\" style=\"fill:#FFFFFF;font-size:12px\">".."   Max Speed:".."</text>".."<text x=\""..59+4.2 .."%\" y=\"93.3%\" style=\"fill:"..A..";font-size:15px\">"..r.."</text>"else B=B.."<text x=\""..59 .."%\" y=\"93.1%\" style=\"fill:#FFFFFF;font-size:12px\">".."   Max Speed:".."</text>".."<text x=\""..59+4.2 .."%\" y=\"93.3%\" style=\"fill:#FFFFFF;font-size:15px\"> Static </text>"end;ammo=t;local F="false"if radar[1].getConstructInfos(q).weapons~=0 then F="true"end;B=B.."<text x=\""..67+0.5 .."%\" y=\"90.5%\" style=\"fill:#FFFFFF;font-size:12px\">".."Weaponised:".."</text>".."<text x=\""..71+0.5 .."%\" y=\"90.5%\" style=\"fill:#FFFFFF;font-size:12px\">"..F.."</text>"B=B.."<text x=\""..67+0.5 .."%\" y=\"93.1%\" style=\"fill:#FFFFFF;font-size:12px\">".."Ammo Typ:".."</text>".."<text x=\""..71+0.5 .."%\" y=\"93.1%\" style=\"fill:#FFFFFF;font-size:12px\">"..ammo.."</text>"if math.abs(h-system.getArkTime())<3 then system.print("Kill of "..ShipTags[q].." - "..radar[1].getConstructName(q)..": "..system.getWaypointFromPlayerPos())D=[[
        				<style>
        					#KillMarker {display:block; position:absolute; top:0; left:0} 
        				</style>
                        </svg>
                        <svg id="KillMarker" height="100%" width="100%">
                            <circle cx="50%" cy="50%" r="5%" stroke="red" stroke-width="1.5%" fill="none" opacity="0.5"/>
                        </svg>
                    ]]end end;if ownShortName~=nil and system.isViewLocked()~=1 then B=B.."<rect x=\""..69.4 .."%\" y=\"84.1%\" rx=\"2\" ry=\"2\" width=\"5.75%\" height=\"4.75%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"B=B.."<text x=\""..70.4 .."%\" y=\"87.1%\" style=\"fill:#FFFFFF;font-size:20px\">ID: "..ownShortName.."</text>"end;if leaderTag~=nil then local G=findIdbyTag(leaderTag)if G~=nil then local H=radar[1].getConstructDistance(G)/1000;if H<=0 or H==nil then B=B.."<rect x=\""..58 .."%\" y=\"86.1%\" rx=\"2\" ry=\"2\" width=\"11.38%\" height=\"2.75%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"B=B.."<text x=\""..58.4 .."%\" y=\"88%\" style=\"fill:#FF0000;font-size:15px\">Leader is out of Range</text>"else if H<100 then A="#32CD32"elseif H<300 then A="#FFA500"else A="#FF0000"end;B=B.."<rect x=\""..58 .."%\" y=\"86.1%\" rx=\"2\" ry=\"2\" width=\"11.38%\" height=\"2.75%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"B=B.."<text x=\""..58.4 .."%\" y=\"88%\" style=\"fill:#FFFFFF;font-size:15px\">Distance to Leader:</text>"if H<100 then B=B.."<text x=\""..66.3 .."%\" y=\"88%\" style=\"fill:"..A..";font-size:15px\">"..round(H,1).."</text>"B=B.."<text x=\""..68 .."%\" y=\"88%\" style=\"fill:#FFFFFF;font-size:15px\">km</text>"else B=B.."<text x=\""..66.3 .."%\" y=\"88%\" style=\"fill:"..A..";font-size:15px\">"..round(H/200,1).."</text>"B=B.."<text x=\""..68 .."%\" y=\"88%\" style=\"fill:#FFFFFF;font-size:15px\">su</text>"end end else B=B.."<rect x=\""..58 .."%\" y=\"86.1%\" rx=\"2\" ry=\"2\" width=\"11.38%\" height=\"2.75%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"B=B.."<text x=\""..58.4 .."%\" y=\"88%\" style=\"fill:#FF0000;font-size:15px\">Leader is out of Range</text>"end end;B=B.."</g>"B=B.."<rect x=\"28.25%\" y=\"91.95%\" rx=\"2\" ry=\"2\" width=\"8.2%\" height=\"6.8%\" style=\"fill:#4682B4;fill-opacity:0.35\" />"if uiShieldActive==1 then colorShield="#FFFFFF"else colorShield="#FF0000"end;if isVenting==0 then colorVenting="#FFFFFF"else colorVenting="#00FF00"end;if shield~=nil then B=B.."<text x=\"28.5%\" y=\"93.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:"..colorShield..";font-size:15px\">".."Shield on/off(Alt+9) </text>".."<text x=\"28.5%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:"..colorVenting..";font-size:15px\">".."Venting (Alt+8)  "..round(shield.getVentingCooldown(),0).." </text>"end;B=B.."<text x=\"28.5%\" y=\"97.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">".."Radar (Alt+3) </text>"B=B.."</svg>"local I,J=pcall(AlarmHud)if not I then J=""end;return B..D..StatsHud()..J end;function ConeHUD()local F=weapon[1]svg=[[ 
                <svg id="StatsHud" height="100%" width="100%" viewBox="0 0 1920 1080">]]local K=F.getOptimalDistance()print(K)if F.getTargetId()>0 then K=radar[1].getConstructDistance(F.getTargetId())end;local L=construct.getWorldPosition()local M=construct.getWorldForward()local N=construct.getWorldOrientationRight()local O=math.tan(F.getOptimalAimingCone())*K;local P=library.getPointOnScreen({L[1]+M[1]*K,L[2]+M[2]*K,L[3]+M[3]*K})local Q=library.getPointOnScreen({L[1]+M[1]*K+N[1]*O,L[2]+M[2]*K+N[2]*O,L[3]+M[3]*K+N[3]*O})if P[1]==0 and P[2]==0 and P[3]==0 then P={-10,-10,-10}Q={-10,-10,-10}end;print(Q)svg=svg.."<circle style=\"fill:#00FF00;opacity:0.1;\" cx=\""..P[1]*1920 .."\" cy=\""..P[2]*1080 .."\" r=\""..0.3*1080 .."\" />"svg=svg.."<circle style=\"fill:#00FF00;opacity:0.1;\" cx=\""..Q[1]*1920 .."\" cy=\""..Q[2]*1080 .."\" r=\""..0.1*1080 .."\" />"return svg.."</svg>"end;function StatsHud()local u=getPlugin("RadarWidget",true,"AQN5B4-@7gSt1W?;")local R=[[
        		<style>
        			#StatsHud {display:block; position:absolute; top:0; left:0} 
        			#StatsHud text {fill:aqua;font-family:Montserrat;fill:#FFFFFF;font-size:12px}
        		</style>
        
                <svg id="StatsHud" height="100%" width="100%" viewBox="0 0 1920 1080">]]R=R.."<rect x=\"76.06%\" y=\"93.95%\" rx=\"2\" ry=\"2\" width=\"15%\" height=\"4.8%\" style=\"fill:#4682B4;fill-opacity:0.35\" />"R=R.."<text x=\"76.6%\" y=\"95.2%\">Type</text>"R=R.."<text x=\"76.6%\" y=\"96.7%\">Hostile</text>"R=R.."<text x=\"76.6%\" y=\"98.2%\">Friendly</text>"R=R.."<text x=\"80.1%\" y=\"95.2%\">L</text>"R=R.."<text x=\"80.1%\" y=\"96.7%\">"..#u.ConstructSort[0][5].L.."</text>"R=R.."<text x=\"80.1%\" y=\"98.2%\">"..#u.ConstructSort[1][5].L.."</text>"R=R.."<text x=\"82.1%\" y=\"95.2%\">M</text>"R=R.."<text x=\"82.1%\" y=\"96.7%\">"..#u.ConstructSort[0][5].M.."</text>"R=R.."<text x=\"82.1%\" y=\"98.2%\">"..#u.ConstructSort[1][5].M.."</text>"R=R.."<text x=\"84.1%\" y=\"95.2%\">S</text>"R=R.."<text x=\"84.1%\" y=\"96.7%\">"..#u.ConstructSort[0][5].S.."</text>"R=R.."<text x=\"84.1%\" y=\"98.2%\">"..#u.ConstructSort[1][5].S.."</text>"R=R.."<text x=\"86.1%\" y=\"95.2%\">XS</text>"R=R.."<text x=\"86.1%\" y=\"96.7%\">"..#u.ConstructSort[0][5].XS.."</text>"R=R.."<text x=\"86.1%\" y=\"98.2%\">"..#u.ConstructSort[1][5].XS.."</text>"local S=u.ConstructSort[1][6]local T=u.ConstructSort[0][6]R=R.."<text x=\"88.1%\" y=\"95.2%\">Station</text>"R=R.."<text x=\"88.1%\" y=\"96.7%\">"..#T.L+#T.M+#T.S+#T.XS.."</text>"R=R.."<text x=\"88.1%\" y=\"98.2%\">"..#S.L+#S.M+#S.S+#S.XS.."</text>"R=R..[[</svg>
        
                ]]return R end;function AlarmHud()local U=0;local V=[[
        		<style>
        			#AlarmHud, #AlarmHud svg {display:block; position:absolute; top:0; left:0} 
        			#AlarmHud #FriendContact line {stroke:#01DF01;opacity:0.4;stroke-width:10%;fill-opacity:0;}
        			#AlarmHud #EnemyContact line {stroke:#FF0000;opacity:0.4;stroke-width:10%;fill-opacity:0;}
        		</style>
        
                <svg id="AlarmHud" height="100%" width="100%" viewBox="0 0 1920 1080">
                <g id="Layer_2">
                <title>Layer 2</title>
                ]]local W=false;if weapon[1]~=nil then if weapon[1].getWidgetData~=nil then data1=json.decode(weapon[1].getWidgetData())W=data1.properties.outOfZone end end;if W==false then if c>0 then if#d>0 then local X=radar[1].getConstructCoreSize(d[1])print("------------")print("New Contact")print(X)print(getPlugin("shortName",true,"AQN5B4-@7gSt1W?;"):getShortName(d[1]).."-"..radar[1].getConstructName(d[1]))print(d[1])print(system.getWaypointFromPlayerPos())table.remove(d,1)end;if radar[1].hasMatchingTransponder(d[1])==1 then system.playSound("HSC/new_radar_friend.mp3")V=V..[[
                        <svg id="FriendContact" x="0%" y="0%">
                        <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_2" y2="0" x2="1920" y1="0" x1="0" fill="none"/>
                        <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_3" y2="1080" x2="0" y1="0" x1="0" fill="none"/>
                        <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_4" y2="1080" x2="1920" y1="0" x1="1920" fill="none"/>
                        <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_5" y2="1080" x2="1920" y1="1080" x1="0" fill="none"/>
                        ]]else system.playSound("HSC/new_radarcontact.mp3")V=V..[[
                            <svg id="EnemyContact" x="0%" y="0%">
                            <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_2" y2="0" x2="1920" y1="0" x1="0" fill="none"/>
                            <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_3" y2="1080" x2="0" y1="0" x1="0" fill="none"/>
                            <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_4" y2="1080" x2="1920" y1="0" x1="1920" fill="none"/>
                            <line stroke-linecap="undefined" stroke-linejoin="undefined" id="svg_5" y2="1080" x2="1920" y1="1080" x1="0" fill="none"/>
                            ]]end;c=c-1 end end;V=V..[[
                </svg>
                ]]return V end;function getMinAmmo()local Y=99;for s,F in ipairs(weapon)do local I=F.getAmmoCount()if I<Y then Y=I end end;local Z=weapon[1].getCycleTime()*Y;local _=Y/weapon[1].getMaxAmmo()if Z<10 and relaod_warning==false then system.playSound("HSC/ammo_relaod.mp3")relaod_warning=true elseif Z>10 and relaod_warning==true then relaod_warning=false end;return _*100,FormatTimeString(Z)end;function FormatTimeString(a0)local a1=0;local a2=0;local a3=0;if a0<60 then a0=math.floor(a0)elseif a0<3600 then a1=math.floor(a0/60)a0=math.floor(a0%60)elseif a0<86400 then a2=math.floor(a0/3600)a1=math.floor(a0%3600/60)else a3=math.floor(a0/86400)a2=math.floor(a0%86400/3600)end;if a3>0 then return a3 .."d "..a2 .."h "elseif a2>0 then return a2 .."h "..a1 .."m "elseif a1>0 then return a1 .."m "..a0 .."s"elseif a0>0 then return a0 .."s"else return"0s"end end;function targetHud()local j=radar[1].getTargetId()local a4=0;local a5=0;local a6=0;local a7=0;local a8=0;local a9=false;local ammo="Precision"uiTarget=false;local aa=nil;for C,ab in ipairs(weapon)do if ab.getHitPoints()>0 then aa=ab;break end end;if aa~=nil and j~=0 and radar[1].isConstructIdentified(j)==1 then local ac=aa.getWidgetData()local s,ad=string.find(ac,[["hitProbability":]])local ae=string.find(ac,[[,]],ad)a4=round(tonumber(string.sub(ac,ad+1,ae-1))*100)a5=round(radar[1].getConstructSpeed(j)*3.6)a7=a5-e;e=a5;a6=radar[1].getConstructDistance(j)a8=round(self:MasstoMaxV(radar[1].getConstructMass(j))*3.6)local af=radar[1].isConstructAbandoned(j)if oldTarget==j then a9=af~=oldTargetStatus end;oldTargetStatus=af;oldTarget=j;uiTarget=true;local s,ad=string.find(ac,[["optimalDistance":]])local ae=string.find(ac,[[,]],ad)local I=tonumber(string.sub(ac,ad+1,ae-1))*1.1;if a6<I then ammo="Heavy"end end;return a4,a5,a7,a6,j,a8,a9,ammo end;function self:MasstoMaxV(ag)ag=ag/1000;local I=6*10^-9*ag^4-3*10^-5*ag^3+0.0573*ag^2-59.933*ag+50430;if ag>2000 then I=20000 end;I=utils.clamp(I,20000,50000)return I/3.6 end;return self
        
        end
        package.preload[packagePrefix.."WeaponWidget"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;self.version=0.9;local c=nil;local weapon=weapon;s=system;u=unit;local c,d;function self:register(e)_ENV=e;if not self:valid(a)then return end;c=getPlugin("WidgetCreator",true,"AQN5B4-@7gSt1W?;")d=getPlugin("RadarWidget",true,"AQN5B4-@7gSt1W?;")if c==nil then return end;register:addAction("unitOnStart","WeaponStart",function()register:addAction("systemOnUpdate","WeaponWidget",function()self:ReWriteWeapon()end)end)end;function self:ReWriteWeapon()for f,g in pairs(c.DataIDs)do local h=weapon[f].getWidgetData()if h~=nil then local i,j=string.find(h,[["ammoName":"]])local i,k=string.find(h,[["]],j+1)if k-j>12 then local l=mysplit(string.sub(h,j,k))l=string.sub(l[2],0,4)..string.sub(l[3],0,3)h=string.sub(h,0,j)..l..string.sub(h,k,#h)end;local i,m=string.find(h,[["constructId":"]])local n=weapon[f].getTargetId()local i,o=string.find(h,[["name":"]],m)if o~=nil then local i,p=string.find(h,[["]],o+1)h=string.sub(h,0,o)..tostring(d.CodeList[n])..string.sub(h,p,#h)end;local i,j=string.find(h,[["name":"]])local i,k=string.find(h,[["]],j+1)if k-j>12 then local l=weapon[f].getLocalId().."  HC:  "..round(weapon[f].getHitProbability()*100,2)h=string.sub(h,0,j)..l..string.sub(h,k,#h)end;s.updateData(g,h)end end end;return self
        
        end
        package.preload[packagePrefix.."ShieldReconfigure"] = function()
           local self={}self.version=0.9;local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return shield~=nil end;function self:register(c)_ENV=c;if shield==nil then return end;register:addAction("OnAbsorbed","ShieldReconfigure",Shieldreconfigure)end;local d={0,0,0,0}function getRes(e,f)local g={0.15,0.15,0.15,0.15}if e[1]>=e[2]and e[1]>=e[3]and e[1]>e[4]then g={f,0,0,0}elseif e[2]>=e[1]and e[2]>=e[3]and e[2]>e[4]then g={0,f,0,0}elseif e[3]>=e[1]and e[3]>=e[2]and e[3]>e[4]then g={0,0,f,0}elseif e[4]>=e[1]and e[4]>=e[2]and e[4]>e[3]then g={0,0,0,f}else system.print("Fehler! Im else...")end;return g end;function Shieldreconfigure()if shield.getResistancesCooldown()==0 then print("Schilde rekonfigurieren!!!")local f=shield.getResistancesPool()local e=shield.getStressRatioRaw()local g=getRes(e,f)if d[1]==g[1]and d[2]==g[2]and d[3]==g[3]and d[4]==g[4]then else if shield.setResistances(g[1],g[2],g[3],g[4])==1 then print("Schilde rekonfiguriert!")d[1]=g[1]d[2]=g[2]d[3]=g[3]d[4]=g[4]else print("Fehler: "..shield.getStressRatioRaw()[1]..", "..shield.getStressRatioRaw()[2]..", "..shield.getStressRatioRaw()[3]..", "..shield.getStressRatioRaw()[4])end end end end;return self
        
        end
        package.preload[packagePrefix.."RadarWidget"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="gunner"end;local radar=radar[1]self.version=0.9;self.viewTags={"hud"}self.Scroll=0;local c,d,e;self.ConstructSort={[0]={[0]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[1]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[2]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[3]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[4]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[5]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[6]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[7]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}}},[1]={[0]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[1]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[2]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[3]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[4]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[5]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[6]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[7]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}}},["dead"]={}}local f=getPlugin("Settings",true)function self:register(g)_ENV=g;if shield~=nil then if shield.getStressRatioRaw()=={0,0,0,0}then shield.setResistances(0.3,0.3,0,0)end end;if not self:valid(a)then return end;d=getPlugin("WidgetCreator",true,"AQN5B4-@7gSt1W?;")e=getPlugin("shortName",true,"AQN5B4-@7gSt1W?;")self.CodeList={}self.IDList={}f:add("SpecialSort",true,"","Sort Core Size first then distance","Radar_Widget")f:add("IdentifiedonTop",true,"","Puts the Identified on Top of the screens","Radar_Widget")CommandHandler=getPlugin("CommandHandler")CommandHandler:AddCommand("hide",function(h)local i=h[2]for j,l in pairs(mysplit(i,","))do l=string.sub(l,0,3)if l=="spa"then l=6 elseif l=="sta"then l=4 elseif l=="dyn"then l=5 else l=string.upper(l)end;f:set(l,false,"Radar_Widget")end end,"hides core sizes: /hide XS,S,M,L,space,dynamic,static")CommandHandler:AddCommand("show",function(h)local i=h[2]for j,l in pairs(mysplit(i,","))do l=string.sub(l,0,3)if l=="spa"then l=6 elseif l=="sta"then l=4 elseif l=="dyn"then l=5 else l=string.upper(l)f:set(l,true,"Radar_Widget_Size")return end;f:set(l,true,"Radar_Widget_Type")end end,"shows core sizes: /show XS,S,M,L,space,dynamic,static")CommandHandler:AddCommand("t",function(h)self.tosearch=string.upper(h[2])self.SpecialRadarMode="Search"end,"show the target: /t TW4")CommandHandler:AddCommand("togdead",function(h)f:set("ShowDead",not f:get("ShowDead","Radar_Widget"),"Radar_Widget")end,"toggles if dead cores are shown")CommandHandler:AddCommand("settags",function(j,h)local h=mysplit(string.sub(h,2,#h))local i=h[2]local m={}for j,n in pairs(mysplit(i,","))do table.insert(m,n)end;if transponder~=nil then transponder.activate()transponder.setTags(m)end end,"sets the transponder Tags")CommandHandler:AddCommand("gettags",function()if transponder~=nil then for j,n in pairs(transponder.getTags())do print(n)end end end,"gets the transponder Tags")coRadar=coroutine.create(function()self:RadarWidget()end)self.RadarMode="Hostile"f:add("ShowDead",true,"","if dead are to be shown","Radar_Widget")f:add("XS",true,"","if XS are to be shown","Radar_Widget_Size")f:add("S",true,"","if S are to be shown","Radar_Widget_Size")f:add("M",true,"","if M are to be shown","Radar_Widget_Size")f:add("L",true,"","if L are to be shown","Radar_Widget_Size")f:add("XL",true,"","if XL are to be shown","Radar_Widget_Size")f:add(1,true,"","if Universes are to be shown","Radar_Widget_Type")f:add(2,true,"","if Planets are to be shown","Radar_Widget_Type")f:add(3,true,"","if Asteroids are to be shown","Radar_Widget_Type")f:add(4,true,"","if Statics are to be shown","Radar_Widget_Type")f:add(5,true,"","if Dynamics are to be shown","Radar_Widget_Type")f:add(6,true,"","if Spaces are to be shown","Radar_Widget_Type")f:add(7,true,"","if Aliens are to be shown","Radar_Widget_Type")register:addAction("lshiftStart","RadarScroll",function()self.Scroll=self.Scroll+1 end)register:addAction("laltStart","RadarScroll",function()self.Scroll=self.Scroll-1;if self.Scroll<0 then self.Scroll=0 end end)register:addAction("systemOnUpdate","RadarWidget",function()if coroutine.status(coRadar)=="dead"then coRadar=coroutine.create(function()self:RadarWidget()end)else coroutine.resume(coRadar)end end)addTimer("Trans",2,self.AutoTrans)register:addAction("option3Start","RadarSwitch",function()self:switchRadar()end)local o=getPlugin("screener",true)if o~=nil then o:registerDefaultScreen("mainScreenThird","Radar")o:registerDefaultScreen("mainScreenFirst","Radar")o:addView("Radar",self)end end;local p=system;local q=unit;function self:switchRadar()if self.SpecialRadarMode~=nil then self.SpecialRadarMode=nil elseif self.RadarMode=="Hostile"then self.RadarMode="Friendly"elseif self.RadarMode=="Friendly"then self.RadarMode="Verified"elseif self.RadarMode=="Verified"then self.RadarMode="External"local r=getPlugin("Targets",true,"",true)if r==nil then self.RadarMode="Hostile"end elseif self.RadarMode=="External"then self.RadarMode="Hostile"else self.RadarMode="Hostile"end end;function self:AddShip(s,t,u,k)k=k or 3;u=u or""local v,l=getSubJson(t,tostring(s))if v~=nil then v=AddUnique(v,s,u)l=math.floor(l/150)if v==nil then return end;c[k][l]=v end end;function AddUnique(w,s,u)local x=string.find(w,[["name":"]])+#[["name":"]]if not f:get("ShowDead","Radar_Widget")and dead then return end;return string.sub(w,0,x-1)..tostring(self.CodeList[s]).." - "..u..string.sub(w,x,#w)end;function getSubJson(w,s)if radar.hasMatchingTransponder(s)==1 then return getSubJF(w,s)else return getSubJH(w,s)end end;function getSubJH(w,s)local y=string.find(w,s..[[","]])if y==nil then return end;local z=string.find(w,[["targetThreatState"]],y+100)local A=string.find(w,[[}]],z)return string.sub(w,y-16,A),y end;function getSubJF(w,s)local y=string.find(w,s..[[","]])if y==nil then return end;local j,A=string.find(w,[[)"}]],y+100)return string.sub(w,y-16,A),y end;function self:RadarWidget()local B={[0]={[0]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[1]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[2]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[3]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[4]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[5]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[6]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[7]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}}},[1]={[0]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[1]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[2]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[3]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[4]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[5]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[6]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}},[7]={["XS"]={},["S"]={},["M"]={},["L"]={},["XL"]={}}},["dead"]={}}local C=radar.getConstructIds()local D=radar.getWidgetData()c={[1]={},[2]={},[3]={},[4]={},[5]={},[6]={}}local E=-1;local F=0;for j,G in pairs(C)do F=F+1;local H=radar.hasMatchingTransponder(G)local dead=radar.isConstructAbandoned(G)==1;local I=radar.getConstructCoreSize(G)local J=radar.getConstructKind(G)if J==-1 then goto K end;if J==7 then E=G end;if dead then table.insert(B["dead"],G)else table.insert(B[H][J][I],G)end;if self.CodeList[G]==nil then local L=e:getShortName(G)self.CodeList[G]=L;self.IDList[L]=G end;if(self.RadarMode=="Hostile"or self.RadarMode=="Friendly")and self.SpecialRadarMode==nil then if self.RadarMode=="Friendly"then H=H-1 end;if H==0 and f:get(I,"Radar_Widget_Size")and f:get(J,"Radar_Widget_Type")then local u=""if f:get("SpecialSort","Radar_Widget")then if I=="XL"then k=2 elseif I=="L"then k=3 elseif I=="M"then k=4 elseif I=="S"then k=5 elseif I=="XS"then k=6 end end;if f:get("IdentifiedonTop","Radar_Widget")then if radar.isConstructIdentified(G)==1 then k=1 end end;if dead then u="dead - "end;self:AddShip(G,D,u,k)end end::K::if F>200 then F=0;coroutine.yield()end end;if self.SpecialRadarMode==nil then local M,N=pcall(self.RadarModes[self.RadarMode],D)else pcall(self.RadarModes[self.SpecialRadarMode],D)end;local O={[1]={},[2]={},[3]={},[4]={},[5]={},[6]={}}local P=0;for k,Q in pairs(c)do for L=0,math.ceil(#D/150),1 do P=P+1;if Q[L]~=nil then O[k][#O[k]+1]=Q[L]end;if P>5000 then P=0;coroutine.yield()end end end;local R=0;for j,Q in pairs(O)do R=R+#Q end;self.ConsCount=R;local S={}for k,Q in pairs(O)do for j,T in pairs(Q)do table.insert(S,T)end end;if self.Scroll>#S-4 then self.Scroll=#S-4 end;if self.Scroll<0 then self.Scroll=0 end;for L=1,self.Scroll,1 do table.remove(S,1)end;local U=table.concat(S,",")..","local V=string.find(D,[[],]])local W=string.sub(D,V,#D)local j,X=string.find(W,[["errorMessage":"",]])local j,F=string.find(W,[["worksInSpace":]])local Y=string.find(W,[[e]],F)+1;local j,Z=string.find(W,[["worksInAtmosphere":]])local _=string.find(W,[[e]],Z)+1;local z=self.SpecialRadarMode or self.RadarMode;if X~=nil then W=string.sub(W,0,X-2)..z.." Scroll: "..self.Scroll..string.sub(W,X-1,Z).."false"..string.sub(W,_,F).."false"..string.sub(W,Y,#W)end;Output=[[{"constructsList":[]]..string.sub(U,0,#U-1)..W;p.updateData(d.RadarDataID,Output)self.AlienCore=E;self.ConstructSort=B end;self.RadarModes={["External"]=function(D)local r=getPlugin("Targets",true)if r~=nil then for j,l in pairs(r)do local s=self.IDList[l.shortid[1]]self:AddShip(s,D)end;unloadPlugin("Targets")end end,["Verified"]=function(D)local r=radar.getIdentifiedConstructIds()for j,s in pairs(r)do self:AddShip(s,D)end end,["Search"]=function(D)if self.tosearch~=nil then self:AddShip(self.IDList[self.tosearch],D)end end}function self:AddRadarMode(a0,a1)self.RadarModes[a0]=a1 end;f:add("autoTrans","off",{"string",{"auto","Hyp","off"}},"if Transponder should auto Update","Transponder")function self:AutoTrans()local a2="Transponder"if f:get("autoTrans",a2)=="auto"then local a3=getPlugin(a2,true,"",true)if a3~=nil then local a4={}local a5=1;for j,l in pairs(a3)do a4[a5]=l.transponder[1]a5=a5+1 end;transponder.setTags(a4)unloadPlugin(a2)end end end;function self:setScreen()local a6;local a7=weapon[1]local a8,a9;if a7~=nil then a8=a7.getMaxDistance()/400000;a9=a7.getOptimalDistance()/400000 end;local aa=radar.getIdentifyRanges()[4]or 100000;local ab=aa/400000;if ab>1 then ab=1 end;a6=[[
                <head>
                    <style>
                        body {margin: 0}
                        svg {display:block; position:absolute; top:0; left:0} 
                    </style>
                </head>
                <body>
                <svg height="100%" width="100%" viewBox="0 0 1920 1080">
                <rect x="1898" y="333" rx="3" ry="3" width="26" height="670" style="fill:#4682B4;fill-opacity:0.35" />
        
                <rect x="1901" y="337" rx="3" ry="3" width="3" height="662" style="fill:#ffffff;fill-opacity:0.5" />
            ]]if a9~=nil then a6=a6 ..[[
                    <rect x="1903" y="]]..round(337+(1-a8)*662)..[[" width="2" height="]]..round((a8-a9)*662)..[[" style="fill:#ff0000;fill-opacity:0.8" />
                    <rect x="1903" y="]]..round(337+(1-a9)*662)..[[" width="2" height="]]..round(a9*662)..[[" style="fill:#00ff00;fill-opacity:0.8" />
                    <rect x="1899" y="]]..round(337+(1-ab)*662)..[[" width="8" height="3" style="fill:#000000;fill-opacity:1" />]]for j,s in pairs(radar.getIdentifiedConstructIds())do local ac=radar.getConstructDistance(s)/400000;a6=a6 ..[[<text x="1904" y="]]..round(337+(1-ac)*662)+3 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#000000;font-size:10px;stroke:#000000;stroke-width:1px">]]..self.CodeList[s]..[[</text>]]end;local s=radar.getTargetId()if s>0 then local ac=radar.getConstructDistance(s)/400000;a6=a6 ..[[<text x="1904" y="]]..round(337+(1-ac)*662)+3 ..[[" font-family="Super Sans" text-anchor="start" style="fill:#ff00ff;font-size:10px;stroke:#000000;stroke-width:1px">]]..self.CodeList[s]..[[</text>]]end end;local ad=0;if#weapon<4 then ad=250 end;local function L(N)if N then return"00ff00"else return"ff0000"end end;a6=a6 ..[[
                <rect x="1530" y="]]..567+ad..[[" rx="3" ry="3" width="145" height="125" style="fill:#4682B4;fill-opacity:0.35" />
                <text x="1540" y="]]..585+ad..[[" font-family="Super Sans" text-anchor="start" style="fill:#ffffff;font-size:18px;stroke:#000000;stroke-width:1px">Type</text>
                <text x="1540" y="]]..605+ad..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..L(f:get(4,"Radar_Widget_Type"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Static</text>
                <text x="1540" y="]]..625+ad..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..L(f:get(5,"Radar_Widget_Type"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Dynamic</text>
                <text x="1540" y="]]..645+ad..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..L(f:get(6,"Radar_Widget_Type"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Space</text>
                <text x="1540" y="]]..665+ad..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..L(f:get(7,"Radar_Widget_Type"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Alien</text>
                <text x="1540" y="]]..685+ad..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..L(f:get("ShowDead","Radar_Widget"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">Dead</text>
                
                <text x="1620" y="]]..585+ad..[[" font-family="Super Sans" text-anchor="start" style="fill:#ffffff;font-size:18px;stroke:#000000;stroke-width:1px">Size</text>
                <text x="1620" y="]]..605+ad..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..L(f:get("XL","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">XL</text>
                <text x="1620" y="]]..625+ad..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..L(f:get("L","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">L</text>
                <text x="1620" y="]]..645+ad..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..L(f:get("M","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">M</text>
                <text x="1620" y="]]..665+ad..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..L(f:get("S","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">S</text>
                <text x="1620" y="]]..685+ad..[[" font-family="Super Sans" text-anchor="start" style="fill:#]]..L(f:get("XS","Radar_Widget_Size"))..[[;font-size:15px;stroke:#000000;stroke-width:1px">XS</text>]]return a6 .."</svg>"end;return self
        
        end
        package.preload[packagePrefix.."Settings"] = function()
           self={}local a=getPlugin("config")self.version=0.9;self.loadPrio=5;self.Default={}self.Range={}self.Description={}function self:add(b,c,d,e,f)if b==nil or c==nil then return"missing Infos"end;e=e or""f=f or"Standard"if d==nil or type(d)~="table"then local g=type(c)if g=="boolean"then d={"boolean"}elseif g=="number"then d={"number",1,10,1}else return"missing Range Infos"end end;if self.Default[f]==nil then self.Default[f]={}self.Range[f]={}self.Description[f]={}end;self.Default[f][b]=c;self.Range[f][b]=d;self.Description[f][b]=e end;function self:rem(b,f)f=f or"Standard"self.Default[f][b]=nil;self.Range[f][b]=nil;self.Description[f][b]=nil end;function self:set(b,h,f)f=f or"Standard"local i=self.Range[f][b]local g=type(h)if i[1]~=g then return end;if g=="number"then h=utils.clamp(h,i[2],i[3])h=(h-i[2])/i[4]h=round(h)h=h*i[4]+i[2]elseif g=="string"then if not inTable(i[2],h)then return end end;a:set(f..b,h,self.Default[f][b])end;function self:get(b,f)f=f or"Standard"return a:get(f..b,self.Default[f][b])end;function self:register(j)_ENV=j end;return self
        
        end
        package.preload[packagePrefix.."CommandHandler"] = function()
           local self={}function self:register(a)_ENV=a;local function b(c)text=string.lower(c)local d=string.sub(text,1,1)if d~=self.prefix then return end;local e=mysplit(string.sub(text,2,#text))local f,g=pcall(CommandList[1][d][1][e[1]],e,c)if not f then print(g)end end;register:addAction("systemOnInputText","CommandHandler",b)end;self.version=0.9;self.loadPrio=5;if unitType=="gunner"then self.prefix="/"elseif unitType=="remote"then self.prefix="!"else self.prefix="/"end;CommandList={{[self.prefix]={{["help"]=function(h)local i=h[2]if i==nil then for j,k in pairs(CommandList[1][self.prefix][2])do print(j..":  "..k)end end end},{["help"]="use this to list all commands"}}},{[self.prefix]="basic commands from the"..unitType or""}}function self:AddCommand(l,m,n)CommandList[1][self.prefix][1][l]=m;CommandList[1][self.prefix][2][l]=n or""end;return self
        
        end
        package.preload[packagePrefix.."screener"] = function()
           local self={}local a=false;local b=false;self.loadPrio=10;local c=getPlugin("config")local d={menuitmwidth=1/8,menuitmheight=1/16,offsetx=0,offsety=0,width=1*1/3,height=1*1/3,tag="screen",totalWidth=system.getScreenHeight(),totalHeight=system.getScreenWidth(),perspective="third",parent="mainScreenThird"}local e={}function self:hotkeyState(f)if self.pressedRegister[f]==1 then return 1 end;return 0 end;function self:startHotkeyPressed(f)self.pressedRegister[f]=1 end;function self:endHotkeyPressed(f)self.pressedRegister[f]=nil end;function self:freeMouse(g)if a and g then print("setupMode off")a=false end;b=g;system.lockView(b)end;function self:addButton(h,i,j,k,l,m,n)end;function self:addScreen(o,p)curr={}for q,r in pairs(d)do if p[q]==nil then curr[q]=r else curr[q]=p[q]end end;curr["name"]=o;e[o]=curr end;function self:getPerspectiveList()return{"first","third"}end;function self:getPerspective()local s=system.getCameraMode()if s==1 then return"first"else return"third"end end;local t={}function self:addView(u,v)assert(type(u)=="string","name isn't a string, type was "..type(u))assert(type(v)=="table",u..": viewObj isn't a table, type was "..type(v))t[u]=v;register:callAction("registerAddView",u)end;function self:removeView(u)if t[u]==nil then return false end;t[u]=nil;register:callAction("registerRemoveView",u)end;function self:getViewList(w)local x={}for y,z in pairs(t)do if z==nil or z.viewTags==nil then system.print("No view tags: '"..y)else for A,B in pairs(z.viewTags)do if w==nil or B==w then table.insert(x,y)end end end end;table.sort(x)return x end;function self:renderView(u,screen,...)if t[u]==nil then system.print("Render of view '"..(u or"???").."' failed, because it there is no such view registered!","")end;local v=t[u]if v.setScreen~=nil then local C,D=pcall(v.setScreen,v,screen,...)if C then return D else system.print(u.." in setScreen:",D)return nil end else system.print(u.." render has no function 'setScreen'")end end;function self:renderViewRequireRerender(u,screen,...)if self.viewRegister[u]==nil then system.print("Rerender request of view '"..(u or"???").."' failed, because it there is no such view registered!","")end;local v=t[u]if v.requireRerender~=nil then local C,D=pcall(v.requireRerender,v,screen,...)if C then return D else system.print(u.." in renderViewRequireRerender:",D)return nil end end;return true end;function self:actionToHtml(E,...)local F,G=register:callAction(E,...),""for A,r in pairs(F)do if r then G=G..r end end;return G end;function screenObj(u)return e[u]end;local H=nil;function self:colors()if H==nil or H.hsl~=modeColors[mode]then if modeColors[mode]==nil then modeColors[mode]=290 end;local I=math.max(0,math.min(modeColors[mode],360))H={hsl=I,sqLeftHsl=I+270.0,sqTwoRight=I+180.0,warn=5}if H.sqLeftHsl>360 then H.sqLeftHsl=H.sqLeftHsl-360 end;if H.sqTwoRight>360 then H.sqTwoRight=H.sqTwoRight-360 end;if H.hsl<45 or H.hsl>315 then H.warn=H.sqTwoRight end end;return H end;function drawAllScreensCss()local J=self:colors()local K=[[
                                    * { font-family:Montserrat }
                                    body { margin: 0}
                                    svg {display:block; position:absolute; top:auto; left:auto}
                                    svg svg { overflow: visible }
                                    .screenSvg { position: relative; margin: auto 0; }
                                    .screen { margin:0; padding:0; position: absolute; left: 0; top: 0; border: 2px solid transparent }
        							.lfill { fill:hsl(]]..J.hsl..[[, 93.6%, 56.9%)}
                                    .sfill { fill:hsl(]]..J.hsl..[[, 100%, 50%) }
        							.lstroke { stroke:hsl(]]..J.hsl..[[, 93.6%, 56.9%)}
                                    .sstroke { stroke:hsl(]]..J.hsl..[[, 100%, 50%) }
        							.bstroke { stroke:black }
                                ]]if a then K=K..[[
        							.screen { border: 2px solid hsl(]]..J.hsl..[[, 93.6%, 56.9%) }
        							.menu { position: absolute; right: 0; top: 0; width: 100%; height: 3.125%; overflow: hidden; z-index: 1000 }
        							.mItm { z-index:inherit; background-color:hsl(]]..J.hsl..[[, 100%, 50%);position: relative; float: right; height: 100%; width: calc(100% / 24); border: 2px solid hsl(]]..J.hsl..[[, 93.6%, 56.9%); overflow: hidden; color: white;display: flex;align-items: center;justify-content: center; }
        						]]end;local s=self:getPerspective()for u,A in pairs(e)do screen=screenObj(u)if s==screen.perspective then K=K..[[
        								#]]..u..[[ { width: ]]..screen.width*100 ..[[%; height: ]]..screen.height*100 ..[[%; top: ]]..screen.offsety*100 ..[[%; left: ]]..screen.offsetx*100 ..[[% }
        			]]if a then K=K..[[
        								#]]..u..[[ > .menu { height: ]]..screen.menuitmheight*100 ..[[% }
        								#]]..u..[[ > .menu .mItm { width: ]]..screen.menuitmwidth*100 ..[[% }
        				]]for L,h in pairs(self:getViewList(screen.tag))do local M="scval_"..u.."_"..h;local curr=c:get(M,0)if curr==1 then K=K..[[
        								#]]..u..[[ > .menu .mItm.n]]..L..[[ { background-color:hsl(]]..J.sqTwoRight..[[, 100%, 50%) }
        						]]end end end end end;return K end;register:addAction("staticCssStyle","drawAllScreensCss",drawAllScreensCss)local N={}function drawAllScreens()local O=0;local P,Q,R=self:actionToHtml("staticCssStyle"),"",""local S,T,U,screens={},{},{},{}local s=self:getPerspective()if a then for L,u in pairs(self:getViewList("screen"))do Q=Q..'<div class="mItm text n'..L..'">'..u.."</div>"end;Q=[[
        			<div class="menu screentag">
        				]]..Q..[[
        			</div>
        		]]end;for u,A in pairs(e)do screen=screenObj(u)if s==screen.perspective then if screen.tag=="screen"then if T[screen.parent]==nil then T[screen.parent]=""end;T[screen.parent]=T[screen.parent]..[[
                                           <div id="]]..u..[[" class="screen">
                                            ]]..Q..[[
                                            ]]..self:actionToHtml(u.."Html")..[[
                                           </div>]]end end end;if a then Q=""for L,u in pairs(self:getViewList("hud"))do Q=Q..'<div class="mItm text n'..L..'">'..u.."</div>"end;Q=[[
        			<div class="menu hudtag">
        				]]..Q..[[
        			</div>
        		]]end;for u,A in pairs(e)do screen=screenObj(u)if s==screen.perspective then if screen.tag=="hud"then if U[screen.parent]==nil then U[screen.parent]=""end;if T[u]==nil then T[u]=""end;U[screen.parent]=U[screen.parent]..[[
        									   <div id="]]..u..[[" class="screen">
        										]]..Q..[[
        										]]..self:actionToHtml(u.."Html")..[[
        										]]..T[u]..[[
        									   </div>]]end end end;local V=""if a or b then local W=system.getMousePosX()/d.totalWidth;local X=system.getMousePosY()/d.totalHeight;V=[[
        			<svg style="z-index: 10000;position: absolute;left:]]..W*100 ..[[%;top:]]..X*100 ..[[%" height="20px" width="20px" viewBox="0 0 512 512">
        				<path class="sfill bstroke" d="M434.214,344.448L92.881,3.115c-3.051-3.051-7.616-3.947-11.627-2.304c-3.989,1.643-6.592,5.547-6.592,9.856v490.667
        					c0,4.459,2.773,8.448,6.976,10.005c1.195,0.448,2.453,0.661,3.691,0.661c3.051,0,6.037-1.323,8.085-3.733l124.821-145.6h208.427
        					c4.309,0,8.213-2.603,9.856-6.592C438.182,352.085,437.265,347.52,434.214,344.448z"/>
        			</svg>
        			]]end;for u,G in pairs(U)do V=V..G end;local Y=[[
                                    <head>
                                        <style>
                                            ]]..P..[[
                                        </style>
                                    </head>
                                    <body>
                                        ]]..V..[[
                                    </body>
                                ]]if debugscreen~=nil then debugscreen.setHTML(Y)end;if#screens>0 then for Z,_ in pairs(screens)do local u,a0="screen"..Z,nil;local screen=screenObj(u)for A,h in pairs(self:getViewList(screen.tag))do local a1=u.."_"..h;local M="scval_"..a1;local curr=c:get(M,0)if curr==1 then if self:renderViewRequireRerender(h,_.getMouseX(),_.getMouseY(),_.getMouseState()==1,"real"..a1)then if a0==nil then a0=""end;a0=a0 ..self:renderView(h,_.getMouseX(),_.getMouseY(),_.getMouseState()==1,"real"..a1)end end end;if a0~=nil then _.setHTML(a0)end end end;system.setScreen(Y)end;function self:triggerViewMouseEvent(a2,u,j,k,a3,...)if t[u]==nil then system.print("Render of view '"..(u or"???").."' failed, because it there is no such view registered!","")end;local v=t[u]local a4=v.onMouseUp;if a2==false then a4=v.onMouseDown end;if a4 then local C,D=pcall(a4,v,j,k,a3,...)if C then return D else system.print(u..": error in triggerViewMouseEvent:",a2,D)return nil end else end end;function self:registerDefaultScreen(o,h)local M="scval_"..o.."_"..h;if devMode then print("registering default view "..M)end;c:set(M,1,0)end;function self:register(a5)_ENV=a5;d.totalWidth=system.getScreenWidth()d.totalHeight=system.getScreenHeight()function setActionHtml(o,h)local screen=screenObj(o)local a1=o.."_"..h;local M="scval_"..a1;local curr=c:get(M,0)if curr==1 then if devMode then print("register setActionHtml for "..M)end;register:addAction(o.."Html",a1 .."Html",function()local W=(system.getMousePosX()/d.totalWidth-screen.offsetx)/screen.width;local X=(system.getMousePosY()/d.totalHeight-screen.offsety)/screen.height;if a==false and b==false then W,X=-1,-1 end;return self:renderView(h,W,X,false,a1)end)else register:removeAction(o.."Html",a1 .."Html")end end;function realMouseEvent(a2,screen,a6,j,k)local o=screen.name;for A,_ in pairs(screens)do if _.getId()==a6.getId()then for A,h in pairs(register:getViewList(screen.tag))do local a1=o.."_"..h;local M="scval_"..a1;local curr=c:get(M,0)if curr==1 then self:triggerViewMouseEvent(a2,h,j,k,"real"..a1)end end;return true end end;return false end;function virtualMouseEvent(a2,screen,a7,a8,a9)local s,o=self:getPerspective(),screen.name;local aa,ab=screen.width,screen.height;local ac=screen.menuitmwidth*screen.width;local ad=screen.menuitmheight*screen.height;local ae=a7-screen.offsetx;local af=a8-screen.offsety;if ae>=0 and ae<aa then if af>=0 and af<ab then if not b and af<ad then if a2 then for ag,h in pairs(self:getViewList(screen.tag))do local ah,ai=ag*ac,(ag-1)*ac;if ae>aa-ah and ae<=aa-ai then local a1=o.."_"..h;local M="scval_"..a1;local curr=c:get(M,0)if curr==1 then c:set(M,0,0)else c:set(M,1,0)end;setActionHtml(o,h)end end end else for A,h in pairs(self:getViewList(screen.tag))do local a1=o.."_"..h;local M="scval_"..a1;local curr=c:get(M,0)if curr==1 then self:triggerViewMouseEvent(a2,h,ae/aa,af/ab,a1)end end end;if devMode then local a4="DOWN"if a2 then a4="UP"end;print("Event "..a4 .."Screen "..o.." Type "..a9 .." Relative x "..ae.." Relative y "..af)end;return true end end;return false end;function tableLength(aj)assert(type(aj)=='table','bad parameter #1: must be table')local ak=0;for A in pairs(aj)do ak=ak+1 end;return ak end;function initAllScreens()screenObjCache={}if devMode then print("reinitialize all "..tableLength(e).." screens")end;for u,A in pairs(e)do local screen=screenObj(u)for A,h in pairs(self:getViewList(screen.tag))do setActionHtml(u,h)end;register:addAction("screenMouseUp","realScreenMouseUp"..u,function(a6,j,k)realMouseEvent(true,screen,a6,j,k)end)register:addAction("screenMouseDown","realScreenMouseUp"..u,function(a6,j,k)realMouseEvent(false,screen,a6,j,k)end)register:addAction("mouseUp","screenMouseUp"..u,function(a7,a8,a9)if self:getPerspective()==screen.perspective then virtualMouseEvent(true,screen,a7,a8,a9)end end)register:addAction("mouseDown","screenMouseDown"..u,function(a7,a8,a9)if self:getPerspective()==screen.perspective then virtualMouseEvent(false,screen,a7,a8,a9)end end)end end;self:addScreen("mainScreenFirst",{menuitmwidth=1/24,menuitmheight=1/32,width=1,height=1,tag="hud",perspective="first"})self:addScreen("mainScreenThird",{menuitmwidth=1/24,menuitmheight=1/32,width=1,height=1,tag="hud"})self:addScreen("screen1first",{offsetx=0,perspective="first",parent="mainScreenFirst"})self:addScreen("screen1third",{offsetx=0})self:addScreen("screen2first",{offsetx=0,offsety=1*1/3,perspective="first",parent="mainScreenFirst"})self:addScreen("screen2third",{offsetx=0,offsety=1*1/3})self:addScreen("screen3first",{offsetx=1*0.63,offsety=1*0.25,width=1*0.23,height=1*0.23,perspective="first",parent="mainScreenFirst"})self:addScreen("screen3third",{offsetx=1*0.63,offsety=1*0.25,width=1*0.23,height=1*0.23})self:addScreen("screen4first",{offsetx=1*0.56,offsety=0,width=1*0.20,height=1*0.25,perspective="first",parent="mainScreenFirst"})self:addScreen("screen4third",{offsetx=1*0.56,offsety=0,width=1*0.20,height=1*0.25})register:addAction("registerAddView","viewRegisterWatcher",initAllScreens)initAllScreens()register:addAction("unitOnStart","Screener",function()register:addAction("systemOnUpdate","drawAllScreens",function()if databaseHasChild~=true and screenToggle and(executeTotal==1 or executeTotal%renderEveryXFrames==0)then drawAllScreens()end end)register:addAction("leftmouseStart","mouseStartTracker",function()if a or b then local W=system.getMousePosX()/d.totalWidth;local X=system.getMousePosY()/d.totalHeight;register:callAction("mouseDown",W,X,"hud")return true else return false end end)register:addAction("leftmouseStop","mouseStopTracker",function()if a or b then local W=system.getMousePosX()/d.totalWidth;local X=system.getMousePosY()/d.totalHeight;register:callAction("mouseUp",W,X,"hud")return true else return false end end)end)local al=getPlugin("CommandHandler")al:AddCommand("setup",function(am)a=not a;if a then system.lockView(true)print("setupMode on")else system.lockView(false)print("setupMode off")end end,"Activate/Deactivate screener setup mode")local an=false;al:AddCommand("mouse",function(am)an=not an;self:freeMouse(an)if an then print("mouse on")else print("mouse off")end end,"Mouse on/off")end;return self
        
        end
        package.preload[packagePrefix.."slots"] = function()
           local self={}self.slots=nil;local a={control=true,library=true,system=true,unit=true,player=true,construct=true}function self:calcSlots()self.slots={}local b=unit or{}for c,d in pairs(b)do if a[c]==nil then if type(c)=="string"and type(d)=="table"and type(d.export)=="table"then self.slots[c]=d end end end;return self.slots end;function self:getSlots()if self.slots==nil then self:calcSlots()end;return self.slots end;self.elementsIdList=nil;function self:calcElementList()if core==nil then return end;self.elementsIdList=core.getElementIdList()end;function self:getElementList()if self.elementsIdList==nil then self:calcElementList()end;return self.elementsIdList end;local e={RemoteControlUnit="remote",CockpitHovercraftUnit="command",PVPSeatUnit="gunner",CockpitCommandmentUnit="command",CockpitFighterUnit="command"}local f={Weapo="weapon",Shiel="shield",Radar="radar",CoreU="core"}local g={AntiGravityGeneratorUnit="antigrav",WarpDriveUnit="warpdrive",DataBankUnit="databases",ReceiverUnit="receiver",EmitterUnit="emitter",ScreenUnit="screens",CombatDefense="transponder",AtmoFuelContainer="atmofueltank",SpaceFuelContainer="spacefueltank",RocketFuelContainer="rocketfueltank",CounterUnit="counter",laserDetector="laser",SpaceEngine="engine"}local h={weapon=true,databases=true,screens=true,atmofueltank=true,spacefueltank=true,rocketfueltank=true,radar=true,engine=true}local i={core={"onStressChanged(stress)"},container={"onContentUpdate()"},industry={"onStarted(id,quantity)","onCompleted(id,quantity)","onStatusChanged(status)","onBankUpdate()"},radar={"onEnter(id)","onLeave(id)","onIdentified(id)"},screens={"mouseDown(x,y)","mouseUp(x,y)","onOutputChanged(output)"},laser={"onHit()","onLoss()"},receiver={"onReceived(channel,message)"},shield={"onToggled(active)","onAbsorbed(hitpoints,rawHitpoints)","onVentin(active,restoredHitpoints)","onDown()","onRestored()"},weapon={"onReload(ammoId)","onReloaded(ammoId)","onMissed(targetId)","onDestroyed(targetId)","onElementDestroyed(targetId,itemId)","onHit(targetId,damage)"}}local function j(k)for l,m in ipairs(k)do local n,o=m:match("^([^(]+)%((.*)%)")local p={}for q in o:gmatch("[^%s,]+")do table.insert(p,q)end;for r,s in ipairs(p)do print(string.format("* Slot name %q has options %q.",n,s))end;local t=map(p,function()return"*"end)for r,s in ipairs(t)do print(string.format("* Slot name %q has options %q.",n,s))end end end;function self:getClassType(u)local type;if g[u]~=nil then type=g[u]else local v=string.sub(u,0,5)if f[v]~=nil then type=f[v]end end;return type end;function self:register(w)_ENV=w;for type,r in pairs(h)do _ENV[type]={}end;for r,x in pairs(self:getSlots())do local u=x.getClass()local type=self:getClassType(u)if type==nil then system.print("Unrecognized Type: "..u)else if h[type]==nil then _ENV[type]=x else table.insert(_ENV[type],x)end end end;function compare(y,z)if y~=nil and y.getLocalId and z~=nil and z.getLocalId then return y.getLocalId()<z.getLocalId()end;return nil end;for type,r in pairs(h)do if#_ENV[type]>1 then table.sort(_ENV[type],compare)end end;if#_ENV["databases"]>0 then local A=getPlugin("bankraid",true)if A~=nil then _ENV["database"]=A:new(_ENV["databases"])else _ENV["database"]=_ENV["databases"][1]end end;if _ENV["unitType"]==nil or _ENV["unitType"]==""then if e[unit.getClass()]~=nil then _ENV["unitType"]=e[unit.getClass()]else system.print("Unrecognized unitTypeClass: "..unit.getClass())end end;register:addAction("antigravityStart","antigravityStart",function()if antigrav~=nil then antigrav.toggle()end end)register:addAction("systemOnUpdate","frameCounter",function()if executeTotal==nil then executeTotal=0 end;if executeSet==nil then executeSet=0 end;executeTotal=executeTotal+1;executeSet=executeSet+1;local B=system.getArkTime()if B-executeTime>1 then executeLastFrames=executeSet;executeSet=1;executeTime=B;local C=false;if C then system.print("Frames: "..executeLastFrames)end end end)register:addAction("systemOnActionStart","systemActionStartAlias",function(D,system)register:callAction(D.."Start",system)register:startHotkeyPressed(D)end)register:addAction("systemOnActionStop","systemActionStopAlias",function(D,system)register:callAction(D.."Stop",system)register:endHotkeyPressed(D)end)register:addAction("systemOnActionLoop","systemActionLoopAlias",function(D,system)register:callAction(D.."Loop",system)end)end;return self
        
        end
        package.preload[packagePrefix.."register"] = function()
           local self={}self.functionRegister={}self.overwriteRegister={}self.overwriteOrder={}self.viewRegister={}self.pressedRegister={}function self:hotkeyState(a)if self.pressedRegister[a]==1 then return 1 end;return 0 end;function self:startHotkeyPressed(a)self.pressedRegister[a]=1 end;function self:endHotkeyPressed(a)self.pressedRegister[a]=nil end;self.switches={}function self:addSwitch(b,c)assert(type(b)=="string","name isn't a string, type was "..type(b))assert(type(c)=="table",b..": entity isn't a table, type was "..type(c))self.switches[b]=c;self:callAction("registerAddSwitch",b)end;function self:getSwitch(b)assert(type(b)=="string","name isn't a string, type was "..type(b))return self.switches[b]end;function self:getSwitches()return self.switches end;self.taskRegister={}self.taskOrder={}local function d(e,f)if e~=nil and f~=nil then return self.taskRegister[e].order<self.taskRegister[f].order end;return nil end;local g=2500;function self:addTask(b,h,i,j)assert(type(b)=="string","addTask: name isn't a string, type was "..type(b))assert(type(h)=="function",b..": func isn't a function, type was "..type(h))if i==nil then i=10 else assert(type(i)=="number",b..": priority has to be number, type was "..type(i))end;if j==nil then j=g else assert(type(j)=="number",b..": rating has to be number, type was "..type(j))assert(j<=g,b..": rating has to be smaller then the allowed max rating of "..g)end;if not self:hasAction("systemUpdate","registerTasker")then self:addAction("systemUpdate","registerTasker",function()self:runTasks()end)end;if self.taskRegister[b]~=nil then self:removeTask(b)end;table.insert(self.taskOrder,b)self.taskRegister[b]={order=i,task=coroutine.create(h),rating=j}if#self.taskOrder>1 then table.sort(self.taskOrder,d)end end;function self:hasTask(b)return self.taskRegister[b]~=nil end;function self:removeTask(b)assert(type(b)=="string","removeTask: Name isn't a string, type was "..type(b))self.taskRegister[b]=nil;for k,l in pairs(self.taskOrder)do if l==b then table.remove(self.taskOrder,k)return end end end;function self:runTasks()local m=0;for n,b in ipairs(self.taskOrder)do local o=self.taskRegister[b]if m+o.rating<=g then if o.task==nil or coroutine.status(o.task)=="dead"then self:removeTask(b)else m=m+o.rating;local p,q=coroutine.resume(o.task)if not p then system.print(b.." in runTasks:",q)self:removeTask(b)end end end end end;function self:hasAction(r,b)return self.functionRegister[r]~=nil and self.functionRegister[r][b]~=nil end;function self:addAction(r,b,h)assert(type(r)=="string","action isn't a string, type was "..type(r))assert(type(b)=="string",r..": name isn't a string, type was "..type(b))assert(type(h)=="function",r..":"..b..": func isn't a function, type was "..type(h))if self.functionRegister[r]==nil then self.functionRegister[r]={}end;self.functionRegister[r][b]=h end;function self:removeAction(r,b)if self.functionRegister[r]==nil or self.functionRegister[r][b]==nil then return false end;self.functionRegister[r][b]=nil;return true end;function self:callAction(r,...)local s={}if self.functionRegister[r]~=nil then for b,h in pairs(self.functionRegister[r])do if h~=nil then local t,u=pcall(h,...)if t then s[b]=u else system.print(b.." in callAction:",u)end end end end;return s end;function self:callActionSpecific(r,b,...)assert(self.functionRegister[r]=="table",r..":".." not registered")assert(self.functionRegister[r][b]=="function",r..":"..b..": called specified function isn't a function, type was "..type(self.functionRegister[r][b]))local t,u=pcall(self.functionRegister[r][b],...)if t then return u else system.print(b.." in callActionSpecific:",u)end end;return self
        
        end
        system.rawPrint=system.print;function system.print(a,b)if b then b=tostring(b):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"','chunk'):gsub("&","&amp;"):gsub("<","&lt;"):gsub(">","&gt;")else b="???"end;system.rawPrint(a.." "..b)end;function print(c)system.rawPrint(tostring(c))end;local d=unit;if devMode==true and player.hasDRMAutorization()~=1 then print("devMode set but no DRM auth")error("devMode set but no DRM auth")d.exit()end;if d.hasDRM()==0 then if devMode~=true then print("DRM Required")error("DRM Required")d.exit()else print("DRM requirement skipped by devMode")end end;d.hideWidget()print("Hyperion Gunner Script V0.95")print("by Hyperion Scripting")system.showScreen(1)system.setScreen([[<svg xmlns="http://www.w3.org/2000/svg" width="40%" style="left:30%;top:10%;display:block; position:absolute;" viewBox="0 0 973.35 837.57">
            <defs>
            <style>
            .cls-1 { fill: #798a99; }
            .cls-2 { fill: #bd1730; }
            </style>
            </defs>
            <path class="cls-1" d="M583,93.5H437.52C353.65,361.21,211.41,603.08,25.7,804.26L98.3,930a1892.42,1892.42,0,0,1,828.89-.22l70.63-122.29C810.63,605.68,667.33,362.63,583,93.5ZM508.29,740.05A945,945,0,0,0,206.5,789.18C357.22,655.35,464.94,474.16,506.32,269c41.16,204.15,148,384.54,297.51,518.13A945.66,945.66,0,0,0,508.29,740.05Z" transform="translate(-25.08 -93)"/>
            <circle class="cls-2" cx="481.42" cy="523.5" r="118"/>
            </svg>
            <svg height="100%" width="100%" viewBox="0 0 1920 1080" style="left:0;top:0;display:block; position:absolute;">
            <text x="40%" y="88%" style="fill:#FFFFFF;font-size:50px">Hyperion Scripting</text>
            </svg>]])local e=require;require=function(f)return print("require '"..f.."': deprecated, use getPlugin()")end;local g={}local h={}function g:fixName(f)local i=packagePrefix;if string.find(f,i)then f=string.gsub(f,i,"")end;return f end;function g:unloadPlugin(f,j)assert(type(f)=="string","getPlugin: parameter name has to be string, was "..type(f))f=g:fixName(f)local i=packagePrefix;if j then i=""end;if package.loaded~=nil and package.loaded[i..f]~=nil then package.loaded[i..f]=nil end;if h[f]~=nil then if type(h[f])=="table"and type(h[f].unregister)=="function"then h[f].unregister()end;h[f]=nil end end;function g:getPlugin(f,k,l,j)assert(type(f)=="string","getPlugin: parameter name has to be string, was "..type(f))if k==nil then k=false end;f=g:fixName(f)if not g:hasPlugin(f,k,j)then return nil end;if type(h[f])=="table"and h[f].valid~=nil then if h[f]:valid(l)~=true then if not k then print("getPlugin '"..f.."':".." Not valid or compatible")end;return nil end end;return h[f]end;function g:hasPlugin(f,k,j)assert(type(f)=="string","hasPlugin: parameter name has to be string, was "..type(f))if k==nil then k=false end;f=g:fixName(f)local i=packagePrefix;if j then i=""end;if h[f]==nil then h[f]=false;if player.hasDRMAutorization()==1 or package.preload[i..f]~=nil or j then local m,n=pcall(e,i..f)if not m then if k==nil or not k then system.print("hasPlugin '"..f.."': require failed",n)end else h[f]=n end else print("hasPlugin '"..f.."': DRM auth required to load external files")end;if type(h[f])=="table"then if h[f].register~=nil then if _ENV["debugscreen"]==nil then _ENV["debugscreen"]=debugscreen end;if _ENV["register"]==nil then _ENV["register"]=register end;if _ENV["system"]==nil then _ENV["system"]=system end;if _ENV["unit"]==nil then _ENV["unit"]=unit end;if _ENV["player"]==nil then _ENV["player"]=player end;if _ENV["construct"]==nil then _ENV["construct"]=construct end;if _ENV["library"]==nil then _ENV["library"]=library end;local o,p=pcall(h[f].register,h[f],_ENV)if not o and not k then system.print("hasPlugin '"..f.."': register failed",p)end end else if h[f]~=nil and h[f]~=false then if type(h[f])=="string"then print("hasPlugin '"..f.."':"..h[f])else print("hasPlugin '"..f.."': not table value")end end end end;return type(h[f])=="table"end;function unloadPlugin(f,j)return g:unloadPlugin(f,j)end;function hasPlugin(f,k,j)return g:hasPlugin(f,k,j)end;function getPlugin(f,k,l,j)return g:getPlugin(f,k,l,j)end;local q={}unitType=""renderEveryXFrames=1;executeTotal=0;executeSet=0;executeTime=0;executeLastFrames=0;screenToggle=true;mode=-1;forceMode=-1;bootTime=system.getArkTime()useLightStyle=false;local r=120;local s=184;modeColors={}modeColors[0]=r;modeColors[1]=s;fuelTankHandlingSpace=4;fuelTankHandlingRocket=0;fuelTankHandlingAtmos=0;ContainerOptimization=4;FuelTankOptimization=5;function collect_keys(t,u)local v={}for w in pairs(t)do v[#v+1]=w end;table.sort(v,u)return v end;function sortedPairs(t,u)local x=collect_keys(t,u)local y=0;return function()y=y+1;if x[y]then return x[y],t[x[y]]end end end;function tableLength(z)local A=0;for B in pairs(z)do A=A+1 end;return A end;function timeit(C,D)collectgarbage()local E=system.getTime()local F=D()local G=system.getTime()print(C..": "..G-E)return F end;function getRelativePitch(H)return math.deg(math.atan(H[2],H[3]))-90 end;function getRelativeYaw(H)return math.deg(math.atan(H[2],H[1]))-90 end;function mysplit(I,J)if J==nil then J="%s"end;local t={}for c in string.gmatch(I,"([^"..J.."]+)")do table.insert(t,c)end;return t end;function inTable(K,L)if type(K)~="table"then return false end;for w,M in pairs(K)do if M==L then return true,w end end;return false end;function round(N,O)local P=10^(O or 0)if O~=nil then return math.floor(N*P+0.5)/P else return math.floor((N*P+0.5)/P)end end;if not inTable(player.getOrgIds(),2041)then system.print("Corp signatur required")error("Corp signatur required")d.exit()end;register=getPlugin("register")slots=getPlugin("slots")register:callAction("systemStart")local Q={}function addTimer(R,S,T)d.setTimer(R,S)Q[R]=T end;function onTimer(U)if Q[U]~=nil then local V,W=pcall(Q[U])if not V then print("Timer:"..W.."  "..U)end end end;function stopTimer()for w,B in pairs(Q)do d.setTimer(w,0)end end;local X=0;function delay(Y,S)local R="DelayCounter"..X;addTimer(R,S,function()pcall(Y)d.stopTimer(R)end)X=X+1 end;register:addAction("unitOnTimer","Timer",onTimer)if devMode==true then getPlugin("dev",true)getPlugin("devTools",true)end;getPlugin("optionals",true)for f,B in sortedPairs(package.preload)do getPlugin(f,true)end;delay(function()register:callAction("unitOnStart")end,0.5)
        
    onStop:
      lua: if register ~= nil then register:callAction("unitOnStop",unit) end
    onTimer(tag):
      lua: if register ~= nil then register:callAction("unitOnTimer",tag,unit) end
  system:
    onActionStart(action):
      lua: if register ~= nil then register:callAction("systemOnActionStart",action,system) end
    onActionStop(action):
      lua: if register ~= nil then register:callAction("systemOnActionStop",action,system) end
    onActionLoop(action):
      lua: if register ~= nil then register:callAction("systemOnActionLoop",action,system) end
    onUpdate:
      lua: if register ~= nil then register:callAction("systemOnUpdate",system) end
    onFlush:
      lua: if register ~= nil then register:callAction("systemOnFlush",system) end
    onInputText(text):
      lua: if register ~= nil then register:callAction("systemOnInputText",text,system) end
    onCameraChanged(mode):
      lua: if register ~= nil then register:callAction("systemOnCameraChanged",mode,system) end
  transponder:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,transponder) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,transponder) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,transponder) end
  weapon_1:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_1) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_1) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_1) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_1) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_1) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_1) end
  weapon_2:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_2) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_2) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_2) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_2) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_2) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_2) end
  weapon_3:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_3) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_3) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_3) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_3) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_3) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_3) end
  weapon_4:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_4) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_4) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_4) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_4) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_4) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_4) end
  weapon_5:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_5) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_5) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_5) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_5) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_5) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_5) end
  weapon_6:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon_6) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon_6) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon_6) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon_6) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon_6) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon_6) end
  weapon:
    onReload(ammoId):
      lua: if register ~= nil then register:callAction("OnReload",ammoId,weapon) end
    onReloaded(ammoId):
      lua: if register ~= nil then register:callAction("OnReloaded",ammoId,weapon) end
    onMissed(targetId):
      lua: if register ~= nil then register:callAction("OnMissed",targetId,weapon) end
    onDestroyed(targetId):
      lua: if register ~= nil then register:callAction("OnDestroyed",targetId,weapon) end
    onElementDestroyed(targetId,itemId):
      lua: if register ~= nil then register:callAction("OnElementDestroyed",targetId,itemId,weapon) end
    onHit(targetId,damage):
      lua: if register ~= nil then register:callAction("OnHit",targetId,damage,weapon) end
  radar_1:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_1) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_1) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_1) end
  radar_2:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_2) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_2) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_2) end
  radar_3:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_3) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_3) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_3) end
  radar_4:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_4) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_4) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_4) end
  radar_5:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_5) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_5) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_5) end
  radar_6:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_6) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_6) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_6) end
  radar:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar) end
  shieldGenerator:
    onToggled(active):
      lua: if register ~= nil then register:callAction("OnToggled",active,shieldGenerator) end
    onAbsorbed(hitpoints,rawHitpoints):
      lua: if register ~= nil then register:callAction("OnAbsorbed",hitpoints,rawHitpoints,shieldGenerator) end
    onVentin(active,restoredHitpoints):
      lua: if register ~= nil then register:callAction("OnVentin",active,restoredHitpoints,shieldGenerator) end
    onDown:
      lua: if register ~= nil then register:callAction("OnDown",shieldGenerator) end
    onRestored:
      lua: if register ~= nil then register:callAction("OnRestored",shieldGenerator) end
  core:
    onStressChanged(stress):
      lua: if register ~= nil then register:callAction("coreOnStressChanged",stress,core) end
