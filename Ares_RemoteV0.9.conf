name: Ares_RemoteV0.9
slots:
  databank:
    class: DataBank
    select: manual
  warpdrive:
    class: WarpDriveUnit
  core:
    class: CoreUnit
  engine:
    class: Engineunit
    select: manual
  radar:
    class: RadarPVPUnit
    select: manual
handlers:
  unit:
    onStart:
      lua: |
        packagePrefix = "autoconf.custom.AresOS."
        package.preload[packagePrefix.."configuration"] = function()
           local self={}local a=""function self:valid(b)return true end;self.version=0.91;self.loadPrio=1000;function self:register(c)_ENV=c end;self.owner=2041;self.creator=17654;self.basePos="::pos{0,0,-91264.7828,408204.8952,40057.4424}"self.friOrgs={11169,7922,8228,2917,17654,6714,13995,9355,18058,4699,9574,17981,12746,5870,12601,8180,3516,9151,8697,3644,14719,6707,18488}self.friPlayer={94563,57230,61799,27464,105615,55748,47124,47130,95815,105050,71758,114939,51450,72744}return self
        
        end
        package.preload[packagePrefix.."locationhandler"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(key)if key~=a then return false end;return true end;self.version=0.91;self.loadPrio=1000;local b,c,d,e,f,g,h,i,j,k={},{},{},{},{},{}function self:register(l)_ENV=l;if not self:valid(a)then return end;h()k=getPlugin("commandhandler",true)if k~=nil then k:AddCommand("add",function(m)local n=' *[+-]?%d+%.?%d*e?[+-]?%d*'local o='(::pos{'..n..','..n..','..n..','..n..','..n..'})'local p,q;if m[3]==nil then p="CPos"..#c;q=m[2]else p=m[2]q=m[3]end;for r in q:gmatch("[^\r\n]+")do newLocPos=string.match(q,o,1)if newLocPos==nil then system.print("No Pos")else nums={}for n in string.gmatch(q,n)do nums[#nums+1]=n end;p=tostring(p)p=string.upper(string.sub(p,0,1))..string.sub(p,2,#p)self:addPos(p,vec3(nums[3],nums[4],nums[5]))print(p.." "..tostring(self:getPos(p).pos))end end end,"adds Custom Postition")k:AddCommand("rem",function(m)local p=m[2]p=string.upper(string.sub(p,0,1))..string.sub(p,2,#p)self:delPos(p)end,"removes Custom Postition")k:AddCommand("remall",function(m)self:delAllPos()end,"removes All Custom Postitions")end end;function h()local s=getPlugin("atlas",false,"",true)local t={{name={"Alpha","Alpha","Alpha"},type={"AlienCore","AlienCore","AlienCore"},center={33946000.0000,71381990.0000,28850000.0000}},{name={"Gamma","Gamma","Gamma"},type={"AlienCore","AlienCore","AlienCore"},center={-64334000.0000,55522000.0000,-14400000.0000}}}d={}for key,u in pairs(s[0])do if key>=400 then break end;table.insert(d,{id=key,name=u.name[1],pos=vec3(u.center),radius=u.radius,atmoRadius=u.atmosphereRadius,range=500000,type=u.type[1]})if type(d[#d].name)=="table"then print(key)end end;i=d;g=j(i,false)f={}table.insert(f,{name="Central Zone",pos=vec3(13771471,7435803,-128971),range=18000000})local v={1,10,11,12,2,21,22,26,27,3,30,31}for w,x in pairs(i)do if inTable(v,x.id)then goto y end;table.insert(f,x)::y::end;for w,u in pairs(t)do table.insert(d,{id=key,name=u.name[1],pos=vec3(u.center),radius=u.radius,atmoRadius=u.atmosphereRadius,range=500000,type=u.type[1]})end;local z=getPlugin("specialCoords",true,"",true)if z~=nil then for w,u in pairs(z)do table.insert(d,{id=key,name=u.name[1],pos=vec3(u.center),radius=u.radius,atmoRadius=u.atmosphereRadius,range=500000,type=u.type[1]})end end end;function j(A,B)local C={}if B then for D=2,#A,1 do table.insert(C,{A[1].name.." - "..A[D].name,A[1].pos,A[D].pos-A[1].pos})end else for E=1,#A-1,1 do for D=E+1,#A,1 do table.insert(C,{A[E].name.." - "..A[D].name,A[E].pos,A[D].pos-A[E].pos})end end end;return C end;function self:getStatic()return d end;function self:getDynamic()return e end;function self:getPipes()return g end;function self:getSafeZones()return f end;function self:addPos(p,q)if q.x==nil then q=vec3(q)end;e[#e+1]={name=p,pos=q,type="customPos"}b[p]=#e end;function self:getAllPos()return e end;function self:getPos(p)return e[b[p]]end;function self:delPos(p)table.remove(e,b[p])end;function self:delAllPos()e={}end;return self
        
        end
        package.preload[packagePrefix.."menuscreener"] = function()
           local self={}self.viewTags={"screen"}self.loadPrio=100;self.version=0.91;local a=0;local b=nil;local c=nil;local d=false;local e="AQN5B4-@7gSt1W?;"function self:valid(f)return true end;local g="Main"local h={}local i={}function self:addMenu(j,k)h[j]=k end;local l="gunner"function self:onMouseDown(m,n,o)end;function self:onMouseUp(p)local m=p.mouseX*100;local n=p.mouseY*100;for q,r in pairs(i)do if r.top<=n and n<=r.top+r.height and r.left<=m and m<=r.left+r.width then pcall(r.func)break end end end;function self:addButton(s,t,u,v,k)table.insert(i,{["top"]=t,["left"]=s,["width"]=u,["height"]=v,["func"]=k})end;function self:addFancyButton(s,t,u,v,k,j,w,x,y)self:addButton(s,t,u,v,k)local z=0.2;if t<=x and x<=t+v and s<=w and w<=s+u then z=0.5 end;y=y or"4682B4"local HTML=[[                        
                <rect x="]]..s..[[%" y="]]..t..[[%" rx="2" ry="2" width="]]..u..[[%" height="]]..v..[[%" style="fill:#]]..y..[[;fill-opacity:]]..z..[[" />
                <text x="]]..s+u*0.1 ..[[%" y="]]..t+v*0.7 ..[[%" style="fill:#FFFFFF;font-size:]]..v*1.5 ..[[">]]..j..[[</text>
            ]]return HTML end;function self:register(A)_ENV=A;if not self:valid(e)then return end;b=getPlugin("baseflight",true)c=getPlugin("screener",true)if c==nil then return end;c:addScreen("centerfirst",{offsetx=0.3035,offsety=0.11,width=0.393,height=0.7,perspective="first",parent="mainScreenFirst"})c:registerDefaultScreen("centerfirst","Menu")c:addView("Menu",self)register:addAction("option6Start","Exit",function()local B=system.getCameraMode()if B==1 and not d then system.lockView(1)d=true;c:freeMouse(true)else system.lockView(0)d=false;c:freeMouse(false)if b~=nil then b:setUpdateState(true)end end end)if player.getId()==23833 then register:addAction("systemOnCameraChanged","ViewLocker",function(B)if B==1 then system.lockView(1)d=true;c:freeMouse(true)end end)end;register:addAction("systemOnCameraChanged","ViewLockerStop",function(B)if B~=1 then system.lockView(0)d=false;c:freeMouse(false)if b~=nil then b:setUpdateState(true)end end end)self:addMenu("settings",function(w,x,C,D)self:addButton(3,10,20,3,function()l="gunner"a=0 end)self:addButton(53,10,20,3,function()l="remote"a=0 end)if D then if b~=nil then b:setUpdateState(false)end;a=a+system.getMouseWheel()*-1 else if b~=nil then b:setUpdateState(true)end end;if a<0 then a=0 end;local HTML=""if unitType=="gunner"then local E="4682B4"local F="4682B4"if l=="gunner"then E="00ff00"else F="00ff00"end;HTML=[[           
                    <rect x="2%" y="9%" rx="2" ry="2" width="96%" height="89%" style="fill:#4682B4;fill-opacity:0.35" />
        
                    <rect x="3%" y="10%" rx="2" ry="2" width="20%" height="3%" style="fill:#]]..E..[[;fill-opacity:0.8" />
                    <text x="5%" y="12%" style="fill:#FFFFFF;font-size:6">Gunner</text>
        
                    <rect x="53%" y="10%" rx="2" ry="2" width="20%" height="3%" style="fill:#]]..F..[[;fill-opacity:0.8" />
                    <text x="55%" y="12%" style="fill:#FFFFFF;font-size:6">Remote</text>
                    ]]end;if unitType==l then HTML=HTML..[[]]local G={}local H=getPlugin("settings")for I,J in pairs(H.Description)do table.insert(G,{I,nil})for j,K in pairs(J)do table.insert(G,{I,j})end end;local z=false;for L=1,80,1 do local y=L+a;local M=0;z=not z;if z then M=0.3 end;if G[y]==nil then break end;local N=G[y][1]local O=G[y][2]local P="4682B4"if L*3+13.2<=x and x<=L*3+13+2.5 and 2.5<=w and w<=2.5+95 then P="244c9c"M=0.3 end;if O==nil then HTML=HTML..[[<rect x="2.5%" y="]]..L*3+13 ..[[%" rx="2" ry="2" width="95%" height="3%" style="fill:#]]..P..[[;fill-opacity:]]..M..[[" /><text x="5%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">]]..N..[[</text>]]else HTML=HTML..[[<rect x="2.5%" y="]]..L*3+13 ..[[%" rx="2" ry="2" width="95%" height="3%" style="fill:#]]..P..[[;fill-opacity:]]..M..[[" /><text x="5%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">]]..O..[[</text><text x="60%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">]]..H.Description[N][O]..[[</text>
                            <text x="25%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">]]..tostring(H:get(O,N))..[[</text>
                            ]]local Q=H.Range[N][O]if Q[1]=="boolean"then HTML=HTML..[[<text x="30%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{]]..tostring(not H:get(O,N))..[[}</text>]]self:addButton(30,L*3+13.2,5,2.5,function()H:set(O,not H:get(O,N),N)end)elseif Q[1]=="string"then local m=0;for q,R in pairs(Q[2])do HTML=HTML..[[<text x="]]..30+m..[[%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{]]..R..[[}</text>]]self:addButton(30+m,L*3+13.2,#R*1.5,2.5,function()H:set(O,R,N)end)m=m+#R+2 end elseif Q[1]=="number"then local m=0;HTML=HTML..[[<text x="]]..30+m..[[%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{]]..Q[2]..[[}</text>]]self:addButton(29.25+m,L*3+13.2,4.5,2.5,function()H:set(O,Q[2],N)end)m=m+4;HTML=HTML..[[<text x="]]..30+m..[[%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{-]]..Q[4]..[[}</text>]]self:addButton(29.25+m,L*3+13.2,4.5,2.5,function()H:set(O,H:get(O,N)-Q[4],N)end)m=m+4;HTML=HTML..[[<text x="]]..30+m..[[%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{+]]..Q[4]..[[}</text>]]self:addButton(29.25+m,L*3+13.2,4.5,2.5,function()H:set(O,H:get(O,N)+Q[4],N)end)m=m+4;HTML=HTML..[[<text x="]]..30+m..[[%" y="]]..L*3+15 ..[[%" style="fill:#FFFFFF;font-size:5">{]]..Q[3]..[[}</text>]]self:addButton(29.25+m,L*3+13.2,4.5,2.5,function()H:set(O,Q[3],N)end)else end end end end;return HTML end)if unitType~="gunner"then self:addMenu("Commander",function(w,x,C,D)if D and(9<=x and x<=98 and 2<=w and w<=68)then if b~=nil then b:setUpdateState(false)end;a=a+system.getMouseWheel()*-1 else if b~=nil then b:setUpdateState(true)end end;return""end)self:addMenu("Ship",function(w,x,C,D)if D and(9<=x and x<=98 and 2<=w and w<=68)then if b~=nil then b:setUpdateState(false)end;a=a+system.getMouseWheel()*-1 else if b~=nil then b:setUpdateState(true)end end;return""end)self:addMenu("Main",function(w,x,C,D)HTML=""self:addFancyButton(3,93,15,4,function()unit.exit()end,"AllExit",w,x)HTML=HTML..self:addFancyButton(35,93,15,4,function()unit.exit()end,"RemoteExit",w,x)return HTML end)else self:addMenu("Pilot",function()return""end)end end;function self:setScreen(p)local w=p.mouseX;local x=p.mouseY;local C=p.mouseDown;local S=false;local D=false;w=w*100;x=x*100;if 0<=x and x<=100 and 0<=w and w<=100 then S=true;if 9<=x and x<=98 and 2<=w and w<=98 then D=true end end;if system.isViewLocked()~=1 and unitType~="remote"then return""end;if not d then return end;i={}self:addButton(2,2,17.6,5,function()g="Main"end)self:addButton(21.6,2,17.6,5,function()g="Commander"end)self:addButton(41.2,2,17.6,5,function()g="Ship"end)self:addButton(60.8,2,17.6,5,function()g="Pilot"end)self:addButton(80.4,2,17.6,5,function()g="settings"a=0 end)self:addButton(92.5,92.5,5,5,function()system.lockView(0)d=false;c:freeMouse(false)if b~=nil then b:setUpdateState(true)end end)local HTML=""if unitType=="gunner"then HTML=[[        
                <svg style="width:100%;height:100%" viewBox="0 0 300 300">
                    <rect x="0%" y="0%" rx="2" ry="2" width="100%" height="100%" style="fill:#000000;fill-opacity:0.35" />
        
                    <rect x="2%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
                    <rect x="21.6%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
                    <rect x="41.2%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
                    <rect x="60.8%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
                    <rect x="80.4%" y="2%" rx="2" ry="2" width="17.6%" height="5%" style="fill:#4682B4;fill-opacity:0.8" />
        
                    <text x="8%" y="5.5%" style="fill:#FFFFFF;font-size:8">Main</text>
                    <text x="22%" y="5.5%" style="fill:#FFFFFF;font-size:8">Commander</text>
                    <text x="47%" y="5.5%" style="fill:#FFFFFF;font-size:8">Ship</text>
                    <text x="66.5%" y="5.5%" style="fill:#FFFFFF;font-size:8">Pilot</text>
                    <text x="83.8%" y="5.5%" style="fill:#FFFFFF;font-size:8">Settings</text>]]else HTML=[[        
                    <svg style="width:100%;height:100%" viewBox="0 0 300 300">]]end;local T,U,V=pcall(h[g],w,x,C,D)res=res or""V=V or""if T then HTML=HTML..U;return HTML..[[<text x="94%" y="97%" style="fill:#FFFFFF;font-size:14">X</text></svg>]]..V else if devMode then print(res)end end;return HTML..[[<text x="94%" y="97%" style="fill:#FFFFFF;font-size:14">X</text></svg>]]end;return self
        
        end
        package.preload[packagePrefix.."screener"] = function()
           local self={}local a=false;local b=false;self.loadPrio=10;local c=getPlugin("config")local d={menuitmwidth=1/8,menuitmheight=1/16,offsetx=0,offsety=0,width=1*1/3,height=1*1/3,tag="screen",totalWidth=system.getScreenHeight(),totalHeight=system.getScreenWidth(),perspective="third",parent="mainScreenThird",mouseDown=false}local e={}function self:hotkeyState(f)if self.pressedRegister[f]==1 then return 1 end;return 0 end;function self:startHotkeyPressed(f)self.pressedRegister[f]=1 end;function self:endHotkeyPressed(f)self.pressedRegister[f]=nil end;function self:freeMouse(g)if a and g then print("setupMode off")a=false end;b=g;system.lockView(b)end;function self:addButton(h,i,j,k,l,m,n)end;function self:addScreen(o,p)curr={}for q,r in pairs(d)do if p[q]==nil then curr[q]=r else curr[q]=p[q]end end;curr["name"]=o;e[o]=curr end;function self:getPerspectiveList()return{"first","third"}end;function self:getPerspective()local s=system.getCameraMode()if s==1 then return"first"else return"third"end end;local t={}function self:addView(u,v)assert(type(u)=="string","name isn't a string, type was "..type(u))assert(type(v)=="table",u..": viewObj isn't a table, type was "..type(v))t[u]=v;register:callAction("registerAddView",u)end;function self:removeView(u)if t[u]==nil then return false end;t[u]=nil;register:callAction("registerRemoveView",u)end;function self:getViewList(w)local x={}for y,z in pairs(t)do if z==nil or z.viewTags==nil then system.print("No view tags: '"..y)else for A,B in pairs(z.viewTags)do if w==nil or B==w then table.insert(x,y)end end end end;table.sort(x)return x end;function self:renderView(u,screen,...)if t[u]==nil then system.print("Render of view '"..(u or"???").."' failed, because it there is no such view registered!","")end;local v=t[u]if v.setScreen~=nil then local C,D=pcall(v.setScreen,v,screen,...)if C then return D else system.print(u.." in setScreen:",D)return nil end else system.print(u.." render has no function 'setScreen'")end end;function self:renderViewRequireRerender(u,screen,...)if self.viewRegister[u]==nil then system.print("Rerender request of view '"..(u or"???").."' failed, because it there is no such view registered!","")end;local v=t[u]if v.requireRerender~=nil then local C,D=pcall(v.requireRerender,v,screen,...)if C then return D else system.print(u.." in renderViewRequireRerender:",D)return nil end end;return true end;function self:actionToHtml(E,...)local F,G=register:callAction(E,...),""for A,r in pairs(F)do if r then G=G..r end end;return G end;function screenObj(u)return e[u]end;local H=0;local I={}function self:addColor(J,K)I[J]=math.max(0,math.min(K,360))end;function self:getColor(J)if I[J]==nil then if devMode then print("color for mode "..J.." was not registered. Setting 290.")end;self:addColor(J,290)end;return I[J]end;function self:setColorMode(J)H=J end;local L={}function self:colors(J)if J==nil then J=H end;if L[J]==nil then if I[J]==nil then if devMode then print("color for mode "..J.." was not registered")end;self:addColor(J,290)end;local K=self:getColor(J)L[J]={hsl=K,sqLeftHsl=K+270.0,sqTwoRight=K+180.0,warn=5}local M=L[J]if M.sqLeftHsl>360 then M.sqLeftHsl=M.sqLeftHsl-360 end;if M.sqTwoRight>360 then M.sqTwoRight=M.sqTwoRight-360 end;if M.hsl<45 or M.hsl>315 then M.warn=M.sqTwoRight end end;return L[J]end;function drawAllScreensCss()local M=self:colors()local N=[[
                                    * { font-family:Montserrat }
                                    body { margin: 0}
                                    svg {display:block; position:absolute; top:auto; left:auto}
                                    svg svg { overflow: visible }
                                    .screenSvg { position: relative; margin: auto 0; }
                                    .screen { margin:0; padding:0; position: absolute; left: 0; top: 0; border: 2px solid transparent }
        							.lfill { fill:hsl(]]..M.hsl..[[, 93.6%, 56.9%)}
                                    .sfill { fill:hsl(]]..M.hsl..[[, 100%, 50%) }
        							.lstroke { stroke:hsl(]]..M.hsl..[[, 93.6%, 56.9%)}
                                    .sstroke { stroke:hsl(]]..M.hsl..[[, 100%, 50%) }
        							.bstroke { stroke:black }
                                ]]if a then N=N..[[
        							.screen { border: 2px solid hsl(]]..M.hsl..[[, 93.6%, 56.9%) }
        							.menu { position: absolute; right: 0; top: 0; width: 100%; height: 3.125%; overflow: hidden; z-index: 1000 }
        							.mItm { z-index:inherit; background-color:hsl(]]..M.hsl..[[, 100%, 50%);position: relative; float: right; height: 100%; width: calc(100% / 24); border: 2px solid hsl(]]..M.hsl..[[, 93.6%, 56.9%); overflow: hidden; color: white;display: flex;align-items: center;justify-content: center; }
        						]]end;local s=self:getPerspective()for u,A in pairs(e)do screen=screenObj(u)if s==screen.perspective then N=N..[[
        								#]]..u..[[ { width: ]]..screen.width*100 ..[[%; height: ]]..screen.height*100 ..[[%; top: ]]..screen.offsety*100 ..[[%; left: ]]..screen.offsetx*100 ..[[% }
        			]]if a then N=N..[[
        								#]]..u..[[ > .menu { height: ]]..screen.menuitmheight*100 ..[[% }
        								#]]..u..[[ > .menu .mItm { width: ]]..screen.menuitmwidth*100 ..[[% }
        				]]for O,h in pairs(self:getViewList(screen.tag))do local P="scval_"..u.."_"..h;local curr=c:get(P,0)if curr==1 then N=N..[[
        								#]]..u..[[ > .menu .mItm.n]]..O..[[ { background-color:hsl(]]..M.sqTwoRight..[[, 100%, 50%) }
        						]]end end end end end;return N end;register:addAction("staticCssStyle","drawAllScreensCss",drawAllScreensCss)local Q={}function drawAllScreens()local R=0;local S,T,U=self:actionToHtml("staticCssStyle"),"",""local V,W,X={},{},{}local s=self:getPerspective()if a then for O,u in pairs(self:getViewList("screen"))do T=T..'<div class="mItm text n'..O..'">'..u.."</div>"end;T=[[
        			<div class="menu screentag">
        				]]..T..[[
        			</div>
        		]]end;for u,A in pairs(e)do screen=screenObj(u)if s==screen.perspective then if screen.tag=="screen"then if W[screen.parent]==nil then W[screen.parent]=""end;W[screen.parent]=W[screen.parent]..[[
                                           <div id="]]..u..[[" class="screen">
                                            ]]..T..[[
                                            ]]..self:actionToHtml(u.."Html")..[[
                                           </div>]]end end end;if a then T=""for O,u in pairs(self:getViewList("hud"))do T=T..'<div class="mItm text n'..O..'">'..u.."</div>"end;T=[[
        			<div class="menu hudtag">
        				]]..T..[[
        			</div>
        		]]end;for u,A in pairs(e)do screen=screenObj(u)if s==screen.perspective then if screen.tag=="hud"then if X[screen.parent]==nil then X[screen.parent]=""end;if W[u]==nil then W[u]=""end;X[screen.parent]=X[screen.parent]..[[
        									   <div id="]]..u..[[" class="screen">
        										]]..T..[[
        										]]..self:actionToHtml(u.."Html")..[[
        										]]..W[u]..[[
        									   </div>]]end end end;local Y=""if a or b then local Z=system.getMousePosX()/d.totalWidth;local _=system.getMousePosY()/d.totalHeight;Y=[[
        			<svg style="z-index: 10000;position: absolute;left:]]..Z*100 ..[[%;top:]].._*100 ..[[%" height="20px" width="20px" viewBox="0 0 512 512">
        				<path class="sfill bstroke" d="M434.214,344.448L92.881,3.115c-3.051-3.051-7.616-3.947-11.627-2.304c-3.989,1.643-6.592,5.547-6.592,9.856v490.667
        					c0,4.459,2.773,8.448,6.976,10.005c1.195,0.448,2.453,0.661,3.691,0.661c3.051,0,6.037-1.323,8.085-3.733l124.821-145.6h208.427
        					c4.309,0,8.213-2.603,9.856-6.592C438.182,352.085,437.265,347.52,434.214,344.448z"/>
        			</svg>
        			]]end;for u,G in pairs(X)do Y=Y..G end;local a0=[[
                                    <head>
                                        <style>
                                            ]]..S..[[
                                        </style>
                                    </head>
                                    <body>
                                        ]]..Y..[[
                                    </body>
                                ]]if devMode then for A,a1 in pairs(screens)do if a1.getName()=="debugscreen"then a1.setHTML(a0)end end end;if#screens>0 then for a2,a3 in pairs(screens)do a3.mouseX=a3.getMouseX()a3.mouseY=a3.getMouseY()a3.mouseDown=a3.getMouseState()==1;local u,a4="screen"..a2,nil;for A,h in pairs(self:getViewList("screen"))do local a5=u.."_"..h;local P="scval_"..a5;local curr=c:get(P,0)if curr==1 then if self:renderViewRequireRerender(h,a3)then if a4==nil then a4=""end;a4=a4 ..self:renderView(h,a3)end end end;if a4~=nil then a3.setHTML(a4)end end end;system.setScreen(a0)end;function self:triggerViewMouseEvent(a6,u,screen,...)if t[u]==nil then system.print("Render of view '"..(u or"???").."' failed, because it there is no such view registered!","")end;local v=t[u]local a7=v.onMouseUp;if a6==false then a7=v.onMouseDown end;if a7 then local C,D=pcall(a7,v,screen,...)if C then return D else system.print(u..": error in triggerViewMouseEvent:",a6,D)return nil end else end end;function self:registerDefaultScreen(o,h)local P="scval_"..o.."_"..h;if devMode then print("registering default view "..P)end;c:set(P,1,0)end;function self:register(a8)_ENV=a8;self:addColor(0,120)self:setColorMode(0)d.totalWidth=system.getScreenWidth()d.totalHeight=system.getScreenHeight()local a9=false;function setActionHtml(o,h)local screen=screenObj(o)local a5=o.."_"..h;local P="scval_"..a5;local curr=c:get(P,0)if curr==1 then if devMode then print("register setActionHtml for "..P)end;register:addAction(o.."Html",a5 .."Html",function()if a==false and b==false then screen.mouseX,screen.mouseY,screen.mouseXPos,screen.mouseYPos=-1,-1,-1,-1;screen.mouseDown=false else screen.mouseXPos=system.getMousePosX()-screen.offsetx;screen.mouseYPos=system.getMousePosY()-screen.offsety;screen.mouseX=(system.getMousePosX()/d.totalWidth-screen.offsetx)/screen.width;screen.mouseY=(system.getMousePosY()/d.totalHeight-screen.offsety)/screen.height;screen.mouseDown=screen.mouseDown and a9 end;return self:renderView(h,screen)end)else register:removeAction(o.."Html",a5 .."Html")end end;function realMouseEvent(a6,screen,aa,j,k)local o=screen.name;for A,a3 in pairs(screens)do if a3.getId()==aa.getId()then a3.mouseX=a3.getMouseX()a3.mouseY=a3.getMouseY()a3.mouseDown=a3.getMouseState()==1;for A,h in pairs(register:getViewList(screen.tag))do local a5=o.."_"..h;local P="scval_"..a5;local curr=c:get(P,0)if curr==1 then self:triggerViewMouseEvent(a6,h,a3)end end;return true end end;return false end;function virtualMouseEvent(a6,screen,ab,ac,ad)local s,o=self:getPerspective(),screen.name;local ae,af=screen.width,screen.height;local ag=screen.menuitmwidth*screen.width;local ah=screen.menuitmheight*screen.height;local ai=ab-screen.offsetx;local aj=ac-screen.offsety;if ai>=0 and ai<ae then if aj>=0 and aj<af then screen.mouseXPos,screen.mouseYPos=ai,aj;screen.mouseX,screen.mouseY=ai/ae,aj/af;if debug then print("clickx "..ai.." to "..ae.." results in "..ai/ae)end;screen.mouseDown=not a6;if not b and aj<ah then if a6 then for ak,h in pairs(self:getViewList(screen.tag))do local al,am=ak*ag,(ak-1)*ag;if ai>ae-al and ai<=ae-am then local a5=o.."_"..h;local P="scval_"..a5;local curr=c:get(P,0)if curr==1 then c:set(P,0,0)else c:set(P,1,0)end;setActionHtml(o,h)end end end else for A,h in pairs(self:getViewList(screen.tag))do local a5=o.."_"..h;local P="scval_"..a5;local curr=c:get(P,0)if curr==1 then self:triggerViewMouseEvent(a6,h,screen)end end end;if devMode then local a7="DOWN"if a6 then a7="UP"end;print("Event "..a7 .."Screen "..o.." Type "..ad.." Relative x "..ai.." Relative y "..aj)end;return true end end;return false end;function tableLength(an)assert(type(an)=='table','bad parameter #1: must be table')local ao=0;for A in pairs(an)do ao=ao+1 end;return ao end;function initAllScreens()screenObjCache={}if devMode then print("reinitialize all "..tableLength(e).." screens")end;for u,A in pairs(e)do local screen=screenObj(u)for A,h in pairs(self:getViewList(screen.tag))do setActionHtml(u,h)end;register:addAction("screenMouseUp","realScreenMouseUp"..u,function(aa,j,k)realMouseEvent(true,screen,aa,j,k)end)register:addAction("screenMouseDown","realScreenMouseUp"..u,function(aa,j,k)realMouseEvent(false,screen,aa,j,k)end)register:addAction("mouseUp","screenMouseUp"..u,function(ab,ac,ad)if self:getPerspective()==screen.perspective then virtualMouseEvent(true,screen,ab,ac,ad)end end)register:addAction("mouseDown","screenMouseDown"..u,function(ab,ac,ad)if self:getPerspective()==screen.perspective then virtualMouseEvent(false,screen,ab,ac,ad)end end)end end;self:addScreen("mainScreenFirst",{menuitmwidth=1/24,menuitmheight=1/32,width=1,height=1,tag="hud",perspective="first"})self:addScreen("mainScreenThird",{menuitmwidth=1/24,menuitmheight=1/32,width=1,height=1,tag="hud"})self:addScreen("screen1first",{offsetx=0,perspective="first",parent="mainScreenFirst"})self:addScreen("screen1third",{offsetx=0})self:addScreen("screen2first",{offsetx=0,offsety=1*1/3,perspective="first",parent="mainScreenFirst"})self:addScreen("screen2third",{offsetx=0,offsety=1*1/3})self:addScreen("screen3first",{offsetx=1*0.63,offsety=1*0.25,width=1*0.23,height=1*0.23,perspective="first",parent="mainScreenFirst"})self:addScreen("screen3third",{offsetx=1*0.63,offsety=1*0.25,width=1*0.23,height=1*0.23})self:addScreen("screen4first",{offsetx=1*0.56,offsety=0,width=1*0.20,height=1*0.25,perspective="first",parent="mainScreenFirst"})self:addScreen("screen4third",{offsetx=1*0.56,offsety=0,width=1*0.20,height=1*0.25})register:addAction("registerAddView","viewRegisterWatcher",initAllScreens)initAllScreens()register:addAction("unitOnStart","Screener",function()register:addAction("systemOnUpdate","drawAllScreens",function()if executeTotal==1 or executeTotal%renderEveryXFrames==0 or a or b then if screenToggle then drawAllScreens()end end end)register:addAction("leftmouseStart","mouseStartTracker",function()a9=true;if a or b then local Z=system.getMousePosX()/d.totalWidth;local _=system.getMousePosY()/d.totalHeight;register:callAction("mouseDown",Z,_,"hud")return true else return false end end)register:addAction("leftmouseStop","mouseStopTracker",function()a9=false;if a or b then local Z=system.getMousePosX()/d.totalWidth;local _=system.getMousePosY()/d.totalHeight;register:callAction("mouseUp",Z,_,"hud")return true else return false end end)end)local ap=getPlugin("commandhandler")ap:AddCommand("setup",function(aq)a=not a;if a then system.lockView(true)print("setupMode on")else system.lockView(false)print("setupMode off")end end,"Activate/Deactivate screener setup mode")local ar=false;ap:AddCommand("mouse",function(aq)ar=not ar;self:freeMouse(ar)if ar then print("mouse on")else print("mouse off")end end,"Mouse on/off")local as=getPlugin("settings")as:add("FPS",3,{"number",1,10,1},"RefreshRate")renderEveryXFrames=as:get("FPS")or 3 end;return self
        
        end
        package.preload[packagePrefix.."pipes"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="remote"or unitType=="command"end;self.version=0.91;self.loadPrio=1000;self.viewTags={"hud"}local c=unit;local d=system;local e,f,g,h,i,j,k,l;function self:register(m)if not self:valid(a)then return end;k=getPlugin("locationhandler",false,a)Atlas=getPlugin("atlas",false,"",true)e=k:getPipes()f=k:getSafeZones()h(f)local l=getPlugin("screener",true)if l~=nil then l:registerDefaultScreen("mainScreenThird","Pipes")l:registerDefaultScreen("mainScreenFirst","Pipes")l:addView("Pipes",self)end end;function self:setScreen()local n=[[
        		<style>
        			#pipeMain, #pipeMain svg {display:block; position:absolute; top:0; left:0}
        			#pipeMain .text {fill:aqua;font-family:Montserrat;font-weight:bold}
        		</style>
        
                <svg id="pipeMain" height="94.5%" width="100%" viewBox=\"0 0 1920 1080\">]]n=n.."<g font-family=\"Super Sans\" font-size=\"13px\">".."<rect x=\""..1.65 .."%\" y=\""..65.65 .."%\" rx=\"2\" ry=\"2\" width=\"12%\" height=\"5.2%\" style=\"fill:#4682B4;fill-opacity:0.35\" />"local o,p=g(e)local q,r=i(h(f))if o~=nil then if p<100000 then p=tostring(math.floor(p/10)/100).." km"else p=tostring(math.floor(p/1000/2)/100).." su"end;n=n.."<text x=\""..1.65+0.5 .."%\" y=\""..65.65+2 .."%\" style=\"fill:#FFFFFF;font-size:10px\">Pipe "..o.."</text>".."<text x=\""..1.65+8.5 .."%\" y=\""..65.65+2 .."%\" style=\"fill:#FFFFFF;font-size:13px\">"..p.."</text>"end;local s;if r>=0 then s="#00FF00"else s="#FF0000"end;if r<100000 and r>-100000 then r=tostring(math.floor(r/10)/100).." km"else r=tostring(math.floor(r/1000/2)/100).." su"end;n=n.."<text x=\""..1.65+0.5 .."%\" y=\""..65.65+4 .."%\" style=\"fill:#FFFFFF;font-size:10px\">Safezone "..string.sub(q,0,16).."</text>".."<text x=\""..1.65+8.5 .."%\" y=\""..65.65+4 .."%\" style=\"fill:"..s..";font-size:13px\">"..r.."</text>"return n.."</svg>"end;function g(t)local u=vec3(construct.getWorldPosition())local v=0;local w=0;local x=0;self.pipePoint=nil;local y=vec3()for z=1,#t,1 do local A=t[z][2]-u;local B=t[z][3]local C=(-1*A.x*B.x-A.y*B.y-A.z*B.z)/(B.x*B.x+B.y*B.y+B.z*B.z)local D=vec3(t[z][2].x+C*B.x,t[z][2].y+C*B.y,t[z][2].z+C*B.z)local v=(D-u):len()if(w==0 or v<w)and C>=0 and C<=1 then w=v;x=z;y=D end end;if x==0 then return end;self.pipePoint=y;return t[x][1],w end;function h(E)local u=vec3(construct.getWorldPosition())local F=0;local G=0;local H;for z=1,#E,1 do H=math.abs((u-E[z].pos):len()-E[z].range)if F==0 or H<F then G=z;F=H end end;return E[G]end;function i(I)return I.name,construct.getDistanceToSafeZone()*-1 end;function self:getSafeZone()return j(h(f))end;function j(I)local u=vec3(construct.getWorldPosition())local D=vec3(u-I[2]):len()local C=I[3]/D;local J=I[2]+C*vec3(u-I[2])self.nearestSafeZone=J;return J end;return self
        
        end
        package.preload[packagePrefix.."flighthud"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="remote"or unitType=="command"end;self.version=0.91;self.loadPrio=1000;self.viewTags={"hud"}local unit=unit;local system=system;local c=0;local d;local database=database;function self:register(e)if not self:valid(a)then return end;d=getPlugin("baseflight",true,"AQN5B4-@7gSt1W?;")if d==nil then return end;if core==nil then return end;local f=getTanks()self.SpaceTanks,self.RocketTanks=f.space,f.rocket;local g=getPlugin("screener",true)if g~=nil then g:registerDefaultScreen("mainScreenThird","flighthud")g:registerDefaultScreen("mainScreenFirst","flighthud")g:addView("flighthud",self)end;register:addAction("laltStart","RadarScroll",function()d:setUpdateState(false)end)register:addAction("laltStop","RadarScroll",function()d:setUpdateState(true)end)local h=getPlugin("settings",true)h:add("AutoTurnOff","auto",{"string",{"on","auto","off"}},"Automatically deactivates the Remote upon standing up")addTimer("AutoExit",0.5,function()local i="AutoTurnOff"if database.hasKey~=nil and database.hasKey(i)==1 and h:get(i)=="on"then if database.getStringValue(i)==tostring(player.getId())then database.clearValue(i)unit.exit()end elseif h:get(i)=="auto"then if construct.getPvPTimer()<0.1 and database.hasKey~=nil and database.hasKey(i)==1 then if database.getStringValue(i)==tostring(player.getId())then database.clearValue(i)unit.exit()end end end end)end;local j={atmofueltank={{w=10000,mv=51200,me=5480},{w=1300,mv=6400,me=988.67},{w=150,mv=1600,me=182.67},{w=0,mv=400,me=35.03}},spacefueltank={{w=10000,mv=76800,me=5480},{w=1300,mv=9600,me=988.67},{w=150,mv=2400,me=182.67},{w=0,mv=2400,me=182.67}},rocketfueltank={{w=65000,mv=50000*0.8,me=25740},{w=1300,mv=6400*0.8,me=4720},{w=150,mv=800*0.8,me=886.72},{w=0,mv=400*0.8,me=173.42}}}function tankStatsDefault(k,l)for m,n in pairs(j[k])do if l>n.w then return n.mv,n.me end end;return 0,0 end;function tankStats(o,p,q,r)local s=false;for m,t in pairs(_ENV[p])do if t.getLocalId()==o then s=true;q=t.getMaxVolume()*4;r=t.getSelfMass()break end end;return s,q,r end;function CalculateFuelLevel(o)return(core.getElementMassById(o[1])-o["me"])/o["mv"]end;function getTanks()local u=core.getElementIdList()fuelTankHandlingAtmos=fuelTankHandlingAtmos or 0;fuelTankHandlingSpace=fuelTankHandlingSpace or 0;fuelTankHandlingRocket=fuelTankHandlingRocket or 0;ContainerOptimization=ContainerOptimization or 0;FuelTankOptimization=FuelTankOptimization or 0;local function v(w)local x,y=0,0;if ContainerOptimization>0 then x=ContainerOptimization*0.05 end;if FuelTankOptimization>0 then y=FuelTankOptimization*0.05 end;return w*(1-(x+y))end;local f={atmo={},space={},rocket={}}local z=getPlugin("slots")for m,o in pairs(u)do local A=core.getElementClassById(o)local B=z:getClassType(A)if B~=nil then if B=="atmofueltank"or B=="spacefueltank"or B=="rocketfueltank"then local l=core.getElementMaxHitPointsById(o)local C=0;if B=="atmofueltank"then C=fuelTankHandlingAtmos elseif B=="spacefueltank"then C=fuelTankHandlingSpace elseif B=="rocketfueltank"then C=fuelTankHandlingRocket end;local q,r=tankStatsDefault(B,l,C)local s=false;s,q,r=tankStats(o,B,q,r)if not s then q=q+q*C*0.2;q=v(q)end;local D={[1]=o,["mv"]=q,["me"]=r}if B=="atmofueltank"then table.insert(f.atmo,D)elseif B=="spacefueltank"then table.insert(f.space,D)elseif B=="rocketfueltank"then table.insert(f.rocket,D)end end end end;for m,E in pairs(f)do table.sort(E,function(F,G)return F[1]<G[1]end)end;return f end;function self:setScreen()if construct.getMaxSpeed()<700000 then maxSpeed=construct.getMaxSpeed()end;local H=math.floor(unit.getAxisCommandValue(axisCommandId.longitudinal)*100)local I=100;for J,K in pairs(self.SpaceTanks)do local L=CalculateFuelLevel(K)*100;if L<I then I=L end end;I=round(I)local M=20;local N;local O=[[
        			<style>
        				#FlightHudMain, #FlightHudMain svg {display:block; position:absolute; top:0; left:0} 
        				#FlightHudMain .majorLine {stroke:aqua;opacity:0.7;stroke-width:3;fill-opacity:0;}
        				#FlightHudMain .minorLine {stroke:aqua;opacity:0.3;stroke-width:3;fill-opacity:0;}
        				#FlightHudMain .text {fill:aqua;font-family:Montserrat;font-weight:bold}
        			</style>
                    <svg id="FlightHudMain" height="94.5%" width="100%" viewBox="0 0 1920 1080">
        				<rect x="36.525%" y="93.95%" rx="2" ry="2" width="15.40%" height="4.8%" style="fill:#4682B4;fill-opacity:0.35" />
        				<rect x="36.75%" y="96.4%" width="7.25%" height="1.9%" style="fill:none;stroke:#FFFFFF;stroke-width:1px" />
        				<rect x="44.5%" y="96.4%" width="7.25%" height="1.9%" style="fill:none;stroke:#FFFFFF;stroke-width:1px" />
        				<text x="36.75%" y="95.8%" font-family="Super Sans" text-anchor="start" style="fill:#FFFFFF;font-size:15px">Throttle (]]..H..[[%)</text>
                ]]if engine[1]~=nil then if engine[1].getThrust~=nil then H=engine[1].getThrust()/engine[1].getMaxThrust()*100 end end;for P=0,19,1 do if H>0 then O=O.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..36.9+0.35*P.."%\" y=\"96.7%\" style=\"fill:#AFEEEE\" />"end;if H<=0 then O=O.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..36.9+0.35*P.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;H=H-5 end;O=O.."<text x=\"44.5%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">Fuel ("..I.."%)</text>"if I<M and blink then N="#FF0000"else N="#FFD801"end;for P=0,19,1 do if I>0 then O=O.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..44.65+0.35*P.."%\" y=\"96.7%\" style=\"fill:"..N.."\" />"end;if I<=0 then O=O.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..44.65+0.35*P.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;I=I-5 end;local Q,R=d:getBrakeTime()O=O.."<rect x=\""..36.525 .."%\" y=\""..91 .."%\" rx=\"2\" ry=\"2\" width=\"15.4%\" height=\"2.8%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"O=O.."<text x=\""..36.75 .."%\" y=\""..91+2 .."%\" style=\"fill:#FFFFFF;font-size:11px\">".."Break:".."</text>".."<text x=\""..36.525+2.3 .."%\" y=\""..91+2 .."%\" style=\"fill:#FFFFFF;font-size:11px\">"..getDistanceDisplayString(Q,2).." ("..FormatTimeString(R)..")".."</text>"O=O.."<text x=\""..44+0.5 .."%\" y=\""..91+2 .."%\" style=\"fill:#FFFFFF;font-size:11px\">".."MaxSpeed:".."</text>".."<text x=\""..44+4 .."%\" y=\""..91+2 .."%\" style=\"fill:#FFFFFF;font-size:11px\">"..round(maxSpeed*3.6).." km/h</text>"O=O.."</g>"O=O.."<rect x=\"28.25%\" y=\"89.2%\" rx=\"2\" ry=\"2\" width=\"8.2%\" height=\"2.6%\" style=\"fill:#4682B4;fill-opacity:0.35\" />"if d.brake==0 then N="#FFFFFF"else N="#FF0000"end;O=O.."<text x=\"28.5%\" y=\"91.2%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:"..N..";font-size:15px\">".."Handbreak (G) </text>"O=O.."</svg>"c=c+1;if c==15 then if blink then blink=false else blink=true end;c=0 end;return O end;function getDistanceDisplayString(S,T)local U=S>100000;if T==nil then T=1 end;if U then return round(S/1000/200,T).." SU"elseif S<1000 then return round(S,T).." M"else return round(S/1000,T).." KM"end end;function FormatTimeString(V)local W=0;local X=0;local Y=0;if V<60 then V=math.floor(V)elseif V<3600 then W=math.floor(V/60)V=math.floor(V%60)elseif V<86400 then X=math.floor(V/3600)W=math.floor(V%3600/60)else Y=math.floor(V/86400)X=math.floor(V%86400/3600)end;if Y>0 then return Y.."d "..X.."h"elseif X>0 then return X.."h "..W.."m"elseif W>0 then return W.."m "..V.."s"elseif V>0 then return V.."s"else return"0s"end end;return self
        
        end
        package.preload[packagePrefix.."baseflight"] = function()
           local self={}function self:valid(a)return unitType=="remote"or unitType=="command"end;self.version=0.91;self.loadPrio=1000;local b=unit;local c=system;local d={}local e=""local f=true;local g,h,i=construct;g.tags={ver='thrust analog vertical',str='thrust analog lateral',main='thrust analog longitudinal'}function self:register(j)_ENV=j;if not self:valid()then return end;if Nav==nil then Nav=Navigator.new(system,core,unit)end;i=getPlugin("settings",true)i:add("ThrustVecAlign",true,"","Automatically selects Vector with most thrust")if Nav.control.isRemoteControlled()==1 then player.freeze(1)end;local k=0;local l=0;local m=0;local n=0;if vec3(construct.getWorldVelocity()):len()<10 then n=1 end;register:addAction("systemOnUpdate","NavUpdate",function()if f then Nav:update()end end)register:addAction("option2Start","NavUpdate",function()h()end)local o=getPlugin("settings",true)o:add("ToggleBreak",false,"","Break Toggle (on/off)")register:addAction("forwardStart","forwardStartFlight",function()k=-1 end)register:addAction("backwardStart","backwardStartFlight",function()k=1 end)register:addAction("yawleftStart","yawleftStartFlight",function()m=1 end)register:addAction("yawrightStart","yawrightStartFlight",function()m=-1 end)register:addAction("strafeleftStart","strafeleftStartFlight",function()Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.lateral,-1.0)end)register:addAction("straferightStart","straferightStartFlight",function()Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.lateral,1.0)end)register:addAction("leftStart","leftStartFlight",function()l=-1 end)register:addAction("rightStart","rightStartFlight",function()l=1 end)register:addAction("upStart","upStartFlight",function()Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.vertical,1.0)end)register:addAction("downStart","downStartFlight",function()Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.vertical,-1.0)end)register:addAction("gearStart","gearStartFlight",function()if n==1 then n=0 else n=1 end end)register:addAction("brakeStart","brakeStartFlight",function()if o:get("ToggleBreak")then if n==1 then n=0 else n=1 end else n=1 end end)register:addAction("stopenginesStart","stopenginesStartFlight",function()Nav.axisCommandManager:resetCommand(axisCommandId.longitudinal)end)register:addAction("speedupStart","speedupStartFlight",function()Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.longitudinal,5.0)end)register:addAction("speeddownStart","speeddownStartFlight",function()Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.longitudinal,-5.0)end)register:addAction("speedupLoop","speedupLoopFlight",function()Nav.axisCommandManager:updateCommandFromActionLoop(axisCommandId.longitudinal,1.0)end)register:addAction("speeddownLoop","speeddownLoopFlight",function()Nav.axisCommandManager:updateCommandFromActionLoop(axisCommandId.longitudinal,-1.0)end)register:addAction("forwardStop","forwardStopFlight",function()k=0 end)register:addAction("backwardStop","backwardStopFlight",function()k=0 end)register:addAction("yawleftStop","yawleftStopFlight",function()m=0 end)register:addAction("yawrightStop","yawrightStopFlight",function()m=0 end)register:addAction("strafeleftStop","strafeleftStopFlight",function()Nav.axisCommandManager:updateCommandFromActionStop(axisCommandId.lateral,1.0)end)register:addAction("straferightStop","straferightStopFlight",function()Nav.axisCommandManager:updateCommandFromActionStop(axisCommandId.lateral,-1.0)end)register:addAction("leftStop","leftStopFlight",function()l=0 end)register:addAction("rightStop","rightStopFlight",function()l=0 end)register:addAction("upStop","upStopFlight",function()Nav.axisCommandManager:updateCommandFromActionStop(axisCommandId.vertical,-1.0)end)register:addAction("downStop","downStopFlight",function()Nav.axisCommandManager:updateCommandFromActionStop(axisCommandId.vertical,1.0)end)register:addAction("brakeStop","brakeStopFlight",function()if o:get("ToggleBreak")then else n=0 end end)local function p()local c=system;local q=self:getConstruct()local r=0.8;local s=1;local t=1.5;local u=30;local v=5;local w=3;self.brake=n;local x=k+c.getControlDeviceForwardInput()local y=l+c.getControlDeviceYawInput()local z=m-c.getControlDeviceLeftRightInput()local A=n;local B=vec3(core.getWorldVertical())local C=vec3(q.getWorldOrientationUp())local D=vec3(q.getWorldOrientationForward())local E=vec3(q.getWorldOrientationRight())local F=vec3(q.getWorldVelocity())local G=vec3(q.getWorldVelocity()):normalize()local H=getRoll(B,D,E)local I=vec3(q.getWorldAngularVelocity())local J=x*r*E+y*t*D+z*s*C;local K=1;local L=0;local M=1;local N=w*(J-I)local O=vec3(q.getWorldAirFrictionAngularAcceleration())N=N-O;Nav:setEngineTorqueCommand('torque',N,K,'airfoil','','',M)local P=-A*(u*F+v*G)Nav:setEngineForceCommand('brake',P)local Q=''local R=vec3()local S=false;local T=q.tags.main;local U=Nav.axisCommandManager:getAxisCommandType(axisCommandId.longitudinal)if U==axisCommandType.byThrottle then local V=q.getMaxThrustAlongAxis(T,q.getOrientationForward())local W;local X=unit.getAxisCommandValue(axisCommandId.longitudinal)if X>0 then W=X*math.abs(V[3])else W=-X*math.abs(V[4])end;accelerationCommand=W/self:getMass()longitudinalAcceleration=accelerationCommand*D;Nav:setEngineForceCommand(T,longitudinalAcceleration,K)elseif U==axisCommandType.byTargetSpeed then local longitudinalAcceleration=Nav.axisCommandManager:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)Q=Q..' , '..T;R=R+longitudinalAcceleration;if Nav.axisCommandManager:getTargetSpeed(axisCommandId.longitudinal)==0 or Nav.axisCommandManager:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-Nav.axisCommandManager:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then S=true end end;local Y=q.tags.str;local Z=Nav.axisCommandManager:getAxisCommandType(axisCommandId.lateral)if Z==axisCommandType.byThrottle then local _=Nav.axisCommandManager:composeAxisAccelerationFromThrottle(Y,axisCommandId.lateral)_=_:len()*E;Nav:setEngineForceCommand(Y,_,K)elseif Z==axisCommandType.byTargetSpeed then local a0=Nav.axisCommandManager:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)Q=Q..' , '..Y;R=R+a0 end;local a1=q.tags.ver;local a2=Nav.axisCommandManager:getAxisCommandType(axisCommandId.vertical)if a2==axisCommandType.byThrottle then local a3=Nav.axisCommandManager:composeAxisAccelerationFromThrottle(a1,axisCommandId.vertical)a3=a3:len()*C;Nav:setEngineForceCommand(a1,a3,K,'airfoil','ground','',M)elseif a2==axisCommandType.byTargetSpeed then local a4=Nav.axisCommandManager:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)Q=Q..' , '..a1;R=R+a4 end;if R:len()>constants.epsilon then if n~=0 or S or math.abs(G:dot(D))<0.95 then Q=Q..', brake'end;Nav:setEngineForceCommand(Q,R,L,'','','',M)end end;self:addFlightMode("Base",p)self:setFlightMode("Base")register:addAction("systemOnFlush","FlightScript",function()self:getCurrentFlightMode()()end)end;local a5=0;function self:getConstruct()if a5%50==0 then h()end;a5=a5+1;return g end;function h()local a6={}if not i:get("ThrustVecAlign")then g=construct;return end;for a,a7 in pairs(construct)do a6[a]=a7 end;local a8={ver='thrust analog vertical',str='thrust analog lateral',main='thrust analog longitudinal'}local a9={ver={"getOrientationUp","getWorldOrientationUp"},str={"getOrientationRight","getWorldOrientationRight"},main={"getOrientationForward","getWorldOrientationForward"}}local aa={}for a,ab in pairs(a8)do aa[a]=construct.getMaxThrustAlongAxis(ab,construct[a9[a][1]]())end;local ac,ad,ae=0,"main",1;for af,ag in pairs(aa)do if ag[4]>ac then ac=ag[4]ad=af;ae=-1 end;if ag[3]>ac then ac=ag[3]ad=af;ae=1 end end;if ad=="main"then a6.tags=a8;function a6.getOrientationForward()local ah=construct.getOrientationForward()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end;function a6.getOrientationRight()local ah=construct.getOrientationRight()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end;function a6.getOrientationUp()local ah=construct.getOrientationUp()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end;function a6.getWorldOrientationForward()local ah=construct.getWorldOrientationForward()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end;function a6.getWorldOrientationRight()local ah=construct.getWorldOrientationRight()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end;function a6.getWorldOrientationUp()local ah=construct.getWorldOrientationUp()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end elseif ad=="ver"then a6.tags={main=a8.ver,str=a8.str,ver=a8.main}function a6.getOrientationForward()local ah=construct.getOrientationUp()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end;function a6.getOrientationRight()local ah=construct.getOrientationRight()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end;function a6.getOrientationUp()local ah=construct.getOrientationForward()return{ah[1]*ae*-1,ah[2]*ae*-1,ah[3]*ae*-1}end;function a6.getWorldOrientationForward()local ah=construct.getWorldOrientationUp()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end;function a6.getWorldOrientationRight()local ah=construct.getWorldOrientationRight()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end;function a6.getWorldOrientationUp()local ah=construct.getWorldOrientationForward()return{ah[1]*ae*-1,ah[2]*ae*-1,ah[3]*ae*-1}end elseif ad=="str"then a6.tags={main=a8.str,str=a8.main,ver=a8.ver}function a6.getOrientationForward()local ah=construct.getOrientationRight()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end;function a6.getOrientationRight()local ah=construct.getOrientationForward()return{ah[1]*ae*-1,ah[2]*ae*-1,ah[3]*ae*-1}end;function a6.getOrientationUp()local ah=construct.getOrientationUp()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end;function a6.getWorldOrientationForward()local ah=construct.getWorldOrientationRight()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end;function a6.getWorldOrientationRight()local ah=construct.getWorldOrientationForward()return{ah[1]*ae*-1,ah[2]*ae*-1,ah[3]*ae*-1}end;function a6.getWorldOrientationUp()local ah=construct.getWorldOrientationUp()return{ah[1]*ae,ah[2]*ae,ah[3]*ae}end end;g=a6 end;function self:getMass()local ah=construct;local ai=0;for aj,ak in pairs(ah.getPlayersOnBoard())do ai=ai+ah.getBoardedPlayerMass(ak)end;if ai>20000 then ai=ai-20000 end;for aj,ak in pairs(ah.getDockedConstructs())do ai=ai+ah.getDockedConstructMass(ak)end;return ai+ah.getMass()end;function self:getBrakeTime()local ah=100000000/3600;local q=construct;local al=q.getMaxBrake()if al==nil then return 0,0 end;local am=vec3(q.getWorldVelocity()):len()if am<1 then return 0,0 end;local ak=math.min(am,q.getMaxSpeed())local ai=self:getMass()local an=ai*ah/al*math.asin(ak/ah)local ao=ai*ah^2/al*(1-math.sqrt(1-ak^2/ah^2))return ao,an end;function self:addFlightMode(ap,aq)d[ap]=aq end;function self:setFlightMode(ap)e=ap end;function self:getFlightMode(ap)return d[ap]end;function self:getCurrentFlightMode()return self:getFlightMode(e),e end;function self:setUpdateState(c)f=c end;return self
        
        end
        package.preload[packagePrefix.."ar"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="remote"or unitType=="command"end;self.version=0.91;self.loadPrio=1000;self.viewTags={"hud"}local c=unit;local d=system;local e,f;local g=true;function self:register(h)if not self:valid(a)then return end;e=getPlugin("pipes",true,"AQN5B4-@7gSt1W?;")f=getPlugin("locationhandler",true,"AQN5B4-@7gSt1W?;")local i=getPlugin("screener",true)if i~=nil then i:registerDefaultScreen("mainScreenThird","AR")i:addView("AR",self)end;register:addAction("option5Start","PlanetSwitch",function()g=not g end)end;function self:setScreen()local j,k,l=-1,0.1,{}local function m(n,o,p)if n==nil then return{-10,-10,-10}end;if n.x~=nil then n={n.x,n.y,n.z}end;local q=library.getPointOnScreen(n)if q[1]==0 and q[2]==0 and q[3]==0 then q={-10,-10,-10}end;if o~=nil then local r={q[1]-0.5,q[2]-0.5}local s=math.sqrt(r[1]^2+r[2]^2)if s<k then k=s;j=o;l=p end end;return q end;svg=[[
            <style>
                #ArMain .circle-1 {position: absolute; left: 960px; top: 540px;}
                #ArMain .Pointer {stroke:#FFFFFF;stroke-width:2;fill:none}
                #ArMain .Pointer1 {stroke:#00FF00;stroke-width:2;fill:none}
                #ArMain .Pointer2 {stroke:#00FFFF;stroke-width:2;fill:none}
                #ArMain svg {display:block; position:absolute; top:0; left:0}
                #ArMain text {font-family:Montserrat;fill:#FFFFFF;font-size:10px;}
            </style>
            <svg id="ArMain" height="100%" width="100%" viewBox="0 0 1920 1080">
            ]]local t=construct.getWorldPosition()local u=construct.getWorldAbsoluteVelocity()local v=vec3(t)local w=construct.getWorldForward()local q;local x=200000000;local y=f:getStatic()for z,A in pairs(y)do if A.type=="Planet"or A.type=="AlienCore"or A.type=="Station"then else goto B end;q=m(A.pos,z,y)local s=tostring(round((A.pos-v):len()/200000,2))if A.type=="Planet"then svg=svg..[[<svg width="30" height="30" viewBox="-150 -150 300 300" x="]]..q[1]*1920-15 ..[[" y="]]..q[2]*1080-15 ..[[">
                    <g stroke="#ccc" fill="#999" stroke-width="24" opacity="0.6">
                    <ellipse cx="0" cy="0" rx="110" ry="110"/>
                    <path d="m 59,-90 c245,-10 -264,325 -170,110 c-40,130 310,-100 165,-110" stroke-width="12"/>
                    </g></svg>]]if g then svg=svg.."<text x=\""..q[1]*1920-(#A.name+#s)*3 .."\" y=\""..q[2]*1080-20 .."\">"..A.name..": "..s.." su</text>"end elseif A.type=="AlienCore"then svg=svg..[[<svg width="30" height="30" viewBox="-150 -150 300 300" x="]]..q[1]*1920-15 ..[[" y="]]..q[2]*1080-15 ..[[">
                    <g stroke="#a5e" fill="#709" stroke-width="12" opacity="0.6">
                    <path d="m-99,-0 69,120 c17,30 43,30 60,0 m0,0 69,-120 c22,-40 0,-140 -99,-140 c-99,0 -122,100 -99,140"/>
                    <path d="m-85,-20 65,20" stroke-width="24"/>
                    <path d="m85,-20 -65,20" stroke-width="24"/>
                    </g></svg>]]if g then svg=svg.."<text x=\""..q[1]*1920-(#A.name+#s)*3 .."\" y=\""..q[2]*1080-20 .."\">"..A.name..": "..s.." su</text>"end elseif A.type=="Station"then end::B::end;if f.getDynamic~=nil then local C=f:getDynamic()for z,A in pairs(C)do q=m(A.pos,z,C)svg=svg..[[<svg width="40" height="40" viewBox="-150 -150 300 300" x="]]..q[1]*1920-20 ..[[" y="]]..q[2]*1080-20 ..[[">
                    <g stroke="#0f0" stroke-width="24" fill="#0f0">
                    <path d="m-50,-90 50,-60 50,60"/>
                    <path d="m-50,90 50,60 50,-60"/>
                    <g stroke-width="4">
                    <path d="m0,-150 0,100"/>
                    <path d="m0,50 0,100"/>
                    <path d="m5,0 4,0"/>
                    <path d="m-9,0 4,0"/>
                    </g></g></svg>]]if g then local s=tostring(round((A.pos-v):len()/200000,2))svg=svg.."<text x=\""..q[1]*1920-(#A.name+#s)*3 .."\" y=\""..q[2]*1080-25 .."\">"..A.name..": "..s.."su</text>"end end end;if e.nearestSafeZone~=nil then q=m(e.nearestSafeZone)svg=svg.."<circle class=\"Pointer1\" cx=\""..q[1]*1920 .."\" cy=\""..q[2]*1080 .."\" r=\"12\" />"end;if e.pipePoint~=nil then q=m(e.pipePoint)svg=svg.."<circle class=\"Pointer1\" cx=\""..q[1]*1920 .."\" cy=\""..q[2]*1080 .."\" r=\"12\" />"if g then svg=svg.."<text x=\""..q[1]*1920-#"cloPipe"*3 .."\" y=\""..q[2]*1080-25 .."\">".."cloPipe".."</text>"end end;if vec3(u):len()>0.5 then q=m({t[1]+u[1]*x,t[2]+u[2]*x,t[3]+u[3]*x})svg=svg..[[<svg width="30" height="30" viewBox="-150 -150 300 300" x="]]..q[1]*1920-15 ..[[" y="]]..q[2]*1080-15 ..[[">
                <g stroke="#ff0" stroke-width="14" fill="none">
                <ellipse cx="0" cy="0" rx="80" ry="80"/>
                <path d="m0,-150 0,70"/>
                <path d="m-150,0 70,0"/>
                <path d="m150,0 -70,0"/>
                </g></svg>]]q=m({t[1]+u[1]*x*-1,t[2]+u[2]*x*-1,t[3]+u[3]*x*-1})svg=svg..[[<svg width="30" height="30" viewBox="-150 -150 300 300" x="]]..q[1]*1920-15 ..[[" y="]]..q[2]*1080-15 ..[[">
                <g stroke="#ff0" stroke-width="14" fill="none">
                <ellipse cx="0" cy="0" rx="80" ry="80"/>
                <path d="m0,-150 0,70"/>
                <path d="m-69,40 -61,35"/>
                <path d="m69,40 61,35"/>
                <g stroke-width="4">
                <path d="M-57,-57 57,57"/>
                <path d="M-57,57 57,-57"/>
                </g></g></svg>]]end;q=m({t[1]+w[1]*x,t[2]+w[2]*x,t[3]+w[3]*x})svg=svg..[[<svg width="30" height="30" viewBox="-150 -150 300 300" x="]]..q[1]*1920-15 ..[[" y="]]..q[2]*1080-15 ..[[">
                <g stroke="#fff" stroke-width="12" fill="none">
                <ellipse cx="0" cy="0" rx="2" ry="2"/>
                <path d="m-150,0 100,0 50,50 50,-50 100,0"/>
                </g></svg>]]q=m({t[1]+w[1]*x*-1,t[2]+w[2]*x*-1,t[3]+w[3]*x*-1})svg=svg..[[<svg width="30" height="30" viewBox="-150 -150 300 300" x="]]..q[1]*1920-15 ..[[" y="]]..q[2]*1080-15 ..[[">
                <g stroke="#fff" stroke-width="12" fill="none">
                <path d="m-50,-75 -75,75 75,75"/>
                <path d="m50,-75 75,75 -75,75"/>
                <ellipse cx="-100" cy="0" rx="2" ry="2"/>
                <ellipse cx="100" cy="0" rx="2" ry="2"/>
                </g></svg>]]if database.hasKey~=nil and database.hasKey("Leader")then local D=json.decode(database.getStringValue("Leader"))if D~=nil then q=m(D.p)svg=svg.."<circle class=\"Pointer2\" cx=\""..q[1]*1920 .."\" cy=\""..q[2]*1080 .."\" r=\"12\" />"end end;svg=svg.."</svg>"self.closest=l[j]return svg end;function self:getLookAdd()return self.closest end;return self
        
        end
        package.preload[packagePrefix.."commandhandler"] = function()
           local self={}local a={"/","!"}function self:register(b)_ENV=b;if unitType=="gunner"then self.prefix="/"elseif unitType=="remote"then self.prefix="!"else self.prefix="/"end;CommandList={{[self.prefix]={{["help"]=function(c)local d=c[2]if d==nil then for e,f in pairs(CommandList[1][self.prefix][2])do print(e..":  "..f)end end end},{["help"]="use this to list all commands"}}},{[self.prefix]="basic commands from the"..unitType or""}}local function g(h)text=string.lower(h)local i=string.sub(text,1,1)if i==self.prefix then local j=mysplit(string.sub(text,2,#text))local k,l=pcall(CommandList[1][i][1][j[1]],j,h)if not k then print(l)end elseif inTable(a,i)then elseif#text==3 then g("/t "..text)else if unitType=="gunner"then print(h)end end end;register:addAction("systemOnInputText","commandhandler",g)end;self.version=0.91;self.loadPrio=5;function self:AddCommand(m,n,o)CommandList[1][self.prefix][1][m]=n;CommandList[1][self.prefix][2][m]=o or""end;return self
        
        end
        package.preload[packagePrefix.."settings"] = function()
           self={}local a=getPlugin("config")self.version=0.91;self.loadPrio=5;self.Default={}self.Range={}self.Description={}function self:add(b,c,d,e,f)if b==nil or c==nil then return"missing Infos"end;e=e or""f=f or"Standard"if d==nil or type(d)~="table"then local g=type(c)if g=="boolean"then d={"boolean"}elseif g=="number"then d={"number",1,10,1}else return"missing Range Infos"end end;if self.Default[f]==nil then self.Default[f]={}self.Range[f]={}self.Description[f]={}end;self.Default[f][b]=c;self.Range[f][b]=d;self.Description[f][b]=e end;function self:rem(b,f)f=f or"Standard"self.Default[f][b]=nil;self.Range[f][b]=nil;self.Description[f][b]=nil end;function self:set(b,h,f)f=f or"Standard"local i=self.Range[f][b]local g=type(h)if i[1]~=g then return end;if g=="number"then h=utils.clamp(h,i[2],i[3])h=(h-i[2])/i[4]h=round(h)h=h*i[4]+i[2]elseif g=="string"then if not inTable(i[2],h)then return end end;a:set(f..b,h,self.Default[f][b])end;function self:get(b,f)f=f or"Standard"return a:get(f..b,self.Default[f][b])end;function self:register(j)_ENV=j end;return self
        
        end
        package.preload[packagePrefix.."config"] = function()
           local self={}local a=nil;local b={}function self:get(c,d)if a==nil then self:load()end;b[c]=true;if a[c]==nil then return d end;if d~=nil and a[c]==d then a[c]=nil;return d end;return a[c]end;function self:set(c,e,d)if a==nil then self:load()end;b[c]=true;if a[c]~=e then if e==d then a[c]=nil else a[c]=e end;self:save()end end;function self:load()if a==nil then if database.hasKey~=nil and database.hasKey("config"..unitType..unit.getLocalId())==1 then local f=database.getStringValue("config"..unitType..unit.getLocalId())a=json.decode(f)end;if a==nil then a={}end end end;function self:save()if a~=nil then if database.hasKey~=nil then database.setStringValue("config"..unitType..unit.getLocalId(),json.encode(a))end end end;function self:cleanup()if a==nil then return end;local g=false;for h,i in pairs(a)do if b[h]==nil then g=true;a[h]=nil end end;if g then self:save()end end;function self:register(j)_ENV=j;register:addAction("systemStop","configCleanup",function()self:cleanup()end)end;return self
        
        end
        package.preload[packagePrefix.."slots"] = function()
           local self={}self.slots=nil;local a={control=true,library=true,system=true,unit=true,player=true,construct=true}function self:calcSlots()self.slots={}local b=unit or{}for c,d in pairs(b)do if a[c]==nil then if type(c)=="string"and type(d)=="table"and type(d.export)=="table"then self.slots[c]=d end end end;return self.slots end;function self:getSlots()if self.slots==nil then self:calcSlots()end;return self.slots end;self.elementsIdList=nil;function self:calcElementList()if core==nil then return end;self.elementsIdList=core.getElementIdList()end;function self:getElementList()if self.elementsIdList==nil then self:calcElementList()end;return self.elementsIdList end;local e={RemoteControlUnit="remote",CockpitHovercraftUnit="command",PVPSeatUnit="gunner",CockpitCommandmentUnit="command",CockpitFighterUnit="command"}local f={Weapo="weapon",Shiel="shield",Radar="radar",CoreU="core",Stasi="weapon"}local g={AntiGravityGeneratorUnit="antigrav",WarpDriveUnit="warpdrive",DataBankUnit="databases",ReceiverUnit="receiver",EmitterUnit="emitter",ScreenUnit="screens",CombatDefense="transponder",AtmoFuelContainer="atmofueltank",SpaceFuelContainer="spacefueltank",RocketFuelContainer="rocketfueltank",CounterUnit="counter",laserDetector="laser",SpaceEngine="engine"}local h={weapon=true,databases=true,screens=true,atmofueltank=true,spacefueltank=true,rocketfueltank=true,radar=true,engine=true}local i={core={"onStressChanged(stress)"},container={"onContentUpdate()"},industry={"onStarted(id,quantity)","onCompleted(id,quantity)","onStatusChanged(status)","onBankUpdate()"},radar={"onEnter(id)","onLeave(id)","onIdentified(id)"},screens={"mouseDown(x,y)","mouseUp(x,y)","onOutputChanged(output)"},laser={"onHit()","onLoss()"},receiver={"onReceived(channel,message)"},shield={"onToggled(active)","onAbsorbed(hitpoints,rawHitpoints)","onVentin(active,restoredHitpoints)","onDown()","onRestored()"},weapon={"onReload(ammoId)","onReloaded(ammoId)","onMissed(targetId)","onDestroyed(targetId)","onElementDestroyed(targetId,itemId)","onHit(targetId,damage)"}}local function j(k)for l,m in ipairs(k)do local n,o=m:match("^([^(]+)%((.*)%)")local p={}for q in o:gmatch("[^%s,]+")do table.insert(p,q)end;for r,s in ipairs(p)do print(string.format("* Slot name %q has options %q.",n,s))end;local t=map(p,function()return"*"end)for r,s in ipairs(t)do print(string.format("* Slot name %q has options %q.",n,s))end end end;function self:getClassType(u)local type;if g[u]~=nil then type=g[u]else local v=string.sub(u,0,5)if f[v]~=nil then type=f[v]end end;return type end;function self:register(w)_ENV=w;for type,r in pairs(h)do _ENV[type]={}end;for r,x in pairs(self:getSlots())do local u=x.getClass()local type=self:getClassType(u)if type==nil then system.print("Unrecognized Type: "..u)else if h[type]==nil then _ENV[type]=x else table.insert(_ENV[type],x)end end end;function compare(y,z)if y~=nil and y.getLocalId and z~=nil and z.getLocalId then return y.getLocalId()<z.getLocalId()end;return nil end;for type,r in pairs(h)do if#_ENV[type]>1 then table.sort(_ENV[type],compare)end end;if#_ENV["databases"]>0 then local A=getPlugin("bankraid",true)if A~=nil then _ENV["database"]=A:new(_ENV["databases"])else _ENV["database"]=_ENV["databases"][1]end end;if _ENV["unitType"]==nil or _ENV["unitType"]==""then if e[unit.getClass()]~=nil then _ENV["unitType"]=e[unit.getClass()]else end end;register:addAction("antigravityStart","antigravityStart",function()if antigrav~=nil then antigrav.toggle()end end)register:addAction("systemOnUpdate","frameCounter",function()if executeTotal==nil then executeTotal=0 end;if executeSet==nil then executeSet=0 end;executeTotal=executeTotal+1;executeSet=executeSet+1;local B=system.getArkTime()if B-executeTime>1 then executeLastFrames=executeSet;executeSet=1;executeTime=B;local C=false;if C then system.print("Frames: "..executeLastFrames)end end end)register:addAction("systemOnActionStart","systemActionStartAlias",function(D,system)register:callAction(D.."Start",system)register:startHotkeyPressed(D)end)register:addAction("systemOnActionStop","systemActionStopAlias",function(D,system)register:callAction(D.."Stop",system)register:endHotkeyPressed(D)end)register:addAction("systemOnActionLoop","systemActionLoopAlias",function(D,system)register:callAction(D.."Loop",system)end)end;return self
        
        end
        package.preload[packagePrefix.."register"] = function()
           local self={}self.functionRegister={}self.overwriteRegister={}self.overwriteOrder={}self.viewRegister={}self.pressedRegister={}function self:hotkeyState(a)if self.pressedRegister[a]==1 then return 1 end;return 0 end;function self:startHotkeyPressed(a)self.pressedRegister[a]=1 end;function self:endHotkeyPressed(a)self.pressedRegister[a]=nil end;self.switches={}function self:addSwitch(b,c)assert(type(b)=="string","name isn't a string, type was "..type(b))assert(type(c)=="table",b..": entity isn't a table, type was "..type(c))self.switches[b]=c;self:callAction("registerAddSwitch",b)end;function self:getSwitch(b)assert(type(b)=="string","name isn't a string, type was "..type(b))return self.switches[b]end;function self:getSwitches()return self.switches end;self.taskRegister={}self.taskOrder={}local function d(e,f)if e~=nil and f~=nil then return self.taskRegister[e].order<self.taskRegister[f].order end;return nil end;local g=2500;function self:addTask(b,h,i,j)assert(type(b)=="string","addTask: name isn't a string, type was "..type(b))assert(type(h)=="function",b..": func isn't a function, type was "..type(h))if i==nil then i=10 else assert(type(i)=="number",b..": priority has to be number, type was "..type(i))end;if j==nil then j=g else assert(type(j)=="number",b..": rating has to be number, type was "..type(j))assert(j<=g,b..": rating has to be smaller then the allowed max rating of "..g)end;if not self:hasAction("systemUpdate","registerTasker")then self:addAction("systemUpdate","registerTasker",function()self:runTasks()end)end;if self.taskRegister[b]~=nil then self:removeTask(b)end;table.insert(self.taskOrder,b)self.taskRegister[b]={order=i,task=coroutine.create(h),rating=j}if#self.taskOrder>1 then table.sort(self.taskOrder,d)end end;function self:hasTask(b)return self.taskRegister[b]~=nil end;function self:removeTask(b)assert(type(b)=="string","removeTask: Name isn't a string, type was "..type(b))self.taskRegister[b]=nil;for k,l in pairs(self.taskOrder)do if l==b then table.remove(self.taskOrder,k)return end end end;function self:runTasks()local m=0;for n,b in ipairs(self.taskOrder)do local o=self.taskRegister[b]if m+o.rating<=g then if o.task==nil or coroutine.status(o.task)=="dead"then self:removeTask(b)else m=m+o.rating;local p,q=coroutine.resume(o.task)if not p then system.print(b.." in runTasks:",q)self:removeTask(b)end end end end end;function self:hasAction(r,b)return self.functionRegister[r]~=nil and self.functionRegister[r][b]~=nil end;function self:addAction(r,b,h)assert(type(r)=="string","action isn't a string, type was "..type(r))assert(type(b)=="string",r..": name isn't a string, type was "..type(b))assert(type(h)=="function",r..":"..b..": func isn't a function, type was "..type(h))if self.functionRegister[r]==nil then self.functionRegister[r]={}end;self.functionRegister[r][b]=h end;function self:removeAction(r,b)if self.functionRegister[r]==nil or self.functionRegister[r][b]==nil then return false end;self.functionRegister[r][b]=nil;return true end;function self:callAction(r,...)local s={}if self.functionRegister[r]~=nil then for b,h in pairs(self.functionRegister[r])do if h~=nil then local t,u=pcall(h,...)if t then s[b]=u else system.print(b.." in callAction:",u)end end end end;return s end;function self:callActionSpecific(r,b,...)assert(self.functionRegister[r]=="table",r..":".." not registered")assert(self.functionRegister[r][b]=="function",r..":"..b..": called specified function isn't a function, type was "..type(self.functionRegister[r][b]))local t,u=pcall(self.functionRegister[r][b],...)if t then return u else system.print(b.." in callActionSpecific:",u)end end;return self
        
        end
        system.rawPrint=system.print;function system.print(a,b)if b then b=tostring(b):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"','chunk'):gsub("&","&amp;"):gsub("<","&lt;"):gsub(">","&gt;")else b="???"end;system.rawPrint(a.." "..b)end;function print(c)system.rawPrint(tostring(c))end;local d=unit;if devMode==true and player.hasDRMAutorization()~=1 then print("devMode set but no DRM auth")error("devMode set but no DRM auth")d.exit()end;if d.hasDRM()==0 then if devMode~=true then print("DRM Required")error("DRM Required")d.exit()else print("DRM requirement skipped by devMode")end end;d.hideWidget()print("Hyperion Gunner Script V0.98.2")print("by Hyperion Scripting")print("for further information you can contact me on discord: Skeletmaster#9864")system.showScreen(1)system.setScreen([[<svg xmlns="http://www.w3.org/2000/svg" width="40%" style="left:30%;top:10%;display:block; position:absolute;" viewBox="0 0 973.35 837.57">
            <defs>
            <style>
            .cls-1 { fill: #798a99; }
            .cls-2 { fill: #bd1730; }
            </style>
            </defs>
            <path class="cls-1" d="M583,93.5H437.52C353.65,361.21,211.41,603.08,25.7,804.26L98.3,930a1892.42,1892.42,0,0,1,828.89-.22l70.63-122.29C810.63,605.68,667.33,362.63,583,93.5ZM508.29,740.05A945,945,0,0,0,206.5,789.18C357.22,655.35,464.94,474.16,506.32,269c41.16,204.15,148,384.54,297.51,518.13A945.66,945.66,0,0,0,508.29,740.05Z" transform="translate(-25.08 -93)"/>
            <circle class="cls-2" cx="481.42" cy="523.5" r="118"/>
            </svg>
            <svg height="100%" width="100%" viewBox="0 0 1920 1080" style="left:0;top:0;display:block; position:absolute;">
            <text x="40%" y="88%" style="fill:#FFFFFF;font-size:50px">Hyperion Scripting</text>
            </svg>]])local e=require;require=function(f)return print("require '"..f.."': deprecated, use getPlugin()")end;local g={}local h={}function g:fixName(f)local i=packagePrefix;if string.find(f,i)then f=string.gsub(f,i,"")end;return f end;function g:unloadPlugin(f,j,k)assert(type(f)=="string","getPlugin: parameter name has to be string, was "..type(f))f=g:fixName(f)local i=packagePrefix;if type(h[f])=="table"and h[f].valid~=nil then if h[f]:valid(k)~=true then return nil end end;if j then i=""end;if package.loaded~=nil and package.loaded[i..f]~=nil then package.loaded[i..f]=nil end;if h[f]~=nil then if type(h[f])=="table"and type(h[f].unregister)=="function"then h[f].unregister()end;h[f]=nil end end;function g:getPlugin(f,l,k,j)assert(type(f)=="string","getPlugin: parameter name has to be string, was "..type(f))if l==nil then l=false end;f=g:fixName(f)if not g:hasPlugin(f,l,j)then return nil end;if type(h[f])=="table"and h[f].valid~=nil then if h[f]:valid(k)~=true then if not l then print("getPlugin '"..f.."':".." Not valid or compatible")end;return nil end end;return h[f]end;function g:hasPlugin(f,l,j)assert(type(f)=="string","hasPlugin: parameter name has to be string, was "..type(f))if l==nil then l=false end;f=g:fixName(f)local i=packagePrefix;if j then i=""end;if h[f]==nil then h[f]=false;local m,n=pcall(e,i..f)if not m then if l==nil or not l then system.print("hasPlugin '"..f.."': require failed",n)end else h[f]=n end;if type(h[f])=="table"then if h[f].register~=nil then if _ENV["debugscreen"]==nil then _ENV["debugscreen"]=debugscreen end;if _ENV["register"]==nil then _ENV["register"]=register end;if _ENV["system"]==nil then _ENV["system"]=system end;if _ENV["unit"]==nil then _ENV["unit"]=unit end;if _ENV["player"]==nil then _ENV["player"]=player end;if _ENV["construct"]==nil then _ENV["construct"]=construct end;if _ENV["library"]==nil then _ENV["library"]=library end;local o,p=pcall(h[f].register,h[f],_ENV)if not o and not l then system.print("hasPlugin '"..f.."': register failed",p)end end else if h[f]~=nil and h[f]~=false then if type(h[f])=="string"then print("hasPlugin '"..f.."':"..h[f])else print("hasPlugin '"..f.."': not table value")end end end end;return type(h[f])=="table"end;function unloadPlugin(f,j)return g:unloadPlugin(f,j)end;function hasPlugin(f,l,j)return g:hasPlugin(f,l,j)end;function getPlugin(f,l,k,j)return g:getPlugin(f,l,k,j)end;local q={}unitType=""renderEveryXFrames=3;executeTotal=0;executeSet=0;executeTime=0;executeLastFrames=0;screenToggle=true;mode=-1;forceMode=-1;bootTime=system.getArkTime()useLightStyle=false;local r=120;local s=184;modeColors={}modeColors[0]=r;modeColors[1]=s;fuelTankHandlingSpace=5;fuelTankHandlingRocket=0;fuelTankHandlingAtmos=0;ContainerOptimization=5;FuelTankOptimization=5;function collect_keys(t,u)local v={}for w in pairs(t)do v[#v+1]=w end;table.sort(v,u)return v end;function sortedPairs(t,u)local x=collect_keys(t,u)local y=0;return function()y=y+1;if x[y]then return x[y],t[x[y]]end end end;function tableLength(z)local A=0;for B in pairs(z)do A=A+1 end;return A end;function timeit(C,D)collectgarbage()local E=system.getTime()local F=D()local G=system.getTime()print(C..": "..G-E)return F end;function getRelativePitch(H)return math.deg(math.atan(H[2],H[3]))-90 end;function getRelativeYaw(H)return math.deg(math.atan(H[2],H[1]))-90 end;function mysplit(I,J)if J==nil then J="%s"end;local t={}for c in string.gmatch(I,"([^"..J.."]+)")do table.insert(t,c)end;return t end;function inTable(K,L)if type(K)~="table"then return false end;for w,M in pairs(K)do if M==L then return true,w end end;return false end;function round(N,O)local P=10^(O or 0)if O~=nil then return math.floor(N*P+0.5)/P else return math.floor((N*P+0.5)/P)end end;local Q=getPlugin("configuration")if Q.owner~=nil and Q.owner~=""then if not inTable(player.getOrgIds(),Q.owner)then system.print("Corp signatur required")error("Corp signatur required")d.exit()end end;if Q.creater~=nil and Q.creater~=""then if not construct.getCreator()[1]==Q.creater then system.print("Corp creater required")error("Corp creater required")d.exit()end end;register=getPlugin("register")slots=getPlugin("slots")register:callAction("systemStart")local R={}function addTimer(S,T,U)d.setTimer(S,T)R[S]=U end;function onTimer(V)if R[V]~=nil then local W,X=pcall(R[V])if not W then print("Timer:"..X.."  "..V)end end end;function stopTimer()for w,B in pairs(R)do d.setTimer(w,0)end end;local Y=0;function delay(Z,T)local S="DelayCounter"..Y;addTimer(S,T,function()pcall(Z)d.stopTimer(S)end)Y=Y+1 end;register:addAction("unitOnTimer","Timer",onTimer)if devMode==true then getPlugin("dev",true)getPlugin("devTools",true)end;getPlugin("optionals",true)for f,B in sortedPairs(package.preload)do getPlugin(f,true)end;delay(function()register:callAction("unitOnStart")system.setScreen("")end,0.5)
        
    onStop:
      lua: if register ~= nil then register:callAction("unitOnStop",unit) end
    onTimer(tag):
      lua: if register ~= nil then register:callAction("unitOnTimer",tag,unit) end
  system:
    onActionStart(action):
      lua: if register ~= nil then register:callAction("systemOnActionStart",action,system) end
    onActionStop(action):
      lua: if register ~= nil then register:callAction("systemOnActionStop",action,system) end
    onActionLoop(action):
      lua: if register ~= nil then register:callAction("systemOnActionLoop",action,system) end
    onUpdate:
      lua: if register ~= nil then register:callAction("systemOnUpdate",system) end
    onFlush:
      lua: if register ~= nil then register:callAction("systemOnFlush",system) end
    onInputText(text):
      lua: if register ~= nil then register:callAction("systemOnInputText",text,system) end
    onCameraChanged(mode):
      lua: if register ~= nil then register:callAction("systemOnCameraChanged",mode,system) end
  core:
    onStressChanged(stress):
      lua: if register ~= nil then register:callAction("coreOnStressChanged",stress,core) end
  radar_1:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_1) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_1) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_1) end
  radar_2:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_2) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_2) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_2) end
  radar_3:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_3) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_3) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_3) end
  radar_4:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_4) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_4) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_4) end
  radar_5:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_5) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_5) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_5) end
  radar_6:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar_6) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar_6) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar_6) end
  radar:
    onEnter(id):
      lua: if register ~= nil then register:callAction("OnEnter",id,radar) end
    onLeave(id):
      lua: if register ~= nil then register:callAction("OnLeave",id,radar) end
    onIdentified(id):
      lua: if register ~= nil then register:callAction("OnIdentified",id,radar) end
