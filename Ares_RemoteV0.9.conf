name: Ares_RemoteV0.9
slots:
  databank:
    class: DataBank
  warpdrive:
    class: WarpDriveUnit
  core:
    class: CoreUnit
  engine:
    class: Engineunit
    select: manual
handlers:
  unit:
    onStart:
      lua: |
        packagePrefix = "autoconf.custom.AresOS."
        package.preload[packagePrefix.."screener"] = function()
           local self={}local a=false;self.loadPrio=10;local b=getPlugin("config")local c={menuitmwidth=1/8,menuitmheight=1/16,offsetx=0,offsety=0,width=1*1/3,height=1*1/3,tag="screen",totalWidth=1920,totalHeight=1080,perspective="third",parent="mainScreenThird"}local d={}function self:hotkeyState(e)if self.pressedRegister[e]==1 then return 1 end;return 0 end;function self:startHotkeyPressed(e)self.pressedRegister[e]=1 end;function self:endHotkeyPressed(e)self.pressedRegister[e]=nil end;function self:addButton(f,g,h,i,j,k,l)end;function self:addScreen(m,n)curr={}for o,p in pairs(c)do if n[o]==nil then curr[o]=p else curr[o]=n[o]end end;curr["name"]=m;d[m]=curr end;function self:getPerspectiveList()return{"third"}end;function self:getPerspective()return"third"end;local q={}function self:addView(r,s)assert(type(r)=="string","name isn't a string, type was "..type(r))assert(type(s)=="table",r..": viewObj isn't a table, type was "..type(s))q[r]=s;register:callAction("registerAddView",r)end;function self:removeView(r)if q[r]==nil then return false end;q[r]=nil;register:callAction("registerRemoveView",r)end;function self:getViewList(t)local u={}for v,w in pairs(q)do if w==nil or w.viewTags==nil then system.print("No view tags: '"..v)else for x,y in pairs(w.viewTags)do if t==nil or y==t then table.insert(u,v)end end end end;table.sort(u)return u end;function self:renderView(r,screen,...)if q[r]==nil then system.print("Render of view '"..(r or"???").."' failed, because it there is no such view registered!","")end;local s=q[r]if s.setScreen~=nil then local z,A=pcall(s.setScreen,s,screen,...)if z then return A else system.print(r.." in setScreen:",A)return nil end else system.print(r.." render has no function 'setScreen'")end end;function self:renderViewRequireRerender(r,screen,...)if self.viewRegister[r]==nil then system.print("Rerender request of view '"..(r or"???").."' failed, because it there is no such view registered!","")end;local s=q[r]if s.requireRerender~=nil then local z,A=pcall(s.requireRerender,s,screen,...)if z then return A else system.print(r.." in renderViewRequireRerender:",A)return nil end end;return true end;function self:actionToHtml(B,...)local C,D=register:callAction(B,...),""for x,p in pairs(C)do if p then D=D..p end end;return D end;function screenObj(r)return d[r]end;function drawAllScreensCss()local E=self:getPerspective()if modeColors[E]==nil then modeColors[E]=290 end;local F=math.max(0,math.min(modeColors[E],360))local G=F+270.0;if G>360 then G=G-360 end;local H=F+180.0;if H>360 then H=H-360 end;local I=[[
                                    * { font-family:Montserrat }
                                    body { margin: 0}
                                    svg {display:block; position:absolute; top:auto; left:auto}
                                    svg svg { overflow: visible }
                                    .screenSvg { position: relative; margin: auto 0; }
                                    .screen { margin:0; padding:0; position: absolute; left: 0; top: 0; border: 2px solid transparent }
                                ]]if a then I=I..[[
                                        .screen { border: 2px solid hsl(]]..F..[[, 93.6%, 56.9%) }
                                        .menu { position: absolute; right: 0; top: 0; width: 100%; height: 3.125%; overflow: hidden; z-index: 1000 }
                                        .mItm { z-index:inherit; background-color:hsl(]]..F..[[, 100%, 50%);position: relative; float: right; height: 100%; width: calc(100% / 24); border: 2px solid hsl(]]..F..[[, 93.6%, 56.9%); overflow: hidden; color: white;display: flex;align-items: center;justify-content: center; }
                                    ]]end;for r,x in pairs(d)do screen=screenObj(r)I=I..[[
                                        #]]..r..[[ { width: ]]..screen.width*100 ..[[%; height: ]]..screen.height*100 ..[[%; top: ]]..screen.offsety*100 ..[[%; left: ]]..screen.offsetx*100 ..[[% }
                                    ]]if a then I=I..[[
                                            #]]..r..[[ > .menu { height: ]]..screen.menuitmheight*100 ..[[% }
                                            #]]..r..[[ > .menu .mItm { width: ]]..screen.menuitmwidth*100 ..[[% }
                                        ]]for J,f in pairs(self:getViewList(screen.tag))do local K="scval_"..r.."_"..f;local curr=b:get(K,0)if curr==1 then I=I..[[
                                                    #]]..r..[[ > .menu .mItm.n]]..J..[[ { background-color:hsl(]]..H..[[, 100%, 50%) }
                                                ]]end end end end;return I end;register:addAction("staticCssStyle","drawAllScreensCss",drawAllScreensCss)local L={}function drawAllScreens()local M=0;local N,O=self:actionToHtml("staticCssStyle"),""if a then for J,r in pairs(self:getViewList("screen"))do O=O..'<div class="mItm text n'..J..'">'..r.."</div>"end end;local P,Q,R,screens={},{},{},{}local E=self:getPerspective()local S=[[
                                        <div class="menu screentag">
                                            ]]..O..[[
                                        </div>
                                    ]]for r,x in pairs(d)do screen=screenObj(r)if E==screen.perspective then if screen.tag=="screen"then if Q[screen.parent]==nil then Q[screen.parent]=""end;if a then end;Q[screen.parent]=Q[screen.parent]..[[
                                           <div id="]]..r..[[" class="screen">
                                            ]]..S..[[
                                            ]]..self:actionToHtml(r.."Html")..[[
                                           </div>]]end end end;S=[[
                                        <div class="menu hudtag">
                                            ]]..O..[[
                                        </div>
                                    ]]for r,x in pairs(d)do screen=screenObj(r)if E==screen.perspective then if screen.tag=="hud"then if R[screen.parent]==nil then R[screen.parent]=""end;if Q[r]==nil then Q[r]=""end;R[screen.parent]=R[screen.parent]..[[
        									   <div id="]]..r..[[" class="screen">
        										]]..S..[[
        										]]..self:actionToHtml(r.."Html")..[[
        										]]..Q[r]..[[
        									   </div>]]end end end;local T=""for r,D in pairs(R)do T=T..D end;local U=[[
                                    <head>
                                        <style>
                                            ]]..N..[[
                                        </style>
                                    </head>
                                    <body>
                                        ]]..T..[[
                                    </body>
                                ]]if debugscreen~=nil then debugscreen.setHTML(U)end;if#screens>0 then for V,W in pairs(screens)do local r,X="screen"..V,nil;local screen=screenObj(r)for x,f in pairs(self:getViewList(screen.tag))do local Y=r.."_"..f;local K="scval_"..Y;local curr=b:get(K,0)if curr==1 then if self:renderViewRequireRerender(f,W.getMouseX(),W.getMouseY(),W.getMouseState()==1,"real"..Y)then if X==nil then X=""end;X=X..self:renderView(f,W.getMouseX(),W.getMouseY(),W.getMouseState()==1,"real"..Y)end end end;if X~=nil then W.setHTML(X)end end end;system.setScreen(U)end;function self:triggerViewMouseEvent(Z,r,h,i,_,...)if self.viewRegister[r]==nil then system.print("Render of view '"..(r or"???").."' failed, because it there is no such view registered!","")end;local s=self.viewRegister[r]local a0=s.onMouseUp;if Z==false then a0=s.onMouseDown end;if a0 then local z,A=pcall(a0,s,h,i,_,...)if z then return A else system.print(r..": error in triggerViewMouseEvent:",Z,A)return nil end else end end;function self:registerDefaultScreen(m,f)local K="scval_"..m.."_"..f;if devMode then print("registering default view "..K)end;b:set(K,1,0)end;function self:register(a1)_ENV=a1;c.totalWidth=system.getScreenWidth()c.totalHeight=system.getScreenHeight()function setActionHtml(m,f)local screen=screenObj(m)local Y=m.."_"..f;local K="scval_"..Y;local curr=b:get(K,0)if curr==1 then if devMode then print("register setActionHtml for "..K)end;register:addAction(m.."Html",Y.."Html",function()local a2=(system.getMousePosX()/c.totalWidth-screen.offsetx)/screen.width;local a3=(system.getMousePosY()/c.totalHeight-screen.offsety)/screen.height;if a==false then a2,a3=-1,-1 end;return self:renderView(f,a2,a3,false,Y)end)else register:removeAction(m.."Html",Y.."Html")end end;function realMouseEvent(Z,screen,a4,h,i)local m=screen.name;for x,W in pairs(screens)do if W.getId()==a4.getId()then for x,f in pairs(register:getViewList(screen.tag))do local Y=m.."_"..f;local K="scval_"..Y;local curr=b:get(K,0)if curr==1 then self:triggerViewMouseEvent(Z,f,h,i,"real"..Y)end end;return true end end;return false end;function virtualMouseEvent(Z,screen,a5,a6,a7)local E,m=self:getPerspective(),screen.name;local a8,a9=screen.width,screen.height;local aa=screen.menuitmwidth*screen.width;local ab=screen.menuitmheight*screen.height;local ac=a5-screen.offsetx;local ad=a6-screen.offsety;if ac>=0 and ac<a8 then if ad>=0 and ad<a9 then if ad<ab then for ae,f in pairs(self:getViewList(screen.tag))do local af,ag=ae*aa,(ae-1)*aa;if ac>a8-af and ac<=a8-ag then local Y=m.."_"..f;local K="scval_"..Y;local curr=b:get(K,0)if curr==1 then b:set(K,0,0)else b:set(K,1,0)end;setActionHtml(m,f)end end else for x,f in pairs(self:getViewList(screen.tag))do local Y=m.."_"..f;local K="scval_"..Y;local curr=b:get(K,0)if curr==1 then self:triggerViewMouseEvent(Z,f,ac/a8,ad/a9,Y)end end end;if devMode then print("Screen "..m.." Type "..a7 .." Relative x "..ac.." Relateive y "..ad)end;return true end end;return false end;function tableLength(ah)assert(type(ah)=='table','bad parameter #1: must be table')local ai=0;for x in pairs(ah)do ai=ai+1 end;return ai end;function initAllScreens()screenObjCache={}if devMode then print("reinitialize all "..tableLength(d).." screens")end;for r,x in pairs(d)do local screen=screenObj(r)for x,f in pairs(self:getViewList(screen.tag))do setActionHtml(r,f)end;register:addAction("screenMouseUp","realScreenMouseUp"..r,function(a4,h,i)realMouseEvent(true,screen,a4,h,i)end)register:addAction("screenMouseDown","realScreenMouseUp"..r,function(a4,h,i)realMouseEvent(false,screen,a4,h,i)end)register:addAction("mouseUp","screenMouseUp"..r,function(a5,a6,a7)virtualMouseEvent(true,screen,a5,a6,a7)end)register:addAction("mouseDown","screenMouseDown"..r,function(a5,a6,a7)virtualMouseEvent(true,screen,a5,a6,a7)end)end end;self:addScreen("mainScreenFirst",{menuitmwidth=1/24,menuitmheight=1/32,width=1,height=1,tag="hud",perspective="first"})self:addScreen("mainScreenThird",{menuitmwidth=1/24,menuitmheight=1/32,width=1,height=1,tag="hud"})self:addScreen("screen1first",{offsetx=0,perspective="first",parent="mainScreenFirst"})self:addScreen("screen1third",{offsetx=0})self:addScreen("screen2first",{offsetx=0,offsety=1*1/3,perspective="first",parent="mainScreenFirst"})self:addScreen("screen2third",{offsetx=0,offsety=1*1/3})self:addScreen("screen3first",{offsetx=1*0.63,offsety=1*0.25,width=1*0.23,height=1*0.23,perspective="first",parent="mainScreenFirst"})self:addScreen("screen3third",{offsetx=1*0.63,offsety=1*0.25,width=1*0.23,height=1*0.23})self:addScreen("screen4first",{offsetx=1*0.56,offsety=0,width=1*0.20,height=1*0.25,perspective="first",parent="mainScreenFirst"})self:addScreen("screen4third",{offsetx=1*0.56,offsety=0,width=1*0.20,height=1*0.25})register:addAction("registerAddView","viewRegisterWatcher",initAllScreens)initAllScreens()register:addAction("unitOnStart","Screener",function()register:addAction("systemOnUpdate","drawAllScreens",function()if databaseHasChild~=true and screenToggle and(executeTotal==1 or executeTotal%renderEveryXFrames==0)then drawAllScreens()end end)register:addAction("leftmouseStart","mouseStartTracker",function()if a then local a2=system.getMousePosX()/c.totalWidth;local a3=system.getMousePosY()/c.totalHeight;register:callAction("mouseDown",a2,a3,"hud")return true else return false end end)register:addAction("leftmouseStop","mouseStopTracker",function()if a then local a2=system.getMousePosX()/c.totalWidth;local a3=system.getMousePosY()/c.totalHeight;register:callAction("mouseUp",a2,a3,"hud")return true else return false end end)end)local aj=getPlugin("CommandHandler")aj:AddCommand("setup",function(ak)a=not a;if a then print("setupMode on")else print("setupMode off")end end,"Activate/Deactivate screener setup mode")end;return self
        
        end
        package.preload[packagePrefix.."Pipes"] = function()
           local self={}local c="AQN5B4-@7gSt1W?;"function self:valid(d)if d~=c then return false end;return unitType=="remote"or unitType=="command"end;self.version=0.9;self.loadPrio=1000;self.viewTags={"hud"}local e=unit;local f=system;local g;local h,i;function self:register(j)if not self:valid(c)then return end;g=require("atlas")listPlanets={}for k,m in pairs(g[0])do if k>=400 then break end;table.insert(listPlanets,{m.name[1],vec3(m.center)})end;i={}for k,m in pairs(g[0])do if k>=400 then break end;table.insert(i,{m.name[1],vec3(m.center),500000})end;table.insert(i,{"Central Zone",vec3(13771471,7435803,-128971),18000000})h=initPipes(listPlanets,false)nearestSafeZone(i)local n=getPlugin("screener",true)if n~=nil then n:registerDefaultScreen("mainScreenThird","Pipe")n:addView("Pipe",self)end end;function self:setScreen()local o=[[
        		<style>
        			#pipeMain, #pipeMain svg {display:block; position:absolute; top:0; left:0}
        			#pipeMain .text {fill:aqua;font-family:Montserrat;font-weight:bold}
        		</style>
        
                <svg id="pipeMain" height="94.5%" width="100%" viewBox=\"0 0 1920 1080\">]]o=o.."<g font-family=\"Super Sans\" font-size=\"14px\">".."<rect x=\""..1.65 .."%\" y=\""..65.65 .."%\" rx=\"2\" ry=\"2\" width=\"12%\" height=\"5.2%\" style=\"fill:#4682B4;fill-opacity:0.35\" />"local p,q=nearestPipe(h)local s,t=distanceSafeZone(nearestSafeZone(i))if q<100000 then q=tostring(math.floor(q/10)/100).." km"else q=tostring(math.floor(q/1000/2)/100).." su"end;o=o.."<text x=\""..1.65+0.5 .."%\" y=\""..65.65+2 .."%\" style=\"fill:#FFFFFF\">Pipe "..p.."</text>".."<text x=\""..1.65+8.5 .."%\" y=\""..65.65+2 .."%\" style=\"fill:#FFFFFF\">"..q.."</text>"local u;if t>=0 then u="#00FF00"else u="#FF0000"end;if t<100000 and t>-100000 then t=tostring(math.floor(t/10)/100).." km"else t=tostring(math.floor(t/1000/2)/100).." su"end;o=o.."<text x=\""..1.65+0.5 .."%\" y=\""..65.65+4 .."%\" style=\"fill:#FFFFFF\">Safezone "..s.."</text>".."<text x=\""..1.65+8.5 .."%\" y=\""..65.65+4 .."%\" style=\"fill:"..u.."\">"..t.."</text>"return o.."</svg>"end;function initPipes(v,w)local x={}if w then for y=2,#v,1 do table.insert(x,{v[1][1].." - "..v[y][1],v[1][2],vec3(v[y][2])-vec3(v[1][2])})end else for z=1,#v-1,1 do for y=z+1,#v,1 do table.insert(x,{v[z][1].." - "..v[y][1],v[z][2],vec3(v[y][2])-vec3(v[z][2])})end end end;return x end;function nearestPipe(x)local A=vec3(construct.getWorldPosition())local B=0;local C=0;local D=0;for y=1,#x,1 do a=x[y][2]-A;b=x[y][3]r=(-1*a.x*b.x-a.y*b.y-a.z*b.z)/(b.x*b.x+b.y*b.y+b.z*b.z)l=vec3(x[y][2].x+r*b.x,x[y][2].y+r*b.y,x[y][2].z+r*b.z)B=(l-A):len()if(C==0 or B<C)and r>=0 and r<=1 then C=B;D=y end end;return x[D][1],C end;function nearestSafeZone(E)local A=vec3(construct.getWorldPosition())local F=0;local G=0;local H;for y=1,#E,1 do H=math.abs(vec3(A-E[y][2]):len()-E[y][3])if F==0 or H<F then G=y;F=H end end;return E[G]end;function distanceSafeZone(I)local A=vec3(construct.getWorldPosition())local J=vec3(A-I[2]):len()return I[1],construct.getDistanceToSafeZone()*-1 end;function self:getSafeZone()return contactSafeZone(nearestSafeZone(i))end;function contactSafeZone(I)local A=vec3(construct.getWorldPosition())local l=vec3(A-I[2]):len()local r=I[3]/l;local K=I[2]+r*vec3(A-I[2])self.nearestSafeZone=K;return K end;return self
        
        end
        package.preload[packagePrefix.."FlightHud"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="remote"or unitType=="command"end;self.version=0.9;self.loadPrio=1000;self.viewTags={"hud"}local c=unit;local d=system;local e=0;local f;function self:register(g)if not self:valid(a)then return end;f=getPlugin("BaseFlight",true,"AQN5B4-@7gSt1W?;")if f==nil then return end;if core==nil then return end;self.SpaceTanks,self.RocketTanks=getTankId()local h=getPlugin("screener",true)if h~=nil then h:registerDefaultScreen("mainScreenThird","FlightHud")h:addView("FlightHud",self)end end;function CalculateFuelLevel(i)return(core.getElementMassById(i[1])-i["me"])/i["mv"]end;function getTankId()local j={}local k={}local l=core.getElementIdList()local function m(n)local o,p=0,0;if ContainerOptimization>0 then o=ContainerOptimization*0.05 end;if FuelTankOptimization>0 then p=FuelTankOptimization*0.05 end;return n*(1-(o+p))end;for q,i in pairs(l)do local r=core.getElementDisplayNameById(i)if r=="Space Fuel Tank"then local s=core.getElementMaxHitPointsById(i)local t=2400;local u=182.67;if s>10000 then t=76800;u=5480 elseif s>1300 then t=9600;u=988.67 end;t=t+t*fuelTankHandlingSpace*0.2;table.insert(j,{[1]=i,["mv"]=m(t),["me"]=u})elseif r=="Rocket Fuel Tank"then local s=core.getElementMaxHitPointsById(i)local t=400*0.8;local u=173.42;if s>65000 then t=50000*0.8;u=25740 elseif s>6000 then t=6400*0.8;u=4720 elseif s>700 then t=800*0.8;u=886.72 end;t=t+t*fuelTankHandlingRocket*0.2;table.insert(k,{[1]=i,["mv"]=m(t),["me"]=u})end end;table.sort(j,function(v,w)return v[1]<w[1]end)table.sort(k,function(v,w)return v[1]<w[1]end)return j,k end;function self:setScreen()if construct.getMaxSpeed()<700000 then maxSpeed=construct.getMaxSpeed()end;local x=math.floor(unit.getAxisCommandValue(axisCommandId.longitudinal)*100)local y=100;for z,A in pairs(self.SpaceTanks)do local B=CalculateFuelLevel(A)*100;if B<y then y=B end end;y=round(y)local C=20;local D;local E=[[
        			<style>
        				#FlightHudMain, #FlightHudMain svg {display:block; position:absolute; top:0; left:0} 
        				#FlightHudMain .majorLine {stroke:aqua;opacity:0.7;stroke-width:3;fill-opacity:0;}
        				#FlightHudMain .minorLine {stroke:aqua;opacity:0.3;stroke-width:3;fill-opacity:0;}
        				#FlightHudMain .text {fill:aqua;font-family:Montserrat;font-weight:bold}
        			</style>
                    <svg id="FlightHudMain" height="94.5%" width="100%" viewBox="0 0 1920 1080">
        				<rect x="36.525%" y="93.95%" rx="2" ry="2" width="15.40%" height="4.8%" style="fill:#4682B4;fill-opacity:0.35" />
        				<rect x="36.75%" y="96.4%" width="7.25%" height="1.9%" style="fill:none;stroke:#FFFFFF;stroke-width:1px" />
        				<rect x="44.5%" y="96.4%" width="7.25%" height="1.9%" style="fill:none;stroke:#FFFFFF;stroke-width:1px" />
        				<text x="36.75%" y="95.8%" font-family="Super Sans" text-anchor="start" style="fill:#FFFFFF;font-size:15px">Throttle (]]..x..[[%)</text>
                ]]if engine[1]~=nil then if engine[1].getThrust~=nil then x=engine[1].getThrust()/engine[1].getMaxThrust()*100 end end;for F=0,19,1 do if x>0 then E=E.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..36.9+0.35*F.."%\" y=\"96.7%\" style=\"fill:#AFEEEE\" />"end;if x<=0 then E=E.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..36.9+0.35*F.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;x=x-5 end;E=E.."<text x=\"44.5%\" y=\"95.8%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:#FFFFFF;font-size:15px\">Fuel ("..y.."%)</text>"if y<C and blink then D="#FF0000"else D="#FFD801"end;for F=0,19,1 do if y>0 then E=E.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..44.65+0.35*F.."%\" y=\"96.7%\" style=\"fill:"..D.."\" />"end;if y<=0 then E=E.."<rect width=\"0.25%\" height=\"1.225%\" x=\""..44.65+0.35*F.."%\" y=\"96.7%\" style=\"fill:#2C3539\" />"end;y=y-5 end;local G,H=f:getBrakeTime()E=E.."<rect x=\""..36.525 .."%\" y=\""..91 .."%\" rx=\"2\" ry=\"2\" width=\"15.4%\" height=\"2.8%\" style=\"fill:#4682B4;fill-opacity:0.35\"/>"E=E.."<text x=\""..36.75 .."%\" y=\""..91+2 .."%\" style=\"fill:#FFFFFF;font-size:11px\">".."Break:".."</text>".."<text x=\""..36.525+2.3 .."%\" y=\""..91+2 .."%\" style=\"fill:#FFFFFF;font-size:11px\">"..getDistanceDisplayString(G,2).." ("..FormatTimeString(H)..")".."</text>"E=E.."<text x=\""..44+0.5 .."%\" y=\""..91+2 .."%\" style=\"fill:#FFFFFF;font-size:11px\">".."MaxSpeed:".."</text>".."<text x=\""..44+4 .."%\" y=\""..91+2 .."%\" style=\"fill:#FFFFFF;font-size:11px\">"..round(maxSpeed*3.6).." km/h</text>"E=E.."</g>"E=E.."<rect x=\"28.25%\" y=\"89.2%\" rx=\"2\" ry=\"2\" width=\"8.2%\" height=\"2.6%\" style=\"fill:#4682B4;fill-opacity:0.35\" />"if f.brake==0 then D="#FFFFFF"else D="#FF0000"end;E=E.."<text x=\"28.5%\" y=\"91.2%\" font-family=\"Super Sans\" text-anchor=\"start\" style=\"fill:"..D..";font-size:15px\">".."Handbreak (G) </text>"E=E.."</svg>"e=e+1;if e==15 then if blink then blink=false else blink=true end;e=0 end;return E end;function getDistanceDisplayString(I,J)local K=I>100000;if J==nil then J=1 end;if K then return round(I/1000/200,J).." SU"elseif I<1000 then return round(I,J).." M"else return round(I/1000,J).." KM"end end;function FormatTimeString(L)local M=0;local N=0;local O=0;if L<60 then L=math.floor(L)elseif L<3600 then M=math.floor(L/60)L=math.floor(L%60)elseif L<86400 then N=math.floor(L/3600)M=math.floor(L%3600/60)else O=math.floor(L/86400)N=math.floor(L%86400/3600)end;if O>0 then return O.."d "..N.."h"elseif N>0 then return N.."h "..M.."m"elseif M>0 then return M.."m "..L.."s"elseif L>0 then return L.."s"else return"0s"end end;return self
        
        end
        package.preload[packagePrefix.."BaseFlight"] = function()
           local self={}function self:valid(a)return unitType=="remote"or unitType=="command"end;self.version=0.9;self.loadPrio=1000;local b=unit;local c=system;local d={}local e=""function self:register(f)_ENV=f;if not self:valid()then return end;if Nav==nil then Nav=Navigator.new(system,core,unit)end;if Nav.control.isRemoteControlled()==1 then player.freeze(1)end;local g=0;local h=0;local i=0;local j=0;if vec3(construct.getWorldVelocity()):len()<10 then j=1 end;register:addAction("systemOnUpdate","NavUpdate",function()Nav:update()end)register:addAction("forwardStart","forwardStartFlight",function()g=-1 end)register:addAction("backwardStart","backwardStartFlight",function()g=1 end)register:addAction("yawleftStart","yawleftStartFlight",function()i=1 end)register:addAction("yawrightStart","yawrightStartFlight",function()i=-1 end)register:addAction("strafeleftStart","strafeleftStartFlight",function()Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.lateral,-1.0)end)register:addAction("straferightStart","straferightStartFlight",function()Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.lateral,1.0)end)register:addAction("leftStart","leftStartFlight",function()h=-1 end)register:addAction("rightStart","rightStartFlight",function()h=1 end)register:addAction("upStart","upStartFlight",function()Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.vertical,1.0)end)register:addAction("downStart","downStartFlight",function()Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.vertical,-1.0)end)register:addAction("gearStart","gearStartFlight",function()if j==1 then j=0 else j=1 end end)register:addAction("brakeStart","brakeStartFlight",function()j=1 end)register:addAction("stopenginesStart","stopenginesStartFlight",function()Nav.axisCommandManager:resetCommand(axisCommandId.longitudinal)end)register:addAction("speedupStart","speedupStartFlight",function()Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.longitudinal,5.0)end)register:addAction("speeddownStart","speeddownStartFlight",function()Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.longitudinal,-5.0)end)register:addAction("speedupLoop","speedupLoopFlight",function()Nav.axisCommandManager:updateCommandFromActionLoop(axisCommandId.longitudinal,1.0)end)register:addAction("speeddownLoop","speeddownLoopFlight",function()Nav.axisCommandManager:updateCommandFromActionLoop(axisCommandId.longitudinal,-1.0)end)register:addAction("forwardStop","forwardStopFlight",function()g=0 end)register:addAction("backwardStop","backwardStopFlight",function()g=0 end)register:addAction("yawleftStop","yawleftStopFlight",function()i=0 end)register:addAction("yawrightStop","yawrightStopFlight",function()i=0 end)register:addAction("strafeleftStop","strafeleftStopFlight",function()Nav.axisCommandManager:updateCommandFromActionStop(axisCommandId.lateral,1.0)end)register:addAction("straferightStop","straferightStopFlight",function()Nav.axisCommandManager:updateCommandFromActionStop(axisCommandId.lateral,-1.0)end)register:addAction("leftStop","leftStopFlight",function()h=0 end)register:addAction("rightStop","rightStopFlight",function()h=0 end)register:addAction("upStop","upStopFlight",function()Nav.axisCommandManager:updateCommandFromActionStop(axisCommandId.vertical,-1.0)end)register:addAction("downStop","downStopFlight",function()Nav.axisCommandManager:updateCommandFromActionStop(axisCommandId.vertical,1.0)end)register:addAction("brakeStop","brakeStopFlight",function()j=0 end)local function k()local l=1.6;local m=2;local n=3;local o=30;local p=5;local q=3;self.brake=j;local r=g+system.getControlDeviceForwardInput()local s=h+system.getControlDeviceYawInput()local t=i-system.getControlDeviceLeftRightInput()local u=j;local v=vec3(core.getWorldVertical())local w=vec3(construct.getWorldOrientationUp())local x=vec3(construct.getWorldOrientationForward())local y=vec3(construct.getWorldOrientationRight())local z=vec3(construct.getWorldVelocity())local A=vec3(construct.getWorldVelocity()):normalize()local B=getRoll(v,x,y)local C=math.abs(B)local D=utils.sign(B)local E=vec3(construct.getWorldAngularVelocity())local F=r*l*y+s*n*x+t*m*w;local G=1;local H=0;local I=1;local J=q*(F-E)local K=vec3(construct.getWorldAirFrictionAngularAcceleration())J=J-K;Nav:setEngineTorqueCommand('torque',J,G,'airfoil','','',I)local L=-u*(o*z+p*A)Nav:setEngineForceCommand('brake',L)local M=''local N=vec3()local O=false;local P='thrust analog longitudinal'local Q=Nav.axisCommandManager:getAxisCommandType(axisCommandId.longitudinal)if Q==axisCommandType.byThrottle then local R=Nav.axisCommandManager:composeAxisAccelerationFromThrottle(P,axisCommandId.longitudinal)Nav:setEngineForceCommand(P,R,G)elseif Q==axisCommandType.byTargetSpeed then local R=Nav.axisCommandManager:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)M=M..' , '..P;N=N+R;if Nav.axisCommandManager:getTargetSpeed(axisCommandId.longitudinal)==0 or Nav.axisCommandManager:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-Nav.axisCommandManager:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then O=true end end;local S='thrust analog lateral'local T=Nav.axisCommandManager:getAxisCommandType(axisCommandId.lateral)if T==axisCommandType.byThrottle then local U=Nav.axisCommandManager:composeAxisAccelerationFromThrottle(S,axisCommandId.lateral)Nav:setEngineForceCommand(S,U,G)elseif T==axisCommandType.byTargetSpeed then local V=Nav.axisCommandManager:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)M=M..' , '..S;N=N+V end;local W='thrust analog vertical'local X=Nav.axisCommandManager:getAxisCommandType(axisCommandId.vertical)if X==axisCommandType.byThrottle then local Y=Nav.axisCommandManager:composeAxisAccelerationFromThrottle(W,axisCommandId.vertical)Nav:setEngineForceCommand(W,Y,G,'airfoil','ground','',I)elseif X==axisCommandType.byTargetSpeed then local Z=Nav.axisCommandManager:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)M=M..' , '..W;N=N+Z end;if N:len()>constants.epsilon then if j~=0 or O or math.abs(A:dot(x))<0.95 then M=M..', brake'end;Nav:setEngineForceCommand(M,N,H,'','','',I)end end;self:addFlightMode("Base",k)self:setFlightMode("Base")register:addAction("systemOnFlush","FlightScript",function()local _=self:getCurrentFlightMode()_()end)end;function self:getMass()local a0=construct;local a1=a0.getMass()for a2,a3 in pairs(a0.getDockedConstructs())do a1=a1+a0.getDockedConstructMass(a1)end;for a2,a3 in pairs(a0.getPlayersOnBoard())do a1=a1+a0.getBoardedPlayerMass(a1)end;return a1 end;function self:getBrakeTime()local a0=75000/3.6;local a4=construct.getMaxBrake()if a4==nil then return 0,0 end;local a5=vec3(construct.getWorldVelocity()):len()if a5<1 then return 0,0 end;local a3=math.min(a5,maxSpeed)local a1=self:getMass()local a6=a1*a0/a4*math.asin(a3/a0)local a7=a1*a0^2/a4*(1-math.sqrt(1-a3^2/a0^2))return a7,a6 end;function self:addFlightMode(a8,a9)d[a8]=a9 end;function self:setFlightMode(a8)e=a8 end;function self:getFlightMode(a8)return d[a8]end;function self:getCurrentFlightMode()return self:getFlightMode(e)end;return self
        
        end
        package.preload[packagePrefix.."AR"] = function()
           local self={}local a="AQN5B4-@7gSt1W?;"function self:valid(b)if b~=a then return false end;return unitType=="remote"or unitType=="command"end;self.version=0.9;self.loadPrio=1000;self.viewTags={"hud"}local c=unit;local d=system;local e;local f;local g=true;function self:register(h)if not self:valid(a)then return end;e=getPlugin("Pipes",true,"AQN5B4-@7gSt1W?;")f=getPlugin("BaseFlight",true,"AQN5B4-@7gSt1W?;")local i=getPlugin("screener",true)if i~=nil then i:registerDefaultScreen("mainScreenThird","AR")i:addView("AR",self)end;Atlas=require("atlas")if pcall(require,"specialCoords")then local j=require("specialCoords")for k,l in pairs(j)do table.insert(Atlas[0],l)end end;local m={{name={"Alpha","Alpha","Alpha"},type={"AlienCore","AlienCore","AlienCore"},center={33946000.0000,71381990.0000,28850000.0000}},{name={"Beta","Beta","Beta"},type={"AlienCore","AlienCore","AlienCore"},center={-145634000.0000,-10578000.0000,-739465.0000}},{name={"Delta","Delta","Delta"},type={"AlienCore","AlienCore","AlienCore"},center={13666000.0000,1622000.0000,-46840000.0000}},{name={"Epsilon","Epsilon","Epsilon"},type={"AlienCore","AlienCore","AlienCore"},center={48566000.0000,19622000.0000,101000000.0000}},{name={"Eta","Eta","Eta"},type={"AlienCore","AlienCore","AlienCore"},center={-73134000.0000,18722000.0000,-93700000.0000}},{name={"Gamma","Gamma","Gamma"},type={"AlienCore","AlienCore","AlienCore"},center={-64334000.0000,55522000.0000,-14400000.0000}},{name={"Iota","Iota","Iota"},type={"AlienCore","AlienCore","AlienCore"},center={966000.0000,-149278000.0000,-739465.0000}},{name={"Kappa","Kappa","Kappa"},type={"AlienCore","AlienCore","AlienCore"},center={-45534000.0000,-46878000.0000,-739465.0000}},{name={"Theta","Theta","Theta"},type={"AlienCore","AlienCore","AlienCore"},center={58166000.0000,-52378000.0000,-739465.0000}},{name={"Zeta","Zeta","Zeta"},type={"AlienCore","AlienCore","AlienCore"},center={81766000.0000,16912000.0000,23860000.0000}}}for k,l in pairs(m)do table.insert(Atlas[0],l)end;register:addAction("option5Start","PlanetSwitch",function()g=not g end)end;function self:setScreen()closestDis=1;closestID=-1;List={}local function n(o,p,q)if o==nil then return end;if o.x~=nil then o={o.x,o.y,o.z}end;local l=library.getPointOnScreen(o)if l[1]==0 and l[2]==0 and l[3]==0 then l={-10,-10,-10}end;if p~=nil then local r={l[1]-0.5,l[2]-0.5}local s=math.sqrt(r[1]^2+r[2]^2)if s<closestDis then closestDis=s;closestID=p;List=q end end;return l end;svg=[[
            <style>
                #ArMain .circle-1 {position: absolute; left: 960px; top: 540px;}
                #ArMain .Pointer {stroke:#FFFFFF;stroke-width:2;fill:none}
                #ArMain .Pointer1 {stroke:#00FF00;stroke-width:2;fill:none}
                #ArMain svg {display:block; position:absolute; top:0; left:0}
                #ArMain text {font-family:Montserrat;fill:#FFFFFF;font-size:10px;}
            </style>
        
        
            <svg id="ArMain" height="100%" width="100%" viewBox="0 0 1920 1080">
            ]]local t=construct.getWorldPosition()local u=construct.getWorldAbsoluteVelocity()local v=vec3(t)local w=construct.getWorldForward()local l;dist=200000000;for k,x in pairs(Atlas[0])do if k>400 then break end;if x.type[1]=="Planet"or x.type[1]=="AlienCore"or x.type[1]=="Station"then else goto y end;l=n(x.center,k,Atlas[0])local s=tostring(round((vec3(x.center)-v):len()/200000,2))if x.type[1]=="Planet"then svg=svg..[[<svg width="30" height="30" viewBox="-150 -150 300 300" x="]]..l[1]*1920-15 ..[[" y="]]..l[2]*1080-15 ..[[">
                    <g stroke="#ccc" fill="#999" stroke-width="24" opacity="0.6">
                    <ellipse cx="0" cy="0" rx="110" ry="110"/>
                    <path d="m 59,-90 c245,-10 -264,325 -170,110 c-40,130 310,-100 165,-110" stroke-width="12"/>
                    </g></svg>]]if g then svg=svg.."<text x=\""..l[1]*1920-(#x.name[1]+#s)*3 .."\" y=\""..l[2]*1080-20 .."\">"..x.name[1]..": "..s.."su</text>"end elseif x.type[1]=="AlienCore"then elseif x.type[1]=="Station"then end::y::end;if f.extraCoords~=nil then for k,l in pairs(f.extraCoords)do l=n(l,k,f.extraCoords)svg=svg..[[<svg width="40" height="40" viewBox="-150 -150 300 300" x="]]..l[1]*1920-20 ..[[" y="]]..l[2]*1080-20 ..[[">
                    <g stroke="#0f0" stroke-width="24" fill="#0f0">
                    <path d="m-50,-90 50,-60 50,60"/>
                    <path d="m-50,90 50,60 50,-60"/>
                    <g stroke-width="4">
                    <path d="m0,-150 0,100"/>
                    <path d="m0,50 0,100"/>
                    <path d="m5,0 4,0"/>
                    <path d="m-9,0 4,0"/>
                    </g></g></svg>]]end end;if e.getSafeZone~=nil then l=n(e:getSafeZone())svg=svg.."<circle class=\"Pointer1\" cx=\""..l[1]*1920 .."\" cy=\""..l[2]*1080 .."\" r=\"12\" />"end;if vec3(u):len()>0.5 then l=n({t[1]+u[1]*dist,t[2]+u[2]*dist,t[3]+u[3]*dist})svg=svg..[[<svg width="30" height="30" viewBox="-150 -150 300 300" x="]]..l[1]*1920-15 ..[[" y="]]..l[2]*1080-15 ..[[">
                <g stroke="#ff0" stroke-width="14" fill="none">
                <ellipse cx="0" cy="0" rx="80" ry="80"/>
                <path d="m0,-150 0,70"/>
                <path d="m-150,0 70,0"/>
                <path d="m150,0 -70,0"/>
                </g></svg>]]l=n({t[1]+u[1]*dist*-1,t[2]+u[2]*dist*-1,t[3]+u[3]*dist*-1})svg=svg..[[<svg width="30" height="30" viewBox="-150 -150 300 300" x="]]..l[1]*1920-15 ..[[" y="]]..l[2]*1080-15 ..[[">
                <g stroke="#ff0" stroke-width="14" fill="none">
                <ellipse cx="0" cy="0" rx="80" ry="80"/>
                <path d="m0,-150 0,70"/>
                <path d="m-69,40 -61,35"/>
                <path d="m69,40 61,35"/>
                <g stroke-width="4">
                <path d="M-57,-57 57,57"/>
                <path d="M-57,57 57,-57"/>
                </g></g></svg>]]end;l=n({t[1]+w[1]*dist,t[2]+w[2]*dist,t[3]+w[3]*dist})svg=svg..[[<svg width="30" height="30" viewBox="-150 -150 300 300" x="]]..l[1]*1920-15 ..[[" y="]]..l[2]*1080-15 ..[[">
                <g stroke="#fff" stroke-width="12" fill="none">
                <ellipse cx="0" cy="0" rx="2" ry="2"/>
                <path d="m-150,0 100,0 50,50 50,-50 100,0"/>
                </g></svg>]]l=n({t[1]+w[1]*dist*-1,t[2]+w[2]*dist*-1,t[3]+w[3]*dist*-1})svg=svg.."<circle class=\"Pointer\" cx=\""..l[1]*1920 .."\" cy=\""..l[2]*1080 .."\" r=\"12\" />"svg=svg.."</svg>"self.closest=List[closestID]return svg end;return self
        
        end
        package.preload[packagePrefix.."CommandHandler"] = function()
           local self={}function self:register(a)_ENV=a;local function b(c)c=string.lower(c)local d=string.sub(c,1,1)if d~=self.prefix then return end;local e=mysplit(string.sub(c,2,#c))local f,g=pcall(CommandList[1][d][1][e[1]],e)if not f then print(g)end end;register:addAction("systemOnInputText","CommandHandler",b)end;self.version=0.9;self.loadPrio=5;if unitType=="gunner"then self.prefix="/"elseif unitType=="remote"then self.prefix="!"else self.prefix="/"end;CommandList={{[self.prefix]={{["help"]=function(h)local i=h[2]if i==nil then for j,k in pairs(CommandList[1][self.prefix][2])do print(j..":  "..k)end end end},{["help"]="use this to list all commands"}}},{[self.prefix]="basic commands from the"..unitType or""}}function self:AddCommand(l,m,n)CommandList[1][self.prefix][1][l]=m;CommandList[1][self.prefix][2][l]=n or""end;return self
        
        end
        package.preload[packagePrefix.."Settings"] = function()
           self={}json=require("dkjson")require("cpml/utils")local a=getPlugin("config")self.version=0.9;self.loadPrio=5;self.Default={}self.Range={}self.Description={}function self:add(b,c,d,e,f)if b==nil or c==nil then return"missing Infos"end;e=e or""f=f or"Standard"if d==nil or type(d)~="table"then local g=type(c)if g=="boolean"then d={"boolean"}elseif g=="number"then d={"number",1,10,1}else return"missing Range Infos"end end;if self.Default[f]==nil then self.Default[f]={}self.Range[f]={}self.Description[f]={}end;self.Default[f][b]=c;self.Range[f][b]=d;self.Description[f][b]=e end;function self:rem(b,f)f=f or"Standard"self.Default[f][b]=nil;self.Range[f][b]=nil;self.Description[f][b]=nil end;function self:set(b,h,f)f=f or"Standard"local i=self.Range[f][b]local g=type(h)if i[1]~=g then return end;if g=="number"then h=utils.clamp(h,i[2],i[3])h=(h-i[2])/i[4]h=round(h)h=h*i[4]+i[2]elseif g=="string"then if not inTable(i[2],h)then return end end;a:set(f..b,h,self.Default[f][b])end;function self:get(b,f)f=f or"Standard"return a:get(f..b,self.Default[f][b])end;function self:register(j)_ENV=j end;return self
        
        end
        package.preload[packagePrefix.."config"] = function()
           local self={}local a=nil;local b={}function self:get(c,d)if a==nil then self:load()end;b[c]=true;if a[c]==nil then return d end;if d~=nil and a[c]==d then a[c]=nil;return d end;return a[c]end;function self:set(c,e,d)if a==nil then self:load()end;b[c]=true;if a[c]~=e then if e==d then a[c]=nil else a[c]=e end;self:save()end end;function self:load()if a==nil then if database~=nil and database.hasKey~=nil and database.hasKey("config")==1 then local f=database.getStringValue("config")a=json.decode(f)end;if a==nil then a={}end end end;function self:save()if a~=nil then if database~=nil and database.hasKey~=nil then database.setStringValue("config",json.encode(a))end end end;function self:cleanup()if a==nil then return end;local g=false;for h,i in pairs(a)do if b[h]==nil then g=true;a[h]=nil end end;if g then self:save()end end;function self:register(j)_ENV=j;register:addAction("systemStop","configCleanup",function()self:cleanup()end)end;return self
        
        end
        package.preload[packagePrefix.."slots"] = function()
           local self={}self.slots=nil;local a={control=true,library=true,system=true,unit=true,player=true,construct=true}function self:calcSlots()self.slots={}local b=unit or{}for c,d in pairs(b)do if a[c]==nil then if type(c)=="string"and type(d)=="table"and type(d.export)=="table"then self.slots[c]=d end end end;return self.slots end;function self:getSlots()if self.slots==nil then self:calcSlots()end;return self.slots end;self.elementsIdList=nil;function self:calcElementList()if core==nil then return end;self.elementsIdList=core.getElementIdList()end;function self:getElementList()if self.elementsIdList==nil then self:calcElementList()end;return self.elementsIdList end;local e={RemoteControlUnit="remote",CockpitHovercraftUnit="command",PVPSeatUnit="gunner",CockpitCommandmentUnit="command",CockpitFighterUnit="command"}local f={Weapo="weapon",Shiel="shield",Radar="radar",CoreU="core"}local g={AntiGravityGeneratorUnit="antigrav",WarpDriveUnit="warpdrive",DataBankUnit="databases",ReceiverUnit="receiver",EmitterUnit="emitter",ScreenUnit="screens",CombatDefense="transponder",AtmoFuelContainer="atmofueltank",SpaceFuelContainer="spacefueltank",RocketFuelContainer="rocketfueltank",CounterUnit="counter",laserDetector="laser",SpaceEngine="engine"}local h={weapon=true,databases=true,screens=true,atmofueltank=true,spacefueltank=true,rocketfueltank=true,radar=true,engine=true}local i={core={"onStressChanged(stress)"},container={"onContentUpdate()"},industry={"onStarted(id,quantity)","onCompleted(id,quantity)","onStatusChanged(status)","onBankUpdate()"},radar={"onEnter(id)","onLeave(id)","onIdentified(id)"},screens={"mouseDown(x,y)","mouseUp(x,y)","onOutputChanged(output)"},laser={"onHit()","onLoss()"},receiver={"onReceived(channel,message)"},shield={"onToggled(active)","onAbsorbed(hitpoints,rawHitpoints)","onVentin(active,restoredHitpoints)","onDown()","onRestored()"},weapon={"onReload(ammoId)","onReloaded(ammoId)","onMissed(targetId)","onDestroyed(targetId)","onElementDestroyed(targetId,itemId)","onHit(targetId,damage)"}}local function j(k)for l,m in ipairs(k)do local n,o=m:match("^([^(]+)%((.*)%)")local p={}for q in o:gmatch("[^%s,]+")do table.insert(p,q)end;for r,s in ipairs(p)do print(string.format("* Slot name %q has options %q.",n,s))end;local t=map(p,function()return"*"end)for r,s in ipairs(t)do print(string.format("* Slot name %q has options %q.",n,s))end end end;function self:register(u)_ENV=u;for type,r in pairs(h)do _ENV[type]={}end;for r,v in pairs(self:getSlots())do local w=v.getClass()local type=nil;if g[w]~=nil then type=g[w]else local x=string.sub(w,0,5)if f[x]~=nil then type=f[x]end end;if type==nil then system.print("Unrecognized Type: "..w)else if h[type]==nil then _ENV[type]=v else table.insert(_ENV[type],v)end end end;function compare(y,z)if y~=nil and y.getLocalId and z~=nil and z.getLocalId then return y.getLocalId()<z.getLocalId()end;return nil end;for type,r in pairs(h)do if#_ENV[type]>1 then table.sort(_ENV[type],compare)end end;if#_ENV["databases"]>0 then local A=getPlugin("bankraid",true)if A~=nil then _ENV["database"]=A:new(_ENV["databases"])else _ENV["database"]=_ENV["databases"][1]end end;if _ENV["unitType"]==nil or _ENV["unitType"]==""then if e[unit.getClass()]~=nil then _ENV["unitType"]=e[unit.getClass()]else system.print("Unrecognized unitTypeClass: "..unit.getClass())end end;register:addAction("antigravityStart","antigravityStart",function()if antigrav~=nil then antigrav.toggle()end end)register:addAction("systemOnUpdate","frameCounter",function()if executeTotal==nil then executeTotal=0 end;if executeSet==nil then executeSet=0 end;executeTotal=executeTotal+1;executeSet=executeSet+1;local B=system.getArkTime()if B-executeTime>1 then executeLastFrames=executeSet;executeSet=1;executeTime=B;local C=false;if C then system.print("Frames: "..executeLastFrames)end end end)register:addAction("systemOnActionStart","systemActionStartAlias",function(D,system)register:callAction(D.."Start",system)register:startHotkeyPressed(D)end)register:addAction("systemOnActionStop","systemActionStopAlias",function(D,system)register:callAction(D.."Stop",system)register:endHotkeyPressed(D)end)register:addAction("systemOnActionLoop","systemActionLoopAlias",function(D,system)register:callAction(D.."Loop",system)end)end;return self
        
        end
        package.preload[packagePrefix.."register"] = function()
           local self={}self.functionRegister={}self.overwriteRegister={}self.overwriteOrder={}self.viewRegister={}self.pressedRegister={}function self:hotkeyState(a)if self.pressedRegister[a]==1 then return 1 end;return 0 end;function self:startHotkeyPressed(a)self.pressedRegister[a]=1 end;function self:endHotkeyPressed(a)self.pressedRegister[a]=nil end;self.switches={}function self:addSwitch(b,c)assert(type(b)=="string","name isn't a string, type was "..type(b))assert(type(c)=="table",b..": entity isn't a table, type was "..type(c))self.switches[b]=c;self:callAction("registerAddSwitch",b)end;function self:getSwitch(b)assert(type(b)=="string","name isn't a string, type was "..type(b))return self.switches[b]end;function self:getSwitches()return self.switches end;self.taskRegister={}self.taskOrder={}local function d(e,f)if e~=nil and f~=nil then return self.taskRegister[e].order<self.taskRegister[f].order end;return nil end;local g=2500;function self:addTask(b,h,i,j)assert(type(b)=="string","addTask: name isn't a string, type was "..type(b))assert(type(h)=="function",b..": func isn't a function, type was "..type(h))if i==nil then i=10 else assert(type(i)=="number",b..": priority has to be number, type was "..type(i))end;if j==nil then j=g else assert(type(j)=="number",b..": rating has to be number, type was "..type(j))assert(j<=g,b..": rating has to be smaller then the allowed max rating of "..g)end;if not self:hasAction("systemUpdate","registerTasker")then self:addAction("systemUpdate","registerTasker",function()self:runTasks()end)end;if self.taskRegister[b]~=nil then self:removeTask(b)end;table.insert(self.taskOrder,b)self.taskRegister[b]={order=i,task=coroutine.create(h),rating=j}if#self.taskOrder>1 then table.sort(self.taskOrder,d)end end;function self:hasTask(b)return self.taskRegister[b]~=nil end;function self:removeTask(b)assert(type(b)=="string","removeTask: Name isn't a string, type was "..type(b))self.taskRegister[b]=nil;for k,l in pairs(self.taskOrder)do if l==b then table.remove(self.taskOrder,k)return end end end;function self:runTasks()local m=0;for n,b in ipairs(self.taskOrder)do local o=self.taskRegister[b]if m+o.rating<=g then if o.task==nil or coroutine.status(o.task)=="dead"then self:removeTask(b)else m=m+o.rating;local p,q=coroutine.resume(o.task)if not p then system.print(b.." in runTasks:",q)self:removeTask(b)end end end end end;function self:hasAction(r,b)return self.functionRegister[r]~=nil and self.functionRegister[r][b]~=nil end;function self:addAction(r,b,h)assert(type(r)=="string","action isn't a string, type was "..type(r))assert(type(b)=="string",r..": name isn't a string, type was "..type(b))assert(type(h)=="function",r..":"..b..": func isn't a function, type was "..type(h))if self.functionRegister[r]==nil then self.functionRegister[r]={}end;self.functionRegister[r][b]=h end;function self:removeAction(r,b)if self.functionRegister[r]==nil or self.functionRegister[r][b]==nil then return false end;self.functionRegister[r][b]=nil;return true end;function self:callAction(r,...)local s={}if self.functionRegister[r]~=nil then for b,h in pairs(self.functionRegister[r])do if h~=nil then local t,u=pcall(h,...)if t then s[b]=u else system.print(b.." in callAction:",u)end end end end;return s end;function self:callActionSpecific(r,b,...)assert(self.functionRegister[r]=="table",r..":".." not registered")assert(self.functionRegister[r][b]=="function",r..":"..b..": called specified function isn't a function, type was "..type(self.functionRegister[r][b]))local t,u=pcall(self.functionRegister[r][b],...)if t then return u else system.print(b.." in callActionSpecific:",u)end end;return self
        
        end
        system.rawPrint=system.print;function system.print(a,b)if b then b=tostring(b):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"','chunk'):gsub("&","&amp;"):gsub("<","&lt;"):gsub(">","&gt;")else b="???"end;system.rawPrint(a.." "..b)end;function print(c)system.rawPrint(tostring(c))end;if devMode==true and player.hasDRMAutorization()~=1 then print("devMode set but no DRM auth")error("devMode set but no DRM auth")unit.exit()end;if unit.hasDRM()==0 then if devMode~=true then print("DRM Required")error("DRM Required")unit.exit()else print("DRM requirement skipped by devMode")end end;unit.hideWidget()print("Hyperion Gunner Script V0.92")print("by Hyperion Scripting")system.showScreen(1)system.setScreen([[<svg xmlns="http://www.w3.org/2000/svg" width="40%" style="left:30%;top:10%;display:block; position:absolute;" viewBox="0 0 973.35 837.57">
            <defs>
            <style>
            .cls-1 { fill: #798a99; }
            .cls-2 { fill: #bd1730; }
            </style>
            </defs>
            <path class="cls-1" d="M583,93.5H437.52C353.65,361.21,211.41,603.08,25.7,804.26L98.3,930a1892.42,1892.42,0,0,1,828.89-.22l70.63-122.29C810.63,605.68,667.33,362.63,583,93.5ZM508.29,740.05A945,945,0,0,0,206.5,789.18C357.22,655.35,464.94,474.16,506.32,269c41.16,204.15,148,384.54,297.51,518.13A945.66,945.66,0,0,0,508.29,740.05Z" transform="translate(-25.08 -93)"/>
            <circle class="cls-2" cx="481.42" cy="523.5" r="118"/>
            </svg>
            <svg height="100%" width="100%" viewBox="0 0 1920 1080" style="left:0;top:0;display:block; position:absolute;">
            <text x="40%" y="88%" style="fill:#FFFFFF;font-size:50px">Hyperion Scripting</text>
            </svg>]])local d={}local e={}function d:getPlugin(f,g,h)assert(type(f)=="string","getPlugin: parameter name has to be string, was "..type(f))if g==nil then g=false end;if string.find(f,packagePrefix)then f=string.gsub(f,packagePrefix,"")end;if not d:hasPlugin(f,g)then return nil end;if type(e[f])=="table"and e[f].valid~=nil then if e[f]:valid(h)~=true then return nil end end;return e[f]end;function d:hasPlugin(f,g)assert(type(f)=="string","hasPlugin: parameter name has to be string, was "..type(f))if g==nil then g=false end;if string.find(f,packagePrefix)then f=string.gsub(f,packagePrefix,"")end;if e[f]==nil then e[f]=false;if player.hasDRMAutorization()~=1 and package.preload[packagePrefix..f]==nil then print("hasPlugin '"..f.."': DRM auth required to load external files")else local i,j=pcall(require,packagePrefix..f)if not i then if g==nil or not g then system.print("hasPlugin '"..f.."': require failed",j)end else e[f]=j end end;if type(e[f])=="table"then if e[f].register~=nil then if _ENV["debugscreen"]==nil then _ENV["debugscreen"]=debugscreen end;if _ENV["register"]==nil then _ENV["register"]=register end;if _ENV["system"]==nil then _ENV["system"]=system end;if _ENV["unit"]==nil then _ENV["unit"]=unit end;if _ENV["player"]==nil then _ENV["player"]=player end;if _ENV["construct"]==nil then _ENV["construct"]=construct end;if _ENV["library"]==nil then _ENV["library"]=library end;local k,l=pcall(e[f].register,e[f],_ENV)if not k and not g then system.print("hasPlugin '"..f.."': register failed",l)end end else if e[f]~=nil and e[f]~=false then if type(e[f])=="string"then print("hasPlugin '"..f.."':"..e[f])else print("hasPlugin '"..f.."': not table value")end end end end;return type(e[f])=="table"end;function hasPlugin(f,g)return d:hasPlugin(f,g)end;function getPlugin(f,g,h)return d:getPlugin(f,g,h)end;local m={}unitType=""renderEveryXFrames=1;executeTotal=0;executeSet=0;executeTime=0;executeLastFrames=0;screenToggle=true;mode=-1;forceMode=-1;bootTime=system.getArkTime()useLightStyle=false;local n=120;local o=184;modeColors={}modeColors[0]=n;modeColors[1]=o;fuelTankHandlingSpace=3;fuelTankHandlingRocket=0;ContainerOptimization=4;FuelTankOptimization=4;function collect_keys(p,q)local r={}for s in pairs(p)do r[#r+1]=s end;table.sort(r,q)return r end;function sortedPairs(p,q)local t=collect_keys(p,q)local u=0;return function()u=u+1;if t[u]then return t[u],p[t[u]]end end end;function tableLength(v)local w=0;for x in pairs(v)do w=w+1 end;return w end;function timeit(y,z)collectgarbage()local A=system.getTime()local B=z()local C=system.getTime()print(y..": "..C-A)return B end;function getRelativePitch(D)return math.deg(math.atan(D[2],D[3]))-90 end;function getRelativeYaw(D)return math.deg(math.atan(D[2],D[1]))-90 end;function mysplit(E,F)if F==nil then F="%s"end;local p={}for c in string.gmatch(E,"([^"..F.."]+)")do table.insert(p,c)end;return p end;function inTable(G,H)if type(G)~="table"then return false end;for s,I in pairs(G)do if I==H then return true,s end end;return false end;function round(J,K)local L=10^(K or 0)if K~=nil then return math.floor(J*L+0.5)/L else return math.floor((J*L+0.5)/L)end end;if not inTable(player.getOrgIds(),2041)then system.print("Corp signatur required")error("Corp signatur required")unit.exit()end;register=getPlugin("register")slots=getPlugin("slots")register:callAction("systemStart")local M={}function addTimer(N,O,P)unit.setTimer(N,O)M[N]=P end;function onTimer(Q)if M[Q]~=nil then local R,S=pcall(M[Q])if not R then print("Timer:"..S.."  "..Q)end end end;function stopTimer()for s,x in pairs(M)do unit.setTimer(s,0)end end;local T=0;function delay(U,O)local N="DelayCounter"..T;addTimer(N,O,function()pcall(U)unit.stopTimer(N)end)T=T+1 end;register:addAction("unitOnTimer","Timer",onTimer)if devMode==true then getPlugin("dev",true)end;getPlugin("optionals",true)for f,x in sortedPairs(package.preload)do getPlugin(f,true)end;delay(function()register:callAction("unitOnStart")end,0.5)
        
    onStop:
      lua: if register ~= nil then register:callAction("unitOnStop",unit) end
    onTimer(tag):
      lua: if register ~= nil then register:callAction("unitOnTimer",tag,unit) end
  system:
    onActionStart(action):
      lua: if register ~= nil then register:callAction("systemOnActionStart",action,system) end
    onActionStop(action):
      lua: if register ~= nil then register:callAction("systemOnActionStop",action,system) end
    onActionLoop(action):
      lua: if register ~= nil then register:callAction("systemOnActionLoop",action,system) end
    onUpdate:
      lua: if register ~= nil then register:callAction("systemOnUpdate",system) end
    onFlush:
      lua: if register ~= nil then register:callAction("systemOnFlush",system) end
    onInputText(text):
      lua: if register ~= nil then register:callAction("systemOnInputText",text,system) end
  core:
    onStressChanged(stress):
      lua: if register ~= nil then register:callAction("coreOnStressChanged",stress,core) end
